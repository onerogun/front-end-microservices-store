[{"/media/ogn/Multimedia/ReactPrjs/front-end/src/index.js":"1","/media/ogn/Multimedia/ReactPrjs/front-end/src/App.js":"2","/media/ogn/Multimedia/ReactPrjs/front-end/src/Contexts/ServerContext.js":"3","/media/ogn/Multimedia/ReactPrjs/front-end/src/Contexts/ProductContext.js":"4","/media/ogn/Multimedia/ReactPrjs/front-end/src/Contexts/LoginSuccessContext.js":"5","/media/ogn/Multimedia/ReactPrjs/front-end/src/Contexts/CustomerProfileContext.js":"6","/media/ogn/Multimedia/ReactPrjs/front-end/src/Contexts/ManagedProductContext.js":"7","/media/ogn/Multimedia/ReactPrjs/front-end/src/Contexts/CartContext.js":"8","/media/ogn/Multimedia/ReactPrjs/front-end/src/Contexts/ChatContext.js":"9","/media/ogn/Multimedia/ReactPrjs/front-end/src/ProductSource/EditProductDescription.js":"10","/media/ogn/Multimedia/ReactPrjs/front-end/src/ProductSource/Product.js":"11","/media/ogn/Multimedia/ReactPrjs/front-end/src/ProductSource/AddProduct.js":"12","/media/ogn/Multimedia/ReactPrjs/front-end/src/ProductSource/ProductDetails.js":"13","/media/ogn/Multimedia/ReactPrjs/front-end/src/Auth/Login.js":"14","/media/ogn/Multimedia/ReactPrjs/front-end/src/Auth/PasswordResetRequest.js":"15","/media/ogn/Multimedia/ReactPrjs/front-end/src/Auth/PasswordReset.js":"16","/media/ogn/Multimedia/ReactPrjs/front-end/src/SignUp/CustomerSignUp.js":"17","/media/ogn/Multimedia/ReactPrjs/front-end/src/Components/Navbar.js":"18","/media/ogn/Multimedia/ReactPrjs/front-end/src/Images/EditPictures.js":"19","/media/ogn/Multimedia/ReactPrjs/front-end/src/Profile/CustomerProfile.js":"20","/media/ogn/Multimedia/ReactPrjs/front-end/src/Images/Image.js":"21","/media/ogn/Multimedia/ReactPrjs/front-end/src/Profile/EditCustomerProfile.js":"22","/media/ogn/Multimedia/ReactPrjs/front-end/src/Manage/ManageProducts.js":"23","/media/ogn/Multimedia/ReactPrjs/front-end/src/Orders/Orders.js":"24","/media/ogn/Multimedia/ReactPrjs/front-end/src/Cart/Cart.js":"25","/media/ogn/Multimedia/ReactPrjs/front-end/src/Review/WriteReview.js":"26","/media/ogn/Multimedia/ReactPrjs/front-end/src/Manage/EditProduct.js":"27","/media/ogn/Multimedia/ReactPrjs/front-end/src/Chat/Chat.js":"28","/media/ogn/Multimedia/ReactPrjs/front-end/src/Images/ProductCoverImage.js":"29","/media/ogn/Multimedia/ReactPrjs/front-end/src/Images/UploadProductImage.js":"30","/media/ogn/Multimedia/ReactPrjs/front-end/src/Components/ItemRating.js":"31","/media/ogn/Multimedia/ReactPrjs/front-end/src/Components/FilterBar.js":"32","/media/ogn/Multimedia/ReactPrjs/front-end/src/Review/Reviews.js":"33","/media/ogn/Multimedia/ReactPrjs/front-end/src/Auth/LoginModal.js":"34","/media/ogn/Multimedia/ReactPrjs/front-end/src/Profile/EditSuccessModal.js":"35","/media/ogn/Multimedia/ReactPrjs/front-end/src/Chat/ChatArea.js":"36","/media/ogn/Multimedia/ReactPrjs/front-end/src/ProductSource/EditProductDefinition.js":"37"},{"size":410,"mtime":1610846178377,"results":"38","hashOfConfig":"39"},{"size":4884,"mtime":1613830110405,"results":"40","hashOfConfig":"39"},{"size":389,"mtime":1613090883815,"results":"41","hashOfConfig":"39"},{"size":2685,"mtime":1613762118495,"results":"42","hashOfConfig":"39"},{"size":1565,"mtime":1613761401538,"results":"43","hashOfConfig":"39"},{"size":2071,"mtime":1613851615222,"results":"44","hashOfConfig":"39"},{"size":1211,"mtime":1613780854201,"results":"45","hashOfConfig":"39"},{"size":3654,"mtime":1613763613113,"results":"46","hashOfConfig":"39"},{"size":5955,"mtime":1613761273109,"results":"47","hashOfConfig":"39"},{"size":3709,"mtime":1611350655232,"results":"48","hashOfConfig":"39"},{"size":8090,"mtime":1613761954885,"results":"49","hashOfConfig":"39"},{"size":5733,"mtime":1613836766363,"results":"50","hashOfConfig":"39"},{"size":4469,"mtime":1613830268894,"results":"51","hashOfConfig":"39"},{"size":4071,"mtime":1613761954891,"results":"52","hashOfConfig":"39"},{"size":2014,"mtime":1611520190979,"results":"53","hashOfConfig":"39"},{"size":3204,"mtime":1611160188674,"results":"54","hashOfConfig":"39"},{"size":5818,"mtime":1611756614057,"results":"55","hashOfConfig":"39"},{"size":5564,"mtime":1613763209510,"results":"56","hashOfConfig":"39"},{"size":3950,"mtime":1611756859103,"results":"57","hashOfConfig":"39"},{"size":2754,"mtime":1613850132461,"results":"58","hashOfConfig":"39"},{"size":5187,"mtime":1613600708055,"results":"59","hashOfConfig":"39"},{"size":6001,"mtime":1613851422890,"results":"60","hashOfConfig":"39"},{"size":3522,"mtime":1613780922383,"results":"61","hashOfConfig":"39"},{"size":3861,"mtime":1613763613108,"results":"62","hashOfConfig":"39"},{"size":4181,"mtime":1613763145705,"results":"63","hashOfConfig":"39"},{"size":2687,"mtime":1613761954757,"results":"64","hashOfConfig":"39"},{"size":3239,"mtime":1613830293647,"results":"65","hashOfConfig":"39"},{"size":5761,"mtime":1613761023379,"results":"66","hashOfConfig":"39"},{"size":1385,"mtime":1612473758715,"results":"67","hashOfConfig":"39"},{"size":3427,"mtime":1613685966532,"results":"68","hashOfConfig":"39"},{"size":980,"mtime":1611744980296,"results":"69","hashOfConfig":"39"},{"size":2997,"mtime":1613763179733,"results":"70","hashOfConfig":"39"},{"size":2040,"mtime":1611756401912,"results":"71","hashOfConfig":"39"},{"size":1025,"mtime":1611756784164,"results":"72","hashOfConfig":"39"},{"size":1057,"mtime":1611756727290,"results":"73","hashOfConfig":"39"},{"size":3725,"mtime":1613761954647,"results":"74","hashOfConfig":"39"},{"size":5943,"mtime":1613836700044,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1n0fk5w",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"78"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"78"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"78"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"78"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"78"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"78"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"78"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"78"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"78"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"78"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"78"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"78"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"78"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"78"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"78"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"78"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"78"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"78"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"78"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"78"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"78"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"78"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"78"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"78"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"78"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"78"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"78"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"78"},"/media/ogn/Multimedia/ReactPrjs/front-end/src/index.js",[],["180","181"],"/media/ogn/Multimedia/ReactPrjs/front-end/src/App.js",[],"/media/ogn/Multimedia/ReactPrjs/front-end/src/Contexts/ServerContext.js",["182"],"import React, { useState } from \"react\";\r\n\r\nexport const ServerContext = React.createContext();\r\n//http://192.168.49.2:31000\r\n//http://localhost:9191\r\nexport const ServerProvider = (props) => {\r\n  const [server, setServer] = useState(\"http://192.168.49.2:31000\");\r\n\r\n  return (\r\n    <ServerContext.Provider value={server}>\r\n      {props.children}\r\n    </ServerContext.Provider>\r\n  );\r\n};\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/Contexts/ProductContext.js",["183","184"],"import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport axios from \"axios\";\r\n\r\n//http://localhost:9191/items/getItemsPage?pageNo=0&pageSize=3&sortBy=itemId\r\n\r\nexport const ProductContext = React.createContext();\r\n\r\nexport const ProductProvider = (props) => {\r\n  const [products, setProducts] = useState([]);\r\n  const server = useContext(ServerContext);\r\n\r\n  const [productChange, setProductChange] = useState([]);\r\n\r\n  //If filtered before and saved to session storage, use those props otherwise use default\r\n  // const stored = sessionStorage.getItem(\"filter\");\r\n  /* const searchProps = useRef(\r\n    stored\r\n      ? JSON.parse(stored)\r\n      : {\r\n          pageNo: 0,\r\n          pageSize: 1,\r\n          sortBy: \"itemPrice\",\r\n          direction: 1,\r\n          min: 0,\r\n          max: 9999999,\r\n        }\r\n  );*/\r\n  // console.log(searchProps.current);\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(1);\r\n  const [sortBy, setSortBy] = useState(\"itemPrice\");\r\n  const [direction, setDirection] = useState(1);\r\n\r\n  const [minPriceFilter, setMinPriceFilter] = useState(0);\r\n  const [maxPriceFilter, setMaxPriceFilter] = useState(9999999);\r\n\r\n  const [numberOfTotalPages, setNumberOfTotalPages] = useState();\r\n\r\n  useEffect(() => {\r\n    const FetchProducts = () => {\r\n      axios\r\n        .get(`${server}/items/getItemsPage`, {\r\n          params: {\r\n            pageNo: currentPage,\r\n            pageSize: pageSize,\r\n            sortBy: sortBy,\r\n            direction: direction,\r\n            min: minPriceFilter,\r\n            max: maxPriceFilter,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          setProducts(res.data.data);\r\n          setNumberOfTotalPages(res.data.NumberOfTotalPages);\r\n        });\r\n    };\r\n    FetchProducts();\r\n  }, [\r\n    currentPage,\r\n    pageSize,\r\n    sortBy,\r\n    direction,\r\n    minPriceFilter,\r\n    maxPriceFilter,\r\n    productChange,\r\n  ]);\r\n\r\n  /*\r\n    currentPage,\r\n    pageSize,\r\n    sortBy,\r\n    direction,\r\n    minPriceFilter,\r\n    maxPriceFilter,\r\n\r\n  */\r\n\r\n  return (\r\n    <ProductContext.Provider\r\n      value={{\r\n        products,\r\n        setProducts,\r\n        currentPage,\r\n        setCurrentPage,\r\n        pageSize,\r\n        setPageSize,\r\n        sortBy,\r\n        setSortBy,\r\n        numberOfTotalPages,\r\n        direction,\r\n        setDirection,\r\n        minPriceFilter,\r\n        setMinPriceFilter,\r\n        maxPriceFilter,\r\n        setMaxPriceFilter,\r\n        setProductChange,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ProductContext.Provider>\r\n  );\r\n};\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/Contexts/LoginSuccessContext.js",["185"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport axios from \"axios\";\r\n\r\nexport const LoginSuccessContext = React.createContext();\r\n\r\nexport const LoginSuccessProvider = (props) => {\r\n  const server = useContext(ServerContext);\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [customerFK, setCustomerFK] = useState(null);\r\n  const [loginWithJWTSuccess, setLoginWithJWTSuccess] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"TokenJWT\")) {\r\n      checkAuthorization();\r\n    }\r\n  }, [loggedIn]);\r\n\r\n  const checkAuthorization = () => {\r\n    axios\r\n      .get(`${server}/auth/checkJWT`, {\r\n        headers: {\r\n          Authorization: localStorage.getItem(\"TokenJWT\"),\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.status);\r\n        if (res.status === 200) {\r\n          console.log(\"logged in\");\r\n\r\n          var FK = res.headers.cookie.replace(\"custFK=\", \"\");\r\n          console.log(\"FK: \" + FK);\r\n          // sessionStorage.setItem(\"custFK\", FK);\r\n          setCustomerFK(FK);\r\n          setLoggedIn(true);\r\n          setLoginWithJWTSuccess(true);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <LoginSuccessContext.Provider\r\n      value={{\r\n        loggedIn,\r\n        setLoggedIn,\r\n        customerFK,\r\n        setCustomerFK,\r\n        loginWithJWTSuccess,\r\n        setLoginWithJWTSuccess,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </LoginSuccessContext.Provider>\r\n  );\r\n};\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/Contexts/CustomerProfileContext.js",["186","187","188","189","190"],"/media/ogn/Multimedia/ReactPrjs/front-end/src/Contexts/ManagedProductContext.js",["191","192","193","194"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport { CustomerProfileContext } from \"./CustomerProfileContext\";\r\nimport axios from \"axios\";\r\n\r\nexport const ManagedProductContext = React.createContext();\r\n\r\nexport const ManagedProductProvider = (props) => {\r\n  const [myProducts, setMyProducts] = useState([]);\r\n  const server = useContext(ServerContext);\r\n  const [itemUpdate, setItemUpdate] = useState([]);\r\n\r\n  const {\r\n    customerProfile,\r\n    userProfile,\r\n    setCustomerProfile,\r\n    setUserProfile,\r\n  } = useContext(CustomerProfileContext);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${server}/items/getUserItems/${customerProfile.customerId}`, {\r\n        headers: {\r\n          Authorization: localStorage.getItem(\"TokenJWT\"),\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setMyProducts(res.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, [customerProfile, itemUpdate]);\r\n\r\n  return (\r\n    <ManagedProductContext.Provider\r\n      value={{ myProducts, itemUpdate, setItemUpdate }}\r\n    >\r\n      {props.children}\r\n    </ManagedProductContext.Provider>\r\n  );\r\n};\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/Contexts/CartContext.js",["195","196","197","198","199"],"import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport axios from \"axios\";\r\nimport { CustomerProfileContext } from \"./CustomerProfileContext\";\r\nimport { LoginSuccessContext } from \"./LoginSuccessContext\";\r\n\r\nexport const CartContext = React.createContext();\r\n\r\nconst CartProvider = (props) => {\r\n  const cartInLocalStorage = localStorage.getItem(\"cartcontent\");\r\n  const savedCart = useRef(\r\n    cartInLocalStorage ? JSON.parse(cartInLocalStorage) : []\r\n  );\r\n  const [cart, setCart] = useState(savedCart.current);\r\n  const server = useContext(ServerContext);\r\n  const [cartOrderItems, setCartOrderItems] = useState([]);\r\n  const { customerProfile } = useContext(CustomerProfileContext);\r\n  const {\r\n    loggedIn,\r\n    setLoggedIn,\r\n    customerFK,\r\n    setCustomerFK,\r\n    loginWithJWTSuccess,\r\n  } = useContext(LoginSuccessContext);\r\n  const [firstFetchDone, setFirstFetchDone] = useState(false);\r\n\r\n  /**\r\n   * When a user  LOGGED IN , get saved cart from server\r\n   */\r\n  useEffect(() => {\r\n    console.log(\"firstfetch : \" + firstFetchDone + customerFK);\r\n    if (loggedIn && !firstFetchDone && customerFK) {\r\n      console.log(\r\n        \"<<<<<<<<<<<<<<<<<doin first fetch>>>>>>>>>>>>>>>>>>>>>>><<<<\"\r\n      );\r\n      axios\r\n        .get(`${server}/order/getSavedCartWithOrderContentList/${customerFK}`, {\r\n          headers: {\r\n            Authorization: localStorage.getItem(\"TokenJWT\"),\r\n          },\r\n        })\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          localStorage.setItem(\r\n            \"cartcontent\",\r\n            JSON.stringify(res.data.orderContentList.orderContentList)\r\n          );\r\n          //savedCart.current = JSON.parse(localStorage.getItem(\"cartcontent\"));\r\n          setCart(res.data.orderContentList.orderContentList);\r\n          setCartOrderItems(res.data.savedCart.orderItemList);\r\n        })\r\n        .catch((err) => console.log(err));\r\n      console.log(\"SETTING FIRST FETCH DONE TRUE\");\r\n      setFirstFetchDone(true);\r\n    }\r\n  }, [customerFK]);\r\n\r\n  /**\r\n   * If a user logged in, save cart changes to database and get orderitems\r\n   * otherwise, just get orderitems\r\n   */\r\n  console.log(\"token in cart\" + localStorage.getItem(\"TokenJWT\"));\r\n  console.log(\"firstFetchDone: \" + firstFetchDone + \" loggedIn: \" + loggedIn);\r\n\r\n  useEffect(() => {\r\n    if (firstFetchDone && loggedIn) {\r\n      axios\r\n        .post(\r\n          `${server}/order/saveCart/${customerProfile.customerId}`,\r\n          { orderContentList: cart },\r\n          {\r\n            headers: {\r\n              Authorization: localStorage.getItem(\"TokenJWT\"),\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        )\r\n        .then((res) => setCartOrderItems(res.data))\r\n        .catch((err) => console.log(err));\r\n    } else {\r\n      if (cart.length > 0) {\r\n        axios\r\n          .post(\r\n            `${server}/order/getCartDetails`,\r\n            { orderContentList: cart },\r\n            {\r\n              headers: { \"Content-Type\": \"application/json\" },\r\n            }\r\n          )\r\n          .then((res) => setCartOrderItems(res.data))\r\n          .catch((err) => console.log(err));\r\n      } else {\r\n        setCartOrderItems([]);\r\n      }\r\n    }\r\n  }, [cart, customerProfile]);\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{\r\n        cart,\r\n        setCart,\r\n        savedCart,\r\n        cartOrderItems,\r\n        setCartOrderItems,\r\n        firstFetchDone,\r\n        setFirstFetchDone,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/Contexts/ChatContext.js",["200","201","202","203","204","205","206","207","208","209"],"import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport { Client } from \"@stomp/stompjs\";\r\nimport { CustomerProfileContext } from \"./CustomerProfileContext\";\r\nimport { LoginSuccessContext } from \"./LoginSuccessContext\";\r\nimport { ServerContext } from \"./ServerContext\";\r\n\r\nexport const ChatContext = React.createContext();\r\n\r\nexport const ChatProvider = (props) => {\r\n  const client = useRef(new Client());\r\n  const [connected, setConnected] = useState(false);\r\n  const [subscribedTopics, setSubscribedTopics] = useState([]);\r\n  const server = useContext(ServerContext);\r\n  const {\r\n    customerProfile,\r\n    userProfile,\r\n    setCustomerProfile,\r\n    setUserProfile,\r\n  } = useContext(CustomerProfileContext);\r\n\r\n  const arr = useRef([]);\r\n  const [chat, setChat] = useState([]);\r\n\r\n  const [chatIndex, setChatIndex] = useState(-1);\r\n\r\n  const {\r\n    loggedIn,\r\n    setLoggedIn,\r\n    customerFK,\r\n    setCustomerFK,\r\n    loginWithJWTSuccess,\r\n  } = useContext(LoginSuccessContext);\r\n\r\n  /**\r\n   * first open websocket and subscribe to certain endpoints\r\n   */\r\n  useEffect(() => {\r\n    if (loggedIn && customerProfile) {\r\n      console.log(\"trying to connect\");\r\n      let srvr = server.replace(\"http://\", \"\");\r\n      client.current.configure({\r\n        brokerURL: `ws://${srvr}/mywebsockets`,\r\n        onConnect: () => {\r\n          /**\r\n           * get list of previously subscribed topics\r\n           * and set in state\r\n           */\r\n          console.log(\"connected!!! \");\r\n          client.current.subscribe(\r\n            `/app/getTopics/${customerProfile.customerId}`,\r\n            (message) => {\r\n              console.log(\"subd topics: \" + message.body);\r\n              if (message.body) {\r\n                setSubscribedTopics(JSON.parse(message.body));\r\n              }\r\n            }\r\n          );\r\n\r\n          /**\r\n           * when a new topic opened, it is sent here and state updated\r\n           * then view is updated\r\n           */\r\n          client.current.subscribe(\r\n            `/queue/${customerProfile.customerId}`,\r\n            (message) => {\r\n              console.log(\"new topic added: \" + JSON.stringify(message.body));\r\n              setSubscribedTopics(JSON.parse(message.body));\r\n            }\r\n          );\r\n          setConnected(true);\r\n        },\r\n      });\r\n    }\r\n  }, [customerProfile]);\r\n\r\n  /**\r\n   * When list of subscribed topics change, create new array for topics\r\n   * and details\r\n   */\r\n  useEffect(() => {\r\n    if (loggedIn && customerProfile) {\r\n      console.log(\"subbed topic change\");\r\n      console.log(subscribedTopics);\r\n      /**\r\n       * extract publisher and use it to open a new topic when replying\r\n       */\r\n      subscribedTopics.forEach((topicName, index) => {\r\n        var publisherIdDash = topicName.replace(\"Publisher:\", \"\");\r\n        var publisher = publisherIdDash.substring(\r\n          0,\r\n          publisherIdDash.indexOf(\"-\")\r\n        );\r\n        /**\r\n         * message is for incoming messages, sendMessage is for messages that will\r\n         * be sent by subscriber\r\n         * Add new object to chat only if new topic is not already in chat\r\n         * (publisher is the user who are sending messages to this topic)\r\n         */\r\n        if (arr.current.findIndex((msg) => msg.topic === topicName) < 0) {\r\n          arr.current.push({\r\n            topic: topicName,\r\n            publisher: publisher,\r\n            message: [],\r\n            sendMessage: \"\",\r\n            youSent: [],\r\n          });\r\n        }\r\n        setChat([...arr.current]);\r\n      });\r\n\r\n      subscribedTopics.forEach((topicName, index) => {\r\n        /**\r\n         * adds received chat to the array only when a new message is received\r\n         */\r\n        client.current.subscribe(`/queue/${topicName}`, (message) => {\r\n          console.log(\"newmsg:\" + message.body);\r\n          arr.current[index].message = [\r\n            ...arr.current[index].message,\r\n            message.body,\r\n          ];\r\n          if (\r\n            arr.current[index].message.length >\r\n            arr.current[index].youSent.length\r\n          ) {\r\n            arr.current[index].youSent = [...arr.current[index].youSent, \"\"];\r\n          }\r\n\r\n          setChat([...arr.current]);\r\n        });\r\n      });\r\n      /**\r\n       * sets chat array\r\n       */\r\n      setChat([...arr.current]);\r\n    }\r\n  }, [subscribedTopics]);\r\n\r\n  /**\r\n   * Stores previous subscription\r\n   */\r\n  const subscription = useRef();\r\n\r\n  useEffect(() => {\r\n    if (loggedIn && customerProfile) {\r\n      if (connected && client.current) {\r\n        /**\r\n         * First unsubscribe previous subscription\r\n         */\r\n        if (subscription.current) {\r\n          subscription.current.unsubscribe();\r\n        }\r\n        /**\r\n         *And subscribe to current chat. server will always send back\r\n         * messages\r\n         */\r\n        subscription.current = client.current.subscribe(\r\n          `/user/queue/chat`,\r\n          (message) => {\r\n            console.log(\"sent msg: \" + message.body);\r\n\r\n            arr.current[chatIndex].youSent = [\r\n              ...arr.current[chatIndex].youSent,\r\n              message.body,\r\n            ];\r\n\r\n            if (\r\n              arr.current[chatIndex].youSent.length >\r\n              arr.current[chatIndex].message.length\r\n            ) {\r\n              arr.current[chatIndex].message = [\r\n                ...arr.current[chatIndex].message,\r\n                \"\",\r\n              ];\r\n            }\r\n            console.log(arr.current);\r\n            setChat([...arr.current]);\r\n          }\r\n        );\r\n      }\r\n    }\r\n  }, [chatIndex]);\r\n\r\n  return (\r\n    <ChatContext.Provider\r\n      value={{\r\n        connected,\r\n        subscribedTopics,\r\n        chat,\r\n        setChat,\r\n        client,\r\n        arr,\r\n        setConnected,\r\n        chatIndex,\r\n        setChatIndex,\r\n\r\n        setSubscribedTopics,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ChatContext.Provider>\r\n  );\r\n};\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/ProductSource/EditProductDescription.js",["210"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport axios from \"axios\";\r\n\r\nexport const EditProductDescription = (props) => {\r\n  const [inputFields, setInputFields] = useState([{ nameOf: \"\", valueOf: \"\" }]);\r\n\r\n  const server = useContext(ServerContext);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${server}/itemDetails/getItemDetails/${props.match.params.itemId}`)\r\n      .then((res) => {\r\n        console.log(res.data.itemDetailsList);\r\n        if (res.data.itemDetailsList) {\r\n          setInputFields(res.data.itemDetailsList);\r\n        }\r\n      });\r\n  }, [props.match.params.itemId]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(inputFields);\r\n\r\n    const itemDetailsToSend = {\r\n      itemId: props.match.params.itemId,\r\n      itemDetailsList: inputFields,\r\n    };\r\n\r\n    console.log(itemDetailsToSend);\r\n\r\n    axios\r\n      .post(`${server}/itemDetails/saveItemDetails`, itemDetailsToSend, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        window.alert(\"Item details saved!\");\r\n        props.history.push(`/product-details/${props.match.params.itemId}`);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const addField = () => {\r\n    setInputFields([...inputFields, { nameOf: \"\", valueOf: \"\" }]);\r\n  };\r\n\r\n  const removeField = (index) => {\r\n    const values = [...inputFields];\r\n    values.splice(index, 1);\r\n    setInputFields(values);\r\n  };\r\n\r\n  function handleInputChange(event, index) {\r\n    const values = [...inputFields];\r\n    values[index][event.target.name] = event.target.value;\r\n    setInputFields(values);\r\n  }\r\n\r\n  if (!inputFields) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container \">\r\n      <h2 className=\"text-center\">Enter/Edit Product Properties</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        {inputFields.map((field, index) => {\r\n          return (\r\n            <div className=\"row my-4\" key={index}>\r\n              <div className=\"col-3 form-floating\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"nameOf\"\r\n                  id=\"floatingNameOf\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Property\"\r\n                  value={field.nameOf}\r\n                  onChange={(e) => handleInputChange(e, index)}\r\n                />\r\n                <label for=\"floatingNameOf\">Property Name</label>\r\n              </div>\r\n              <div className=\"col-7 form-floating\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"valueOf\"\r\n                  id=\"floatingValueOf\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Property Value\"\r\n                  value={field.valueOf}\r\n                  onChange={(e) => handleInputChange(e, index)}\r\n                />\r\n                <label for=\"floatingValueOf\">Property Value</label>\r\n              </div>\r\n              <div className=\"col-2\">\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  type=\"button\"\r\n                  onClick={() => removeField(index)}\r\n                >\r\n                  Remove Field\r\n                </button>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Submit\r\n        </button>\r\n        <button\r\n          className=\"btn btn-secondary mx-5\"\r\n          type=\"button\"\r\n          onClick={addField}\r\n        >\r\n          Add New Field\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/ProductSource/Product.js",["211","212","213","214","215","216","217","218","219","220","221","222","223","224"],"import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport { ProductContext } from \"../Contexts/ProductContext\";\r\nimport { ProductCoverImage } from \"../Images/ProductCoverImage\";\r\nimport { FilterBar } from \"../Components/FilterBar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ItemRating } from \"../Components/ItemRating\";\r\n\r\nexport const Product = () => {\r\n  const {\r\n    products,\r\n    setProducts,\r\n    currentPage,\r\n    setCurrentPage,\r\n    pageSize,\r\n    setPageSize,\r\n    sortBy,\r\n    setSortBy,\r\n    numberOfTotalPages,\r\n    direction,\r\n    setDirection,\r\n    minPriceFilter,\r\n    setMinPriceFilter,\r\n    maxPriceFilter,\r\n    setMaxPriceFilter,\r\n  } = useContext(ProductContext);\r\n\r\n  //Array to show page numbers on pagination and change current page\r\n  const [pageNumberArray, setPageNumberArray] = useState([]);\r\n\r\n  //last page on pagination dashboard to update pageNumberArray when necessary\r\n  const [endOfPageSet, setEndOfPageSet] = useState(4);\r\n  if (currentPage > endOfPageSet) {\r\n    setEndOfPageSet((prev) => prev + 5);\r\n  }\r\n\r\n  if (currentPage < endOfPageSet - 4) {\r\n    setEndOfPageSet((prev) => prev - 5);\r\n  }\r\n\r\n  useEffect(() => {\r\n    var arr = [];\r\n    //If pressing prev and first element of pageNumberArray is bigger than or equal to current page number,\r\n    //load previous pages\r\n    if (endOfPageSet === currentPage && pageNumberArray[0] >= currentPage) {\r\n      for (\r\n        let index = endOfPageSet;\r\n        index >= endOfPageSet - 5 && index >= 0;\r\n        index--\r\n      ) {\r\n        arr.unshift(index);\r\n      }\r\n    } else if (\r\n      //If last page button is pressed\r\n      currentPage === numberOfTotalPages - 1 &&\r\n      pageNumberArray[pageNumberArray.length - 1] != currentPage\r\n    ) {\r\n      for (\r\n        let index = numberOfTotalPages - 1;\r\n        index >= endOfPageSet - 5 && index >= 0;\r\n        index--\r\n      ) {\r\n        arr.unshift(index);\r\n      }\r\n    } else {\r\n      for (\r\n        let index = currentPage;\r\n        index <= endOfPageSet && index < numberOfTotalPages;\r\n        index++\r\n      ) {\r\n        arr.push(index);\r\n      }\r\n    }\r\n    setPageNumberArray(arr);\r\n  }, [endOfPageSet, numberOfTotalPages]);\r\n\r\n  const [hoverArr, setHoverArr] = useState([]);\r\n\r\n  /**\r\n   * Create an array as same size as product array and set hovered to false\r\n   */\r\n  useEffect(() => {\r\n    var arry = [];\r\n    products.forEach((product) => {\r\n      arry.push(false);\r\n    });\r\n    setHoverArr((prev) => [...arry]);\r\n  }, [products]);\r\n\r\n  function mouseEntered(index) {\r\n    setHoverArr((prev) => [...prev, (prev[index] = true)]);\r\n  }\r\n\r\n  function mouseLeaved(index) {\r\n    setHoverArr((prev) => [...prev, (prev[index] = false)]);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-3 col-12 \">\r\n          <FilterBar />\r\n        </div>\r\n        <div className=\"col-md-9 col-12\">\r\n          <div className=\"row \">\r\n            {products.map((item, index) => {\r\n              return (\r\n                <div\r\n                  className={\r\n                    hoverArr[index]\r\n                      ? \"col-md-5 col-lg-2 col-12 justify-content-center p-2 m-2 position-relative border border-primary rounded-3 overflow-hidden\"\r\n                      : \"col-md-5 col-lg-2 col-12 justify-content-center p-2 m-2 position-relative border border-light rounded-3 overflow-hidden\"\r\n                  }\r\n                  key={item.itemId}\r\n                  onMouseEnter={(e) => mouseEntered(index)}\r\n                  onMouseLeave={(e) => mouseLeaved(index)}\r\n                >\r\n                  <ProductCoverImage itemId={item.itemId} />\r\n                  <div>\r\n                    <ItemRating\r\n                      itemId={item.itemId}\r\n                      showNumberOfRaters={false}\r\n                    />{\" \"}\r\n                  </div>\r\n                  <div className=\"text-secondary fs-4 mt-2\">\r\n                    ${item.itemPrice}\r\n                  </div>\r\n                  <p className=\"text-secondary fs-3 fw-normal\">\r\n                    {item.itemName}\r\n                  </p>\r\n                  <Link\r\n                    to={`/product-details/${item.itemId}`}\r\n                    className=\"stretched-link\"\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"row fixed-bottom\">\r\n            <div className=\"col \">\r\n              <nav aria-label=\"Page navigation example\">\r\n                <ul className=\"pagination justify-content-center\">\r\n                  <li\r\n                    className={\r\n                      currentPage === 0 ? \"page-item disabled\" : \"page-item\"\r\n                    }\r\n                  >\r\n                    <Link\r\n                      className=\"page-link\"\r\n                      to=\"#\"\r\n                      tabIndex=\"-1\"\r\n                      aria-disabled=\"true\"\r\n                      onClick={(e) => {\r\n                        if (currentPage > 0) {\r\n                          setCurrentPage((prev) => prev - 1);\r\n                        }\r\n                      }}\r\n                    >\r\n                      Previous\r\n                    </Link>\r\n                  </li>\r\n\r\n                  <li\r\n                    hidden={currentPage < 5 ? true : false}\r\n                    className=\"page-item\"\r\n                  >\r\n                    <Link\r\n                      className=\"page-link\"\r\n                      to=\"#\"\r\n                      onClick={(e) => {\r\n                        setCurrentPage(0);\r\n                      }}\r\n                    >\r\n                      1...\r\n                    </Link>\r\n                  </li>\r\n\r\n                  {pageNumberArray.map((pageNum) => {\r\n                    return (\r\n                      <li\r\n                        key={pageNum}\r\n                        className={\r\n                          currentPage === pageNum\r\n                            ? \"page-item active\"\r\n                            : \"page-item\"\r\n                        }\r\n                      >\r\n                        <Link\r\n                          className=\"page-link\"\r\n                          to=\"#\"\r\n                          onClick={(e) => {\r\n                            setCurrentPage(pageNum);\r\n                          }}\r\n                        >\r\n                          {pageNum + 1}\r\n                        </Link>\r\n                      </li>\r\n                    );\r\n                  })}\r\n\r\n                  <li\r\n                    hidden={\r\n                      numberOfTotalPages < 5 ||\r\n                      currentPage === numberOfTotalPages - 1 ||\r\n                      endOfPageSet >= numberOfTotalPages - 1\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    className=\"page-item\"\r\n                  >\r\n                    <Link\r\n                      className=\"page-link\"\r\n                      to=\"#\"\r\n                      onClick={(e) => {\r\n                        setCurrentPage(numberOfTotalPages - 1);\r\n                      }}\r\n                    >\r\n                      ...{numberOfTotalPages}\r\n                    </Link>\r\n                  </li>\r\n                  <li\r\n                    className={\r\n                      currentPage === numberOfTotalPages - 1\r\n                        ? \"page-item disabled\"\r\n                        : \"page-item\"\r\n                    }\r\n                  >\r\n                    <Link\r\n                      className=\"page-link\"\r\n                      to=\"#\"\r\n                      onClick={(e) => {\r\n                        if (currentPage < numberOfTotalPages - 1) {\r\n                          setCurrentPage((prev) => prev + 1);\r\n                        }\r\n                      }}\r\n                    >\r\n                      Next\r\n                    </Link>\r\n                  </li>\r\n                </ul>\r\n              </nav>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/ProductSource/AddProduct.js",["225","226","227","228","229","230"],"import { useState, useContext, useMemo } from \"react\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport axios from \"axios\";\r\nimport { UploadProductImage } from \"../Images/UploadProductImage\";\r\nimport { CustomerProfileContext } from \"../Contexts/CustomerProfileContext\";\r\nimport { ProductContext } from \"../Contexts/ProductContext\";\r\nimport { ManagedProductContext } from \"../Contexts/ManagedProductContext\";\r\n\r\nexport const AddProduct = (props) => {\r\n  const server = useContext(ServerContext);\r\n  const [itemName, setItemName] = useState(\"\");\r\n  const [itemPrice, setItemPrice] = useState(\"0.0\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [inStock, setInStock] = useState(0);\r\n  const [featured, setFeatured] = useState(false);\r\n\r\n  const [validated, setValidated] = useState(false);\r\n\r\n  const [newItemSaved, setNewItemSaved] = useState([]);\r\n\r\n  const { setProductChange } = useContext(ProductContext);\r\n\r\n  const {\r\n    customerProfile,\r\n    userProfile,\r\n    setCustomerProfile,\r\n    setUserProfile,\r\n  } = useContext(CustomerProfileContext);\r\n\r\n  const { myProducts, itemUpdate, setItemUpdate } = useContext(\r\n    ManagedProductContext\r\n  );\r\n\r\n  const handleSubmit = (event) => {\r\n    const form = event.currentTarget;\r\n\r\n    event.preventDefault();\r\n    if (form.checkValidity() === false) {\r\n      //do nothing\r\n    } else {\r\n      sendToServer(newItem);\r\n    }\r\n    setValidated((prev) => true);\r\n  };\r\n\r\n  const newItem = {\r\n    itemPrice: itemPrice,\r\n    itemName: itemName,\r\n    itemCategory: category,\r\n    itemFeatured: featured,\r\n    itemLeftInStock: inStock,\r\n  };\r\n\r\n  const [itemSaving, setItemSaving] = useState([]);\r\n\r\n  const sendToServer = (product) => {\r\n    axios\r\n      .post(`${server}/items/addItem/${customerProfile.customerId}`, newItem, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: localStorage.getItem(\"TokenJWT\"),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(\"item sent to server\");\r\n        console.log(response.data);\r\n        setItemSaving(response.data);\r\n        setNewItemSaved((prev) => [...prev, 1]);\r\n        setProductChange((prev) => [...prev, 1]);\r\n        setItemUpdate((prev) => [...prev, 1]);\r\n        window.alert(\"Item saved!\");\r\n        props.history.push(\"/\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        window.alert(\"An error occured!!\");\r\n      });\r\n  };\r\n\r\n  /*const savedItem = useMemo(() => {\r\n    console.log(itemSaving);\r\n    return itemSaving;\r\n  }, [itemSaving]);\r\n*/\r\n  const validateForm = () => {\r\n    return (\r\n      itemName.length > 0 && itemPrice > 0 && category.length > 0 && inStock > 0\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"container pt-5\">\r\n      <div className=\"row justify-content-center\">\r\n        <form\r\n          className=\"col-6 g-3 needs-validation\"\r\n          noValidate\r\n          validated={validated}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          <div className=\"col-7\">\r\n            <label for=\"itemname\" className=\"form-label\">\r\n              Product Name\r\n            </label>\r\n            <input\r\n              autoFocus\r\n              className=\"form-control\"\r\n              id=\"itemname\"\r\n              type=\"text\"\r\n              value={itemName}\r\n              onChange={(e) => setItemName(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"col-7\">\r\n            <label for=\"itemprice\" className=\"form-label\">\r\n              Product Price\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"itemprice\"\r\n              type=\"text\"\r\n              onChange={(e) => setItemPrice(parseFloat(e.target.value))}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"col-7\">\r\n            <label for=\"itemcategory\" className=\"form-label\">\r\n              Product Category\r\n            </label>\r\n            <input\r\n              id=\"itemcategory\"\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              value={category}\r\n              onChange={(e) => setCategory(e.target.value)}\r\n              required\r\n            />\r\n\r\n            <div className=\"col-7\">\r\n              <label for=\"itemnuminstock\" className=\"form-label\">\r\n                Number of Product in Stock\r\n              </label>\r\n              <input\r\n                id=\"itemnuminstock\"\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                value={inStock}\r\n                onChange={(e) => {\r\n                  setInStock(e.target.value);\r\n                }}\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <div className=\"form-check\">\r\n              <label for=\"itemfeatured\" className=\"from-check-label\">\r\n                Product Featured\r\n              </label>\r\n              <input\r\n                className=\"form-check-input\"\r\n                id=\"itemfeatured\"\r\n                type=\"checkbox\"\r\n                checked={featured}\r\n                onChange={(e) => setFeatured((prev) => !prev)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <button\r\n              className=\"btn btn-primary p-2\"\r\n              type=\"submit\"\r\n              disabled={!validateForm()}\r\n            >\r\n              Add Product\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <div className=\"col-4 my-auto\">\r\n          <UploadProductImage\r\n            itemId={itemSaving.itemId}\r\n            newItemSaved={newItemSaved}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/ProductSource/ProductDetails.js",["231","232","233","234","235","236","237","238","239","240"],"import { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Images } from \"../Images/Image\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport { CartContext } from \"../Contexts/CartContext\";\r\nimport { ProductContext } from \"../Contexts/ProductContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Reviews } from \"../Review/Reviews\";\r\nimport { ItemRating } from \"../Components/ItemRating\";\r\n\r\nexport const ProductDetails = (props) => {\r\n  const [itemDetails, setItemDetails] = useState([]);\r\n  const server = useContext(ServerContext);\r\n  const { cart, setCart, savedCart } = useContext(CartContext);\r\n\r\n  const {\r\n    products,\r\n    setProducts,\r\n    currentPage,\r\n    setCurrentPage,\r\n    pageSize,\r\n    setPageSize,\r\n    sortBy,\r\n    setSortBy,\r\n    numberOfTotalPages,\r\n  } = useContext(ProductContext);\r\n\r\n  const [itemAmount, setItemAmount] = useState(1);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${server}/itemDetails/getItemDetails/${props.match.params.itemId}`)\r\n      .then((res) => {\r\n        setItemDetails(res.data.itemDetailsList);\r\n      });\r\n  }, [props.match.params.itemId]);\r\n\r\n  const item = products.find(\r\n    (item) => item.itemId === parseInt(props.match.params.itemId)\r\n  );\r\n\r\n  function handleAddToCart() {\r\n    const indexOfItem = cart.findIndex((order) => {\r\n      return order.itemId === item.itemId;\r\n    });\r\n\r\n    if (indexOfItem > -1) {\r\n      cart[indexOfItem].itemAmount =\r\n        parseInt(cart[indexOfItem].itemAmount) + itemAmount;\r\n      savedCart.current = cart;\r\n    } else {\r\n      savedCart.current = [\r\n        ...savedCart.current,\r\n        { itemId: item.itemId, itemAmount: itemAmount },\r\n      ];\r\n    }\r\n    localStorage.setItem(\"cartcontent\", JSON.stringify(savedCart.current));\r\n    console.log(savedCart.current);\r\n\r\n    setCart([...savedCart.current]);\r\n    props.history.push(\"/cart\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-4 col-md-5 col-sm-8 m-4\">\r\n          <Images itemId={props.match.params.itemId} />\r\n        </div>\r\n        <div className=\"col-md-5 mt-2\">\r\n          {item ? <h2>{item.itemName}</h2> : null}\r\n          <ItemRating\r\n            itemId={props.match.params.itemId}\r\n            showNumberOfRaters={true}\r\n          />\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">Properties</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {itemDetails\r\n                ? itemDetails.map((item, index) => {\r\n                    return (\r\n                      <tr className=\"col\" key={index}>\r\n                        <td className=\"col-md-3 col-sm-5\">{item.nameOf}</td>\r\n                        <td className=\"col-md-3 col-sm-5\">\r\n                          {\" : \" + item.valueOf}\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })\r\n                : null}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div className=\"col-md-2 mt-2\">\r\n          <p className=\"fs-2\">$ {item ? item.itemPrice : null}</p>\r\n\r\n          <label className=\"form-label me-2\" for=\"selectqty\">\r\n            Quantity:\r\n          </label>\r\n          <select\r\n            id=\"selectqty\"\r\n            value={itemAmount}\r\n            onChange={(e) => setItemAmount(parseInt(e.target.value))}\r\n          >\r\n            <option selected value=\"1\">\r\n              1\r\n            </option>\r\n            <option selected value=\"2\">\r\n              2\r\n            </option>\r\n            <option selected value=\"3\">\r\n              3\r\n            </option>\r\n            <option selected value=\"4\">\r\n              4\r\n            </option>\r\n            <option selected value=\"5\">\r\n              5\r\n            </option>\r\n          </select>\r\n\r\n          <button className=\"btn btn-primary\" onClick={handleAddToCart}>\r\n            Add to Cart\r\n          </button>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <Reviews itemId={props.match.params.itemId} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n/*\r\n{Object.keys(itemDetails).map((currentKey, index) => {\r\n    return (\r\n      <tr className=\"col\" key={index}>\r\n        <td className=\"col-md-3 col-sm-5\">{currentKey} :</td>\r\n        <td className=\"col-md-3 col-sm-5\">\r\n          {itemDetails[currentKey]}\r\n        </td>\r\n      </tr>\r\n    );\r\n  })}\r\n  */\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/Auth/Login.js",[],"/media/ogn/Multimedia/ReactPrjs/front-end/src/Auth/PasswordResetRequest.js",[],"/media/ogn/Multimedia/ReactPrjs/front-end/src/Auth/PasswordReset.js",["241"],"import { useState, useRef, useContext, useEffect } from \"react\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport axios from \"axios\";\r\n\r\nexport const PasswordReset = (props) => {\r\n  const server = useContext(ServerContext);\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [newPasswordConfirm, setNewPasswordConfirm] = useState(\"\");\r\n  const [linkValid, setLinkValid] = useState(false);\r\n  const showErr = useRef();\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `${server}/auth/passwordReset/checkLinkValidity/${props.match.params.uuid}`\r\n      )\r\n      .then((res) => {\r\n        console.log(res);\r\n        setLinkValid(true);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setLinkValid(false);\r\n      });\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    axios\r\n      .post(\r\n        `${server}/auth/resetPasswordByLink/${props.match.params.uuid}`,\r\n        newPassword,\r\n        { headers: { \"Content-Type\": \"application/json\" } }\r\n      )\r\n      .then((res) => console.log(\"reset successful! \" + res.data))\r\n      .catch((err) => console.log(\"Reset fail!\" + err));\r\n  };\r\n\r\n  if (!linkValid) {\r\n    return <p>Link invalid!</p>;\r\n  }\r\n\r\n  function validateForm() {\r\n    if (showErr.current) {\r\n      if (newPassword.length < 6) {\r\n        showErr.current.className =\r\n          \"col-5 alert alert-danger mx-auto fw-normal fs-3 text-dark text-center\";\r\n      } else {\r\n        showErr.current.className = \"visually-hidden\";\r\n      }\r\n    }\r\n    return newPassword.length > 5 && newPassword === newPasswordConfirm;\r\n  }\r\n  return (\r\n    <div className=\"container mt-5 \">\r\n      <div ref={showErr} className=\"visually-hidden\" role=\"alert\">\r\n        Password must be 6 caharacters or longer!\r\n      </div>\r\n      <form className=\"g-3 needs-validation \" onSubmit={handleSubmit}>\r\n        <div className=\"row \">\r\n          <div className=\"col-md-4 mx-auto\">\r\n            <label className=\"form-label\" for=\"passw\">\r\n              Enter new password:\r\n            </label>\r\n            <input\r\n              autoFocus\r\n              id=\"passw\"\r\n              className=\"form-control\"\r\n              type=\"password\"\r\n              value={newPassword}\r\n              onChange={(e) => setNewPassword(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4 mx-auto\">\r\n            <label className=\"form-label\" for=\"passwd\">\r\n              Enter password again:\r\n            </label>\r\n            <input\r\n              id=\"passwd\"\r\n              className=\"form-control\"\r\n              type=\"password\"\r\n              value={newPasswordConfirm}\r\n              onChange={(e) => setNewPasswordConfirm(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row clearfix\">\r\n          <div className=\"col-md-4 mx-auto mt-2 float-star\">\r\n            <button\r\n              className=\"btn btn-primary px-5\"\r\n              type=\"submit\"\r\n              disabled={!validateForm()}\r\n            >\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/SignUp/CustomerSignUp.js",[],"/media/ogn/Multimedia/ReactPrjs/front-end/src/Components/Navbar.js",["242","243","244","245"],"import axios from \"axios\";\r\nimport React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport { LoginSuccessContext } from \"../Contexts/LoginSuccessContext\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport { CartContext } from \"../Contexts/CartContext\";\r\nimport \"./navbar.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CustomerProfileContext } from \"../Contexts/CustomerProfileContext\";\r\n\r\nexport const NavBar = () => {\r\n  const { loggedIn } = useContext(LoginSuccessContext);\r\n  const [searchWord, setSearchWord] = useState();\r\n  const server = useContext(ServerContext);\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const { cart } = useContext(CartContext);\r\n  const {\r\n    customerProfile,\r\n    userProfile,\r\n    setCustomerProfile,\r\n    setUserProfile,\r\n  } = useContext(CustomerProfileContext);\r\n  const dropdownList = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!searchWord) {\r\n      setSearchResult([]);\r\n    }\r\n\r\n    if (searchWord) {\r\n      SearchTyped(searchWord);\r\n    }\r\n  }, [searchWord]);\r\n\r\n  const SearchTyped = (word) => {\r\n    axios\r\n      .get(`${server}/items/searchItems/${word}`)\r\n      .then((res) => {\r\n        setSearchResult(res.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <div className=\"container-fluid\">\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarTogglerDemo03\"\r\n          aria-controls=\"navbarTogglerDemo03\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          Home\r\n        </Link>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo03\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li\r\n              hidden={\r\n                userProfile.userRoles &&\r\n                userProfile.userRoles.indexOf(\"ADMIN\") > -1\r\n                  ? true\r\n                  : false\r\n              }\r\n              className=\"nav-item\"\r\n            >\r\n              <Link className=\"nav-link text-dark\" to=\"/orders\">\r\n                Orders\r\n              </Link>\r\n            </li>\r\n            <li\r\n              hidden={\r\n                !userProfile.userRoles ||\r\n                (userProfile.userRoles &&\r\n                  userProfile.userRoles.indexOf(\"ADMIN\") < 0)\r\n                  ? true\r\n                  : false\r\n              }\r\n              className=\"nav-item\"\r\n            >\r\n              <Link className=\"nav-link text-dark\" to=\"/manage-products\">\r\n                Manage Products\r\n              </Link>\r\n            </li>\r\n\r\n            <li hidden={loggedIn ? false : true} className=\"nav-item\">\r\n              <Link className=\"nav-link text-dark\" to=\"/chat/-1\">\r\n                Messages\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n\r\n          <div className=\"dropdown\">\r\n            <form className=\"d-flex\">\r\n              <input\r\n                style={{ width: \"30rem\" }}\r\n                className=\"form-control me-2\"\r\n                value={searchWord}\r\n                onChange={(e) => {\r\n                  setSearchWord(e.target.value);\r\n                }}\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n                data-bs-toggle=\"dropdown\"\r\n              />\r\n\r\n              <button\r\n                className=\"btn btn-outline-success\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"dropdown\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                Search\r\n              </button>\r\n\r\n              <ul\r\n                ref={dropdownList}\r\n                style={searchResult.length < 1 ? { display: \"none\" } : null}\r\n                className=\"dropdown-menu\"\r\n              >\r\n                {searchResult\r\n                  ? searchResult.map((item) => {\r\n                      return (\r\n                        <li key={item.itemId}>\r\n                          <Link\r\n                            className=\"dropdown-item\"\r\n                            to={`/product-details/${item.itemId}`}\r\n                          >\r\n                            {item.itemName}\r\n                          </Link>\r\n                        </li>\r\n                      );\r\n                    })\r\n                  : null}\r\n              </ul>\r\n            </form>\r\n          </div>\r\n\r\n          {loggedIn ? (\r\n            <Link className=\"nav-link text-dark\" to=\"/profile\">\r\n              Your Profile\r\n            </Link>\r\n          ) : (\r\n            <Link className=\"nav-link text-dark\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          )}\r\n\r\n          <Link\r\n            hidden={\r\n              userProfile.userRoles &&\r\n              userProfile.userRoles.indexOf(\"ADMIN\") > -1\r\n                ? true\r\n                : false\r\n            }\r\n            className=\"nav-link text-dark btn btn-primary position-relative me-2\"\r\n            to=\"/cart\"\r\n          >\r\n            Cart{\" \"}\r\n            <span className=\"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-secondary\">\r\n              {cart.length}{\" \"}\r\n              <span className=\"visually-hidden\">unread messages</span>\r\n            </span>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/Images/EditPictures.js",["246","247","248","249"],"import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport { UploadProductImage } from \"./UploadProductImage\";\r\n\r\nexport const EditPictures = (props) => {\r\n  const [picPath, setPicPath] = useState([]);\r\n  const server = useContext(ServerContext);\r\n  const [triggerReRender, setTriggerReRender] = useState([]);\r\n\r\n  const savePics = useRef([]);\r\n\r\n  useEffect(() => {\r\n    FetchPath();\r\n  }, [triggerReRender]);\r\n\r\n  const [picMap, setPicMap] = useState([]);\r\n  const [addPic, setAddPic] = useState([]);\r\n\r\n  const FetchPath = () => {\r\n    //Method returns a list of path locations for a particular item.\r\n    if (props.match.params.itemId) {\r\n      axios\r\n        .get(\r\n          `${server}/items/getItemFileLocations/${props.match.params.itemId}`\r\n        )\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          setPicPath(res.data.pathList);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (picPath) {\r\n      setPicMap([]);\r\n      savePics.current = [];\r\n      picPath.map((path) => {\r\n        const src = `${server}/storage/getItemFiles/${props.match.params.itemId}/${path}`;\r\n        var imageToLoad = new Image();\r\n        imageToLoad.src = src;\r\n        imageToLoad.onload = () => {\r\n          if (savePics.current.findIndex((picc) => picc.path == path) < 0) {\r\n            savePics.current = [\r\n              ...savePics.current,\r\n              {\r\n                itemId: props.match.params.itemId,\r\n                path: path,\r\n                image: imageToLoad,\r\n              },\r\n            ];\r\n            let setArr = new Set(savePics.current);\r\n            setPicMap([...setArr]);\r\n          }\r\n        };\r\n      });\r\n    }\r\n  }, [picPath]);\r\n\r\n  console.log(picMap);\r\n\r\n  function handleDeletePic(itemId, path) {\r\n    axios\r\n      .delete(`${server}/storage/deleteItemFiles/${itemId}/${path}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        setPicMap((prev) => prev.filter((pic) => pic.path !== path));\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  function handleAddPics() {\r\n    setAddPic((prev) => [...prev, 1]);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-8\">\r\n          <div className=\"row\">\r\n            {picMap.map((pic, index) => {\r\n              return (\r\n                <div className=\"col-4\" key={index}>\r\n                  <div className=\"card\">\r\n                    <div className=\"img-container\">\r\n                      <img\r\n                        alt=\"Product\"\r\n                        className=\"card-img-top\"\r\n                        src={pic.image.src}\r\n                      />\r\n                      <button\r\n                        className=\"btn btn-primary\"\r\n                        type=\"button\"\r\n                        onClick={(e) => handleDeletePic(pic.itemId, pic.path)}\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"col-4 my-auto\">\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <UploadProductImage\r\n                itemId={props.match.params.itemId}\r\n                newItemSaved={addPic}\r\n                rerender={setTriggerReRender}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row \">\r\n            <div className=\"col\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                type=\"button\"\r\n                onClick={(e) => handleAddPics()}\r\n              >\r\n                Save Pictures\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/Profile/CustomerProfile.js",["250","251","252","253","254","255","256","257","258","259","260","261","262"],"/media/ogn/Multimedia/ReactPrjs/front-end/src/Images/Image.js",["263","264","265","266"],"import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\n\r\nexport const Images = (props) => {\r\n  //  const [path, setPath] = useState([]);\r\n  //  const [loading, setLoading] = useState(true);\r\n  const server = useContext(ServerContext);\r\n\r\n  //Memorize previous images\r\n  const pics = useRef([]);\r\n  const [imgs, setImgs] = useState();\r\n\r\n  useEffect(() => {\r\n    FetchPath();\r\n  }, []);\r\n\r\n  const FetchPath = () => {\r\n    //Method returns a list of path locations for a particular item.\r\n    axios\r\n      .get(`${server}/items/getItemFileLocations/${props.itemId}`)\r\n      .then((res) => {\r\n        //  console.log(res.data.pathObjList);\r\n        //setPath(res.data.pathObjList);\r\n        //paths.current = res.data.pathObjList;\r\n        // setLoading(false);\r\n\r\n        /**\r\n         * For returned path list, load each image from server and add to (pics) Ref, destructure the Ref first and add loaded image\r\n         */\r\n        res.data.pathList.map((path) => {\r\n          const src = `${server}/storage/getItemFiles/${props.itemId}/${path}`;\r\n          var imageToLoad = new Image();\r\n          imageToLoad.src = src;\r\n          imageToLoad.onload = () => {\r\n            //Keep memorizing images\r\n            pics.current = [...pics.current, imageToLoad];\r\n            // Add to state for re-render\r\n            setImgs(pics.current);\r\n          };\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  //Reference to the main img to change src with mainImage.current.src\r\n  const mainImage = useRef();\r\n\r\n  //first Index always 0\r\n  const [firstIndex, setFirstIndex] = useState(0);\r\n  const first = useRef(0);\r\n\r\n  //increase first index with modulus\r\n  function goNext() {\r\n    first.current = (first.current + 1) % imgs.length;\r\n    setFirstIndex(first.current);\r\n  }\r\n\r\n  //decrease first index with modulus\r\n  function goPrev() {\r\n    first.current = (first.current - 1 + imgs.length) % imgs.length;\r\n    setFirstIndex(first.current);\r\n  }\r\n\r\n  //if null return\r\n  if (!imgs) {\r\n    return null;\r\n  }\r\n  //get 3 consequent pics and put in a list\r\n  let listOf3DashImages;\r\n\r\n  if (imgs.length > 0 && imgs[firstIndex] != null) {\r\n    listOf3DashImages = [imgs[firstIndex]];\r\n  }\r\n\r\n  if (imgs.length > 1 && imgs[(firstIndex + 1) % imgs.length] != null) {\r\n    listOf3DashImages = [\r\n      imgs[firstIndex],\r\n      imgs[(firstIndex + 1) % imgs.length],\r\n    ];\r\n  }\r\n  if (imgs.length > 2 && imgs[(firstIndex + 2) % imgs.length] != null) {\r\n    listOf3DashImages = [\r\n      imgs[firstIndex],\r\n      imgs[(firstIndex + 1) % imgs.length],\r\n      imgs[(firstIndex + 2) % imgs.length],\r\n    ];\r\n  }\r\n  //function to change main picture using useRef hook\r\n  //make main image point to clicked image's src\r\n  //button id is same as image's place in array\r\n  const selectMain = (e) => {\r\n    const imgId = e.target.id;\r\n    mainImage.current.src = listOf3DashImages[imgId].src;\r\n  };\r\n\r\n  /**\r\n   * Two rows inside a container to seperate different functionalities from each other\r\n   */\r\n  return (\r\n    <div className=\"container \">\r\n      <div className=\"row row-cols-1 pb-2\">\r\n        <div className=\"col-10\">\r\n          <div className=\"card\">\r\n            <div className=\"img-container\">\r\n              <img\r\n                ref={mainImage}\r\n                alt=\"Product\"\r\n                className=\"card-img-top\"\r\n                src={imgs[0].src}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row row-cols-3 carousel slide\">\r\n        {listOf3DashImages.map((imgg, index) => {\r\n          return (\r\n            <div className=\"col-3 position-relative\" key={index}>\r\n              <div className=\"card\">\r\n                <div className=\"img-container\">\r\n                  <img alt=\"Product\" className=\"card-img-top\" src={imgg.src} />\r\n                  <a\r\n                    href=\"#\"\r\n                    role=\"button\"\r\n                    className=\"stretched-link\"\r\n                    id={index}\r\n                    onClick={selectMain}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n        <a\r\n          hidden={imgs.length < 4 ? true : false}\r\n          onClick={goPrev}\r\n          className=\"carousel-control-prev\"\r\n          href=\"#carouselExampleIndicators\"\r\n          role=\"button\"\r\n          data-bs-slide=\"prev\"\r\n        >\r\n          <span\r\n            class=\"carousel-control-prev-icon bg-dark\"\r\n            aria-hidden=\"true\"\r\n          ></span>\r\n          <span className=\"visually-hidden\">Previous</span>\r\n        </a>\r\n        <a\r\n          hidden={imgs.length < 4 ? true : false}\r\n          onClick={goNext}\r\n          className=\"carousel-control-next\"\r\n          href=\"#carouselExampleIndicators\"\r\n          role=\"button\"\r\n          data-bs-slide=\"next\"\r\n        >\r\n          <span\r\n            className=\"carousel-control-next-icon bg-dark\"\r\n            aria-hidden=\"true\"\r\n          ></span>\r\n          <span className=\"visually-hidden\">Next</span>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/Profile/EditCustomerProfile.js",["267","268","269","270","271"],"/media/ogn/Multimedia/ReactPrjs/front-end/src/Manage/ManageProducts.js",["272","273","274","275"],"import { useState, useContext, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ProductCoverImage } from \"../Images/ProductCoverImage\";\r\nimport { ManagedProductContext } from \"../Contexts/ManagedProductContext\";\r\nimport axios from \"axios\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport { CustomerProfileContext } from \"../Contexts/CustomerProfileContext\";\r\nimport { ProductContext } from \"../Contexts/ProductContext\";\r\n\r\nexport const ManageProducts = () => {\r\n  const { myProducts, itemUpdate, setItemUpdate } = useContext(\r\n    ManagedProductContext\r\n  );\r\n  const server = useContext(ServerContext);\r\n  const [hoverArr, setHoverArr] = useState([]);\r\n\r\n  const { setProductChange } = useContext(ProductContext);\r\n\r\n  const {\r\n    customerProfile,\r\n    userProfile,\r\n    setCustomerProfile,\r\n    setUserProfile,\r\n  } = useContext(CustomerProfileContext);\r\n\r\n  /**\r\n   * Create an array as same size as product array and set hovered to false\r\n   */\r\n  useEffect(() => {\r\n    var arry = [];\r\n    myProducts.forEach((product) => {\r\n      arry.push(false);\r\n    });\r\n    setHoverArr((prev) => [...arry]);\r\n  }, [myProducts]);\r\n\r\n  function mouseEntered(index) {\r\n    setHoverArr((prev) => [...prev, (prev[index] = true)]);\r\n  }\r\n\r\n  function mouseLeaved(index) {\r\n    setHoverArr((prev) => [...prev, (prev[index] = false)]);\r\n  }\r\n\r\n  function handleDeleteProduct(itemId) {\r\n    axios\r\n      .delete(\r\n        `${server}/items/deleteItem/${itemId}/${customerProfile.customerId}`,\r\n        {\r\n          headers: {\r\n            Authorization: localStorage.getItem(\"TokenJWT\"),\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        console.log(\"item deleted:\" + res);\r\n        //Fetch user items again\r\n        setItemUpdate((prev) => [...prev, 1]);\r\n        setProductChange((prev) => [...prev, 1]);\r\n      })\r\n      .catch((err) => console.log(\"item could not be deleted: \" + err));\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Link\r\n        className=\"btn btn-primary text-dark\"\r\n        aria-current=\"page\"\r\n        to=\"/addProduct\"\r\n      >\r\n        Add Product\r\n      </Link>\r\n\r\n      <div className=\"row \">\r\n        {myProducts.map((item, index) => {\r\n          return (\r\n            <div\r\n              className={\r\n                hoverArr[index]\r\n                  ? \"col-md-5 col-lg-2 col-12 justify-content-center p-2 m-2 border border-primary rounded-3 overflow-hidden\"\r\n                  : \"col-md-5 col-lg-2 col-12 justify-content-center p-2 m-2 border border-light rounded-3 overflow-hidden\"\r\n              }\r\n              key={item.itemId}\r\n              onMouseEnter={(e) => mouseEntered(index)}\r\n              onMouseLeave={(e) => mouseLeaved(index)}\r\n            >\r\n              <div className=\"position-relative\">\r\n                <ProductCoverImage itemId={item.itemId} />\r\n                <div className=\"text-secondary fs-4 mt-2\">\r\n                  ${item.itemPrice}\r\n                </div>\r\n                <p className=\"text-secondary fs-3 fw-normal\">{item.itemName}</p>\r\n                <Link\r\n                  to={`/edit-product/${item.itemId}`}\r\n                  className=\"stretched-link\"\r\n                />\r\n              </div>\r\n              <button\r\n                className=\"btn btn-danger\"\r\n                onClick={(e) => handleDeleteProduct(item.itemId)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/Orders/Orders.js",["276","277"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport { CustomerProfileContext } from \"../Contexts/CustomerProfileContext\";\r\nimport { LoginSuccessContext } from \"../Contexts/LoginSuccessContext\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Orders = () => {\r\n  const server = useContext(ServerContext);\r\n  const customerProfile = useContext(CustomerProfileContext);\r\n  const [orders, setOrders] = useState([]);\r\n  const { loggedIn, setLoggedIn } = useContext(LoginSuccessContext);\r\n\r\n  useEffect(() => {\r\n    if (loggedIn && customerProfile.customerId) {\r\n      FetchOrders();\r\n    } else {\r\n      setOrders([]);\r\n    }\r\n  }, [customerProfile]);\r\n\r\n  const FetchOrders = () => {\r\n    if (customerProfile) {\r\n      console.log(\"fetching\");\r\n      axios\r\n        .get(`${server}/order/${customerProfile.customerId}/getOrderList`, {\r\n          headers: {\r\n            Authorization: localStorage.getItem(\"TokenJWT\"),\r\n          },\r\n        })\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          setOrders(res.data);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n\r\n  if (!loggedIn) {\r\n    return (\r\n      <div className=\"container\">\r\n        <p>Loing to see your orders!</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (orders.length < 1) {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col mx-auto\">\r\n            <p>You don't have any orders!</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function dateObj(time) {\r\n    const secs = Date.parse(time);\r\n    const date = new Date(secs);\r\n    return date.toLocaleString();\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-3\">\r\n      {orders.map((order) => {\r\n        return (\r\n          <div className=\"row border border-danger my-3\" key={order.orderId}>\r\n            <div className=\"col-6\">\r\n              <p>Order Placed: {dateObj(order.orderTime)}</p>\r\n            </div>\r\n            <div className=\"col-6\">\r\n              <p>Total: $ {order.orderTotal}</p>\r\n            </div>\r\n            <hr />\r\n            <div className=\"col\">\r\n              <div className=\"row\">\r\n                <div className=\"col-2\">\r\n                  <p> Item Name</p>\r\n                </div>\r\n                <div className=\"col-2\">\r\n                  <p>Price</p>\r\n                </div>\r\n                <div className=\"col-2\">\r\n                  <p>Quantity</p>\r\n                </div>\r\n                <div className=\"col-2\">\r\n                  <p>Item id</p>\r\n                </div>\r\n              </div>\r\n\r\n              <hr />\r\n              {order.orderItems.map((orderItem) => {\r\n                return (\r\n                  <div className=\"row\" key={orderItem.orderItemId}>\r\n                    <div className=\"col-2\">\r\n                      <p> {orderItem.orderItemName}</p>\r\n                    </div>\r\n                    <div className=\"col-2\">\r\n                      <p>{orderItem.orderItemPrice}</p>\r\n                    </div>\r\n                    <div className=\"col-2\">\r\n                      <p> {orderItem.orderItemAmountOrdered} </p>\r\n                    </div>\r\n                    <div className=\"col-2\">\r\n                      <p> {orderItem.orderItemItemId}</p>\r\n                    </div>\r\n                    <Link to={`/review-item/${orderItem.orderItemItemId}`}>\r\n                      Write a review\r\n                    </Link>\r\n                    <Link to={`/chat/${orderItem.orderItemOwner}`}>\r\n                      Send Message to the Seller{orderItem.orderItemOwner}\r\n                    </Link>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/Cart/Cart.js",["278","279"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { CartContext } from \"../Contexts/CartContext\";\r\nimport { ProductCoverImage } from \"../Images/ProductCoverImage\";\r\nimport { CustomerProfileContext } from \"../Contexts/CustomerProfileContext\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport axios from \"axios\";\r\nimport { LoginSuccessContext } from \"../Contexts/LoginSuccessContext\";\r\n\r\nexport const Cart = (props) => {\r\n  const { cart, setCart, savedCart, cartOrderItems } = useContext(CartContext);\r\n  const [taxRate, setTaxRate] = useState(10);\r\n  const { customerProfile } = useContext(CustomerProfileContext);\r\n  const server = useContext(ServerContext);\r\n  const { loggedIn } = useContext(LoginSuccessContext);\r\n\r\n  function calculateSubtotal() {\r\n    if (cartOrderItems) {\r\n      const total = cartOrderItems.reduce((acc, orderitem) => {\r\n        return (\r\n          acc + orderitem.orderItemPrice * orderitem.orderItemAmountOrdered\r\n        );\r\n      }, 0);\r\n      return total;\r\n    }\r\n  }\r\n\r\n  function calculateTotal() {\r\n    var subtotal = calculateSubtotal();\r\n    return subtotal + subtotal * (taxRate / 100);\r\n  }\r\n\r\n  function handleRemove(itemId) {\r\n    savedCart.current = savedCart.current.filter(\r\n      (order) => order.itemId !== itemId\r\n    );\r\n    localStorage.setItem(\"cartcontent\", JSON.stringify(savedCart.current));\r\n    setCart(savedCart.current);\r\n  }\r\n\r\n  function handlePlaceOrder() {\r\n    if (!loggedIn) {\r\n      props.history.push(\"/login\");\r\n    } else {\r\n      if (customerProfile && cart) {\r\n        console.log(cart);\r\n        axios\r\n          .post(\r\n            `${server}/order/${customerProfile.customerId}/placeOrder`,\r\n            { orderContentList: cart },\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: localStorage.getItem(\"TokenJWT\"),\r\n              },\r\n            }\r\n          )\r\n          .then((res) => {\r\n            console.log(res);\r\n            savedCart.current = null;\r\n            localStorage.removeItem(\"cartcontent\");\r\n            setCart([]);\r\n            props.history.push(\"/orders\");\r\n          })\r\n          .catch((err) => console.log(err));\r\n      }\r\n    }\r\n  }\r\n\r\n  /*\r\n\"orderItemAmountOrdered\":4,\r\n\"orderItemItemId\":75,\r\n\"orderItemPrice\":12.34,\r\n\"orderItemName\":\"PR3\",\r\n\r\n\r\n*/\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row my-2\">\r\n        <div className=\"col-4\"></div>\r\n        <div className=\"col-3\"></div>\r\n        <div className=\"col-3\">\r\n          <span>Price</span>\r\n        </div>\r\n        <hr />\r\n      </div>\r\n      {cartOrderItems.map((orderitem) => {\r\n        return (\r\n          <div className=\"row\" key={orderitem.orderItemItemId}>\r\n            <div className=\"col-4\">\r\n              <ProductCoverImage itemId={orderitem.orderItemItemId} />\r\n            </div>\r\n            <div className=\"col-3 my-auto\">\r\n              Quantity: {orderitem.orderItemAmountOrdered}\r\n            </div>\r\n            <div className=\"col-3 my-auto\">\r\n              <span>{orderitem.orderItemPrice}</span>\r\n            </div>\r\n            <div className=\"col-1 my-auto\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={(e) => handleRemove(orderitem.orderItemItemId)}\r\n              >\r\n                Remove\r\n              </button>\r\n            </div>\r\n            <hr className=\"my-3\" />\r\n          </div>\r\n        );\r\n      })}\r\n      <div className=\"row\">\r\n        <div className=\"col-4\"></div>\r\n        <div className=\"col-3\"></div>\r\n        <div className=\"col-3\">\r\n          <h4>Subtotal: $ {calculateSubtotal().toFixed(2)}</h4>\r\n          <h4>Tax: $ {(calculateSubtotal() * (taxRate / 100)).toFixed(2)}</h4>\r\n          <h4>Total: $ {calculateTotal().toFixed(2)}</h4>\r\n        </div>\r\n        <div className=\"col-2  my-auto\">\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            type=\"button\"\r\n            onClick={handlePlaceOrder}\r\n            disabled={cartOrderItems.length < 1}\r\n          >\r\n            Place Order\r\n          </button>\r\n        </div>\r\n        <hr />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/Review/WriteReview.js",["280","281","282","283"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport axios from \"axios\";\r\nimport { CustomerProfileContext } from \"../Contexts/CustomerProfileContext\";\r\n\r\nexport const WriteReview = (props) => {\r\n  const [review, setReview] = useState([]);\r\n  const server = useContext(ServerContext);\r\n  const [rating, setRating] = useState();\r\n\r\n  const {\r\n    customerProfile,\r\n    userProfile,\r\n    setCustomerProfile,\r\n    setUserProfile,\r\n  } = useContext(CustomerProfileContext);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    var itemReview = {\r\n      itemId: props.match.params.itemId,\r\n      reviewOwner: customerProfile.customerId,\r\n      review: review,\r\n      rating: rating,\r\n    };\r\n    console.log(itemReview);\r\n\r\n    axios\r\n      .post(`${server}/itemDetails/saveItemReview`, itemReview, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        window.alert(\"Your review is submitted!\");\r\n        props.history.push(\"/orders\");\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <form class=\"col-8 g-3 mx-auto\" onSubmit={(e) => handleSubmit(e)}>\r\n          <div class=\"mb-3\">\r\n            <label for=\"ratingSelect\" class=\"form-label\">\r\n              Your Rating\r\n            </label>\r\n            <select\r\n              id=\"ratingSelect\"\r\n              value={rating}\r\n              onChange={(e) => setRating(e.target.value)}\r\n              class=\"form-select\"\r\n              aria-label=\"Default select example\"\r\n            >\r\n              <option selected>Rate the product</option>\r\n              <option value=\"1\">One</option>\r\n              <option value=\"2\">Two</option>\r\n              <option value=\"3\">Three</option>\r\n              <option value=\"4\">Four</option>\r\n              <option value=\"5\">Five</option>\r\n            </select>\r\n            <label for=\"exampleFormControlTextarea1\" class=\"form-label\">\r\n              Your Review\r\n            </label>\r\n            <textarea\r\n              class=\"form-control\"\r\n              id=\"exampleFormControlTextarea1\"\r\n              rows=\"5\"\r\n              value={review}\r\n              onChange={(e) => setReview(e.target.value)}\r\n            ></textarea>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <button className=\"btn btn-primary\" type=\"submit\">\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/Manage/EditProduct.js",["284","285","286","287","288","289","290","291","292","293","294","295","296","297"],"import { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Images } from \"../Images/Image\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport { CartContext } from \"../Contexts/CartContext\";\r\nimport { ProductContext } from \"../Contexts/ProductContext\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const EditProduct = (props) => {\r\n  const [itemDetails, setItemDetails] = useState([]);\r\n  const server = useContext(ServerContext);\r\n  const { cart, setCart, savedCart } = useContext(CartContext);\r\n\r\n  const {\r\n    products,\r\n    setProducts,\r\n    currentPage,\r\n    setCurrentPage,\r\n    pageSize,\r\n    setPageSize,\r\n    sortBy,\r\n    setSortBy,\r\n    numberOfTotalPages,\r\n  } = useContext(ProductContext);\r\n\r\n  const [itemAmount, setItemAmount] = useState(1);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${server}/itemDetails/getItemDetails/${props.match.params.itemId}`)\r\n      .then((res) => {\r\n        setItemDetails(res.data.itemDetailsList);\r\n      });\r\n  }, [props.match.params.itemId]);\r\n\r\n  const item = products.find(\r\n    (item) => item.itemId === parseInt(props.match.params.itemId)\r\n  );\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-4 col-md-5 col-sm-8 m-4\">\r\n          <Images itemId={props.match.params.itemId} />\r\n        </div>\r\n        <div className=\"col-md-5 mt-2\">\r\n          {item ? <h2>{item.itemName}</h2> : null}\r\n          <Link\r\n            className=\"btn btn-primary\"\r\n            to={`/edit-product-definition/${props.match.params.itemId}`}\r\n          >\r\n            Edit Item\r\n          </Link>\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">Properties</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {itemDetails\r\n                ? itemDetails.map((item, index) => {\r\n                    return (\r\n                      <tr className=\"col\" key={index}>\r\n                        <td className=\"col-md-3 col-sm-5\">{item.nameOf}</td>\r\n                        <td className=\"col-md-3 col-sm-5\">\r\n                          {\" : \" + item.valueOf}\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })\r\n                : null}\r\n            </tbody>\r\n          </table>\r\n          <Link\r\n            className=\"btn btn-primary\"\r\n            to={`/edit-product-description/${props.match.params.itemId}`}\r\n          >\r\n            Edit Item Properties\r\n          </Link>\r\n          <Link\r\n            className=\"btn btn-primary ms-5\"\r\n            to={`/edit-pictures/${props.match.params.itemId}`}\r\n          >\r\n            Edit Pictures\r\n          </Link>\r\n        </div>\r\n        <div className=\"col-md-2 mt-2\">\r\n          <p className=\"fs-2\">$ {item ? item.itemPrice : null}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n/*\r\n{Object.keys(itemDetails).map((currentKey, index) => {\r\n    return (\r\n      <tr className=\"col\" key={index}>\r\n        <td className=\"col-md-3 col-sm-5\">{currentKey} :</td>\r\n        <td className=\"col-md-3 col-sm-5\">\r\n          {itemDetails[currentKey]}\r\n        </td>\r\n      </tr>\r\n    );\r\n  })}\r\n  */\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/Chat/Chat.js",["298","299","300","301","302","303"],"import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport { CustomerProfileContext } from \"../Contexts/CustomerProfileContext\";\r\nimport { ChatArea } from \"./ChatArea\";\r\nimport { ChatContext } from \"../Contexts/ChatContext\";\r\n\r\nexport const Chat = (props) => {\r\n  const {\r\n    connected,\r\n    subscribedTopics,\r\n    chat,\r\n    setChat,\r\n    client,\r\n    arr,\r\n    setConnected,\r\n    chatIndex,\r\n    setChatIndex,\r\n  } = useContext(ChatContext);\r\n\r\n  const {\r\n    customerProfile,\r\n    userProfile,\r\n    setCustomerProfile,\r\n    setUserProfile,\r\n  } = useContext(CustomerProfileContext);\r\n  console.log(\"cusid: \" + customerProfile.customerId);\r\n  const clickHandler = (subscriber, message) => {\r\n    client.current.publish({\r\n      destination: \"/app/chat\",\r\n      body: JSON.stringify({\r\n        content: message,\r\n        publisher: customerProfile.customerId,\r\n        subscriber: subscriber,\r\n      }),\r\n    });\r\n  };\r\n\r\n  const handleDisconnect = () => {\r\n    client.current.deactivate();\r\n    arr.current = [];\r\n    setChat([]);\r\n    setChatIndex(-1);\r\n    setConnected(false);\r\n  };\r\n\r\n  const clickJoin = () => {\r\n    client.current.activate();\r\n  };\r\n\r\n  const [sendToUser, setSendToUser] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (props.match.params.sendTo) {\r\n      setSendToUser(props.match.params.sendTo);\r\n    }\r\n  }, [props.match.params.sendTo]);\r\n\r\n  console.log(chat);\r\n  console.log(chatIndex);\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-3 col-md-10\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              {chat.length > 0\r\n                ? chat.map((eachChat, index) => {\r\n                    return (\r\n                      <div className=\"row\" key={index}>\r\n                        <div className=\"col-12\">\r\n                          <div className=\"list-group\">\r\n                            <button\r\n                              type=\"button\"\r\n                              className={\r\n                                chatIndex === index\r\n                                  ? \"list-group-item list-group-item-action active\"\r\n                                  : \"list-group-item list-group-item-action\"\r\n                              }\r\n                              aria-current=\"true\"\r\n                              onClick={(e) => setChatIndex(index)}\r\n                            >\r\n                              Message from: {eachChat.publisher}\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })\r\n                : null}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <hr />\r\n              {connected ? (\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  onClick={(e) => handleDisconnect(e)}\r\n                >\r\n                  Disconnect Websocket\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  onClick={(e) => clickJoin(e)}\r\n                >\r\n                  Connect Websocket\r\n                </button>\r\n              )}\r\n\r\n              <div className=\"row mt-2\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"input-group mb-3\">\r\n                    <input\r\n                      id=\"user\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"User Id\"\r\n                      type=\"text\"\r\n                      placeholder=\"User\"\r\n                      value={sendToUser}\r\n                      onChange={(e) => setSendToUser(e.target.value)}\r\n                    />\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-outline-primary\"\r\n                      aria-current=\"true\"\r\n                      disabled={connected ? false : true}\r\n                      onClick={(e) => clickHandler(sendToUser, \"\")}\r\n                    >\r\n                      Start Chat\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-6 col-md-10 my-auto mx-auto\">\r\n          {chatIndex > -1 ? <ChatArea /> : null}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n/*\r\n return (\r\n    <div>\r\n      {chat.map((eachChat, index) => {\r\n        return (\r\n          <div key={index}>\r\n            <p>{eachChat.message}</p>\r\n            <input\r\n              type=\"text\"\r\n              value={eachChat.sendMessage}\r\n              onChange={(e) => {\r\n                arr.current[index].sendMessage = e.target.value;\r\n                setChat([...arr.current]);\r\n              }}\r\n            ></input>\r\n            <button\r\n              disabled={connnected ? false : true}\r\n              onClick={(e) =>\r\n                clickHandler(eachChat.publisher, eachChat.sendMessage)\r\n              }\r\n            >\r\n              Send to {eachChat.publisher}\r\n            </button>\r\n          </div>\r\n        );\r\n      })}\r\n      <header className=\"App-header\">\r\n        <p>{youSent}</p>\r\n        <p>\r\n          <button onClick={(e) => clickJoin(e)}>Join</button>\r\n          <button\r\n            disabled={connnected ? false : true}\r\n            onClick={(e) => clickHandler(props.match.params.sendTo, \"hi\")}\r\n          >\r\n            Send to {props.match.params.sendTo}\r\n          </button>\r\n\r\n          <button onClick={(e) => handleDisconnect(e)}>Disconnect</button>\r\n        </p>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\n*/\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/Images/ProductCoverImage.js",["304"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport icon from \"../icon/product.svg\";\r\n\r\nexport const ProductCoverImage = (props) => {\r\n  const [path, setPath] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const server = useContext(ServerContext);\r\n\r\n  useEffect(() => {\r\n    FetchPath();\r\n  }, []);\r\n\r\n  const FetchPath = () => {\r\n    axios\r\n      .get(`${server}/items/getItemFileLocations/${props.itemId}`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        if (res.data != null) {\r\n          setPath(res.data.pathList);\r\n          setLoading(false);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  let firstPicPath;\r\n  if (!loading) {\r\n    if (path != null) {\r\n      firstPicPath = path[0];\r\n    }\r\n  }\r\n\r\n  if (!firstPicPath) {\r\n    return (\r\n      <img\r\n        src={icon}\r\n        style={{ height: \"15rem\", width: \"15rem\" }}\r\n        className=\"img-fluid\"\r\n        alt=\"Product\"\r\n      />\r\n    );\r\n  }\r\n\r\n  console.log(\"path:\" + firstPicPath);\r\n  console.log(\"itemid: \" +props.itemId)\r\n\r\n\r\n  return (\r\n    <img\r\n      style={{ height: \"15rem\", width: \"15rem\" }}\r\n      alt=\"Product\"\r\n      className=\"img-fluid\"\r\n      src={`${server}/storage/getItemFiles/${props.itemId}/${firstPicPath}`}\r\n    />\r\n  );\r\n};\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/Images/UploadProductImage.js",["305","306"],"import React, {\r\n  useState,\r\n  useCallback,\r\n  useEffect,\r\n  useRef,\r\n  useContext,\r\n} from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport axios from \"axios\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\n\r\nexport const UploadProductImage = ({ itemId, newItemSaved, rerender }) => {\r\n  //Keep files in memory to between re-renders, access and set files with .current property\r\n  const file = useRef([]);\r\n  //To trigger re-render\r\n  const [pics, setPics] = useState([]);\r\n  //Convert files to images and store\r\n  const savedPics = useRef([]);\r\n\r\n  const server = useContext(ServerContext);\r\n\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    file.current = acceptedFiles;\r\n    console.log(\"file saved\");\r\n\r\n    /**\r\n     * Each file needs a new FileReader for asynchronous converting.\r\n     * After conversion destructure savedPics Ref and add newly converted image\r\n     * change setPic to trigger re-render\r\n     */\r\n    file.current.forEach((eachfile) => {\r\n      let reader = new FileReader();\r\n      reader.readAsDataURL(eachfile);\r\n      reader.onload = () => {\r\n        savedPics.current = [...savedPics.current, reader.result];\r\n        console.log(savedPics.current);\r\n        setPics([reader.result]);\r\n      };\r\n    });\r\n\r\n    // Do something with the files\r\n  }, []);\r\n\r\n  // When item saved to database and id retrieved, run Postfiles function\r\n  // Changing (addPic) in EditPictures Module runs this function to save pictures\r\n  useEffect(() => {\r\n    //   console.log(itemId);\r\n    if (file != null && itemId != null) {\r\n      console.log(itemId + \" not null\");\r\n      PostFiles(file.current, itemId);\r\n    }\r\n  }, [newItemSaved]);\r\n\r\n  const PostFiles = (fileArray, itemId) => {\r\n    console.log(itemId);\r\n    fileArray.forEach((eachFileInArray) => {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", eachFileInArray);\r\n      if (itemId != null) {\r\n        axios\r\n          .post(`${server}/storage/save/${itemId}`, formData, {\r\n            headers: {\r\n              \"Content-Type\": \"multipart/form-data\",\r\n            },\r\n          })\r\n          .then((res) => {\r\n            console.log(\"file sent\");\r\n\r\n            rerender((prev) => [...prev, 1]);\r\n          })\r\n          .catch((err) => console.log(err));\r\n        file.current = [];\r\n        savedPics.current = [];\r\n      }\r\n    });\r\n  };\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row row-cols-3 carousel slide\">\r\n        {savedPics.current.map((p, index) => {\r\n          return (\r\n            <div className=\"col\" key={index}>\r\n              <div className=\"card\">\r\n                <div className=\"img-container\">\r\n                  <img alt=\"Product\" className=\"card-img-top\" src={p} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"row row-cols-1 pb-2\">\r\n        <div className=\"position-relative p-5 bg-secondary\" {...getRootProps()}>\r\n          <input\r\n            className=\"bg-primary p-5 stretched-link\"\r\n            {...getInputProps()}\r\n          />\r\n          {isDragActive ? (\r\n            <p>Drop the files here ...</p>\r\n          ) : (\r\n            <p>Drag 'n' drop product pictures here, or click to select files</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/Components/ItemRating.js",["307","308"],"import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport axios from \"axios\";\r\nimport styles from \"./star.module.css\";\r\n\r\nexport const ItemRating = ({ itemId, showNumberOfRaters }) => {\r\n  const [rating, setRating] = useState(0);\r\n  const server = useContext(ServerContext);\r\n  const [numberOfRatings, setNumberOfRatings] = useState();\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${server}/itemDetails/getItemRating/${itemId}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.itemRating) {\r\n          setRating(res.data.itemRating);\r\n          setNumberOfRatings(res.data.numberOfRatings);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, [itemId]);\r\n\r\n  return (\r\n    <div className={styles.Stars} style={{ \"--rating\": rating }}>\r\n      {showNumberOfRaters && numberOfRatings ? <span> {numberOfRatings} ratings</span> : null}\r\n    </div>\r\n  );\r\n};\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/Components/FilterBar.js",["309","310","311","312","313","314","315","316"],"import React, { useState, useContext } from \"react\";\r\nimport { ProductContext } from \"../Contexts/ProductContext\";\r\n\r\nexport const FilterBar = () => {\r\n  const {\r\n    products,\r\n    setProducts,\r\n    currentPage,\r\n    setCurrentPage,\r\n    pageSize,\r\n    setPageSize,\r\n    sortBy,\r\n    setSortBy,\r\n    numberOfTotalPages,\r\n    direction,\r\n    setDirection,\r\n    minPriceFilter,\r\n    setMinPriceFilter,\r\n    maxPriceFilter,\r\n    setMaxPriceFilter,\r\n  } = useContext(ProductContext);\r\n  const [min, setMin] = useState();\r\n  const [max, setMax] = useState();\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    setMinPriceFilter(min);\r\n    setMaxPriceFilter(max);\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"input-group mb-3\">\r\n        <label className=\"input-group-text\" for=\"inputGroupSelect1\">\r\n          Number of Items Each Page\r\n        </label>\r\n        <select\r\n          value={pageSize}\r\n          onChange={(e) => {\r\n            setCurrentPage(0);\r\n            setPageSize(e.target.value);\r\n          }}\r\n          className=\"form-select\"\r\n          id=\"inputGroupSelect1\"\r\n        >\r\n          <option value=\"1\" defaultValue>\r\n            1\r\n          </option>\r\n          <option value=\"2\">2</option>\r\n          <option value=\"5\">5</option>\r\n          <option value=\"10\">10</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"input-group mb-3\">\r\n        <label className=\"input-group-text\" for=\"inputGroupSelect2\">\r\n          Sort By\r\n        </label>\r\n        <select\r\n          value={direction}\r\n          onChange={(e) => {\r\n            setCurrentPage(0);\r\n            setDirection(e.target.value);\r\n          }}\r\n          className=\"form-select\"\r\n          id=\"inputGroupSelect2\"\r\n        >\r\n          <option value=\"1\" defaultValue>\r\n            Price: Low to High\r\n          </option>\r\n          <option value=\"2\">Price: High to Low</option>\r\n        </select>\r\n      </div>\r\n      <form noValidate onSubmit={handleSubmit}>\r\n        <div className=\"input-group \">\r\n          <label className=\"input-group-text\" for=\"setmin\">\r\n            Price$\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            aria-label=\"Min Price\"\r\n            className=\"form-control\"\r\n            placeholder=\"Min\"\r\n            id=\"setmin\"\r\n            value={min}\r\n            onChange={(e) => {\r\n              if (e.target.value) {\r\n                setMin(parseInt(e.target.value));\r\n              }\r\n            }}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            aria-label=\"Max Price\"\r\n            className=\"form-control\"\r\n            placeholder=\"Max\"\r\n            value={max}\r\n            onChange={(e) => {\r\n              if (e.target.value) {\r\n                setMax(parseFloat(e.target.value));\r\n              }\r\n            }}\r\n          />\r\n          <button className=\"btn btn-primary \" type=\"submit\">\r\n            Filter\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/Review/Reviews.js",["317","318","319","320","321"],"import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport { ItemRating } from \"../Components/ItemRating\";\r\n\r\nexport const Reviews = ({ itemId }) => {\r\n  const [reviews, setReviews] = useState([]);\r\n  const server = useContext(ServerContext);\r\n\r\n  const [fetchDone, setFetchDone] = useState(false);\r\n  const fetched = useRef(false);\r\n  /*\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${server}/itemDetails/getItemsReviews/${itemId}`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setReviews(res.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, [itemId]);\r\n*/\r\n\r\n  /**\r\n   * start streaming and if there is an element with existing id, it means stream started again\r\n   * and then close the stream.\r\n   * reviewArray is necessary to store streamed items\r\n   */\r\n  useEffect(() => {\r\n    const source = new EventSource(\r\n      `${server}/itemDetails/getItemsReviews/${itemId}`\r\n    );\r\n    console.log(reviews);\r\n    var reviewArray = [];\r\n    source.onmessage = function logEvents(event) {\r\n      console.log(reviewArray);\r\n      const e = JSON.parse(event.data);\r\n      if (reviewArray.findIndex((r) => r.id == e.id) > -1) {\r\n        source.close();\r\n      } else {\r\n        reviewArray = [...reviewArray, e];\r\n        setReviews(reviewArray);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  if (!reviews) {\r\n    return null;\r\n  }\r\n\r\n  /*\r\n{reviews.map((eachReview, index) => {\r\n        return (\r\n          <div key={index}>\r\n            <p>{eachReview.review}</p>\r\n          </div>\r\n        );\r\n      })}\r\n\r\n  */\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h3>Product Reviews</h3>\r\n      <p>\r\n        Rating: <ItemRating itemId={itemId} showNumberOfRaters={true} />{\" \"}\r\n      </p>\r\n      {reviews.map((eachReview, index) => {\r\n        return (\r\n          <div className=\"m-3 border border-primary rounded-3\" key={index}>\r\n            <p>{eachReview.review}</p>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/Auth/LoginModal.js",["322","323"],"import React, { useState, useEffect } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nfunction LoginModal({ history, isModalOpen }) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [timer, setTimer] = useState(3);\r\n  const [title, setTitle] = useState(\"Login successful...\");\r\n\r\n  useEffect(() => {\r\n    setIsOpen(isModalOpen);\r\n  }, [isModalOpen]);\r\n\r\n  const showModal = () => {\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const hideModal = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const modalLoaded = () => {\r\n    setInterval(() => {\r\n      setTimer((prev) => prev - 1);\r\n    }, 1000);\r\n\r\n    setTimeout(() => {\r\n      history.push(\"/\");\r\n    }, 3000);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal show={isOpen} onHide={hideModal} onEntered={modalLoaded}>\r\n        <Modal.Header>\r\n          <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Redirecting... {timer}</Modal.Body>\r\n        <Modal.Footer></Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoginModal;\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/Profile/EditSuccessModal.js",["324","325"],"import React, { useState, useEffect } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nfunction EditSuccessModal({ history, isModalOpen }) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [timer, setTimer] = useState(3);\r\n  const [title, setTitle] = useState(\"Edit successful, Login Required...\");\r\n\r\n  useEffect(() => {\r\n    setIsOpen(isModalOpen);\r\n  }, [isModalOpen]);\r\n\r\n  const showModal = () => {\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const hideModal = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const modalLoaded = () => {\r\n    setInterval(() => {\r\n      setTimer((prev) => prev - 1);\r\n    }, 1000);\r\n\r\n    setTimeout(() => {\r\n      history.push(\"/login\");\r\n    }, 3000);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal show={isOpen} onHide={hideModal} onEntered={modalLoaded}>\r\n        <Modal.Header>\r\n          <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Redirecting... {timer}</Modal.Body>\r\n        <Modal.Footer></Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EditSuccessModal;\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/Chat/ChatArea.js",["326","327","328","329","330","331","332","333","334","335","336"],"import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport { CustomerProfileContext } from \"../Contexts/CustomerProfileContext\";\r\nimport { ChatContext } from \"../Contexts/ChatContext\";\r\nimport \"./chatarea.css\";\r\n\r\nexport const ChatArea = () => {\r\n  const {\r\n    connected,\r\n    subscribedTopics,\r\n    chat,\r\n    setChat,\r\n    client,\r\n    arr,\r\n    setConnected,\r\n    chatIndex,\r\n    setChatIndex,\r\n  } = useContext(ChatContext);\r\n\r\n  const {\r\n    customerProfile,\r\n    userProfile,\r\n    setCustomerProfile,\r\n    setUserProfile,\r\n  } = useContext(CustomerProfileContext);\r\n\r\n  const clickHandler = (subscriber, message) => {\r\n    client.current.publish({\r\n      destination: \"/app/chat\",\r\n      body: JSON.stringify({\r\n        content: message,\r\n        publisher: customerProfile.customerId,\r\n        subscriber: subscriber,\r\n      }),\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"chat changedd\");\r\n    console.log(chat);\r\n  }, [chat]);\r\n\r\n  /**\r\n   * Auto scroll to bottom when message content change\r\n   */\r\n  const messagesEndRef = useRef();\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [chat[chatIndex].message, chat[chatIndex].youSent]);\r\n\r\n  if (!chat || chat.length < 1) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div class=\"container-fluid body_cnt\">\r\n      <div className=\"card card_msg\">\r\n        <div className=\"card-body msg_card_body\">\r\n          {chat[chatIndex].message.map((msg, index) => {\r\n            return (\r\n              <div key={index}>\r\n                {msg && msg.length > 0 ? (\r\n                  <div className=\"d-flex justify-content-start mb-2\">\r\n                    <div className=\"msg_container\">{msg}</div>\r\n                  </div>\r\n                ) : null}\r\n                {chat[chatIndex].youSent[index] &&\r\n                chat[chatIndex].youSent[index].length > 0 ? (\r\n                  <div className=\"d-flex justify-content-end mb-2\">\r\n                    <div className=\"msg_container_send\">\r\n                      {chat[chatIndex].youSent[index]}\r\n                    </div>\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n            );\r\n          })}\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n        <div className=\"card-footer crd-footer\">\r\n          <div class=\"input-group\">\r\n            <input\r\n              className=\"form-control type_msg\"\r\n              type=\"text\"\r\n              value={chat[chatIndex].sendMessage}\r\n              onChange={(e) => {\r\n                arr.current[chatIndex].sendMessage = e.target.value;\r\n                setChat([...arr.current]);\r\n              }}\r\n              onKeyUp={(e) => {\r\n                if (e.key == \"Enter\") {\r\n                  clickHandler(\r\n                    chat[chatIndex].publisher,\r\n                    chat[chatIndex].sendMessage\r\n                  );\r\n                  arr.current[chatIndex].sendMessage = \"\";\r\n                  setChat([...arr.current]);\r\n                }\r\n              }}\r\n            ></input>\r\n\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                className=\"btn btn-primary btn_height\"\r\n                onClick={(e) => {\r\n                  clickHandler(\r\n                    chat[chatIndex].publisher,\r\n                    chat[chatIndex].sendMessage\r\n                  );\r\n                  arr.current[chatIndex].sendMessage = \"\";\r\n                  setChat([...arr.current]);\r\n                }}\r\n              >\r\n                Send\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/ProductSource/EditProductDefinition.js",["337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353"],"import { useState, useContext, useMemo, useEffect } from \"react\";\nimport { ServerContext } from \"../Contexts/ServerContext\";\nimport axios from \"axios\";\nimport { CustomerProfileContext } from \"../Contexts/CustomerProfileContext\";\nimport { ProductContext } from \"../Contexts/ProductContext\";\nimport { ManagedProductContext } from \"../Contexts/ManagedProductContext\";\n\nexport const EditProductDefinition = (props) => {\n  const {\n    products,\n    setProducts,\n    currentPage,\n    setCurrentPage,\n    pageSize,\n    setPageSize,\n    sortBy,\n    setSortBy,\n    numberOfTotalPages,\n  } = useContext(ProductContext);\n\n  const server = useContext(ServerContext);\n  const [itemName, setItemName] = useState(\"\");\n  const [itemPrice, setItemPrice] = useState(\"0.0\");\n  const [category, setCategory] = useState(\"\");\n  const [inStock, setInStock] = useState(0);\n  const [featured, setFeatured] = useState(false);\n\n  const [validated, setValidated] = useState(false);\n\n  const [newItemSaved, setNewItemSaved] = useState([]);\n\n  const { setProductChange } = useContext(ProductContext);\n\n  const [itemBeingEdited, setItemBeingEdited] = useState();\n\n  useEffect(() => {\n    setItemBeingEdited(\n      products.find(\n        (item) => item.itemId === parseInt(props.match.params.itemId)\n      )\n    );\n  }, []);\n\n  useEffect(() => {\n    if (itemBeingEdited) {\n      console.log(\"feaTURED: \" + itemBeingEdited.itemFeatured);\n      setItemName(itemBeingEdited.itemName);\n      setItemPrice(itemBeingEdited.itemPrice);\n      setCategory(itemBeingEdited.itemCategory);\n      setInStock(itemBeingEdited.itemLeftInStock);\n      setFeatured(itemBeingEdited.itemFeatured);\n    }\n  }, [itemBeingEdited]);\n\n  const {\n    customerProfile,\n    userProfile,\n    setCustomerProfile,\n    setUserProfile,\n  } = useContext(CustomerProfileContext);\n\n  const { myProducts, itemUpdate, setItemUpdate } = useContext(\n    ManagedProductContext\n  );\n\n  const validateForm = () => {\n    return (\n      itemName.length > 0 && itemPrice > 0 && category.length > 0 && inStock > 0\n    );\n  };\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget;\n\n    event.preventDefault();\n    if (form.checkValidity() === false) {\n      //do nothing\n    } else {\n      sendToServer();\n    }\n    setValidated((prev) => true);\n  };\n\n  function sendToServer() {\n    const EditedItem = {\n      itemId: props.match.params.itemId,\n      itemPrice: itemPrice,\n      itemName: itemName,\n      itemCategory: category,\n      itemFeatured: featured,\n      itemLeftInStock: inStock,\n      itemOwner: customerProfile.customerId,\n    };\n\n    axios\n      .put(`${server}/items/updateItem`, EditedItem, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: localStorage.getItem(\"TokenJWT\"),\n        },\n      })\n      .then((res) => {\n        console.log(res);\n        //Fetch user items again\n        setItemUpdate((prev) => [...prev, 1]);\n        setProductChange((prev) => [...prev, 1]);\n        console.log(\"item id: \" + EditedItem.itemId);\n        props.history.push(\"/edit-product/\" + EditedItem.itemId);\n      })\n      .catch((err) => console.log(err));\n  }\n\n  return (\n    <div className=\"container pt-5\">\n      <div className=\"row justify-content-center\">\n        <form\n          className=\"col-6 g-3 needs-validation\"\n          noValidate\n          validated={validated}\n          onSubmit={(event) => handleSubmit(event)}\n        >\n          <div className=\"col-7\">\n            <label for=\"itemname\" className=\"form-label\">\n              Product Name\n            </label>\n            <input\n              autoFocus\n              className=\"form-control\"\n              id=\"itemname\"\n              type=\"text\"\n              value={itemName}\n              onChange={(e) => setItemName(e.target.value)}\n              required\n            />\n          </div>\n          <div className=\"col-7\">\n            <label for=\"itemprice\" className=\"form-label\">\n              Product Price\n            </label>\n            <input\n              className=\"form-control\"\n              id=\"itemprice\"\n              type=\"text\"\n              value={itemPrice}\n              onChange={(e) => setItemPrice(parseFloat(e.target.value))}\n              required\n            />\n          </div>\n          <div className=\"col-7\">\n            <label for=\"itemcategory\" className=\"form-label\">\n              Product Category\n            </label>\n            <input\n              id=\"itemcategory\"\n              className=\"form-control\"\n              type=\"text\"\n              value={category}\n              onChange={(e) => setCategory(e.target.value)}\n              required\n            />\n\n            <div className=\"col-7\">\n              <label for=\"itemnuminstock\" className=\"form-label\">\n                Number of Product in Stock\n              </label>\n              <input\n                id=\"itemnuminstock\"\n                className=\"form-control\"\n                type=\"text\"\n                value={inStock}\n                onChange={(e) => {\n                  setInStock(e.target.value);\n                }}\n                required\n              />\n            </div>\n          </div>\n          <div className=\"col-12\">\n            <div className=\"form-check\">\n              <label for=\"itemfeatured\" className=\"from-check-label\">\n                Product Featured\n              </label>\n              <input\n                className=\"form-check-input\"\n                id=\"itemfeatured\"\n                type=\"checkbox\"\n                checked={featured}\n                onChange={(e) => setFeatured((prev) => !prev)}\n              />\n            </div>\n          </div>\n          <div className=\"col-12\">\n            <button\n              className=\"btn btn-primary p-2\"\n              type=\"submit\"\n              disabled={!validateForm()}\n            >\n              Save Product\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n",{"ruleId":"354","replacedBy":"355"},{"ruleId":"356","replacedBy":"357"},{"ruleId":"358","severity":1,"message":"359","line":7,"column":18,"nodeType":"360","messageId":"361","endLine":7,"endColumn":27},{"ruleId":"358","severity":1,"message":"362","line":1,"column":50,"nodeType":"360","messageId":"361","endLine":1,"endColumn":56},{"ruleId":"363","severity":1,"message":"364","line":60,"column":6,"nodeType":"365","endLine":68,"endColumn":4,"suggestions":"366"},{"ruleId":"363","severity":1,"message":"367","line":17,"column":6,"nodeType":"365","endLine":17,"endColumn":16,"suggestions":"368"},{"ruleId":"358","severity":1,"message":"369","line":16,"column":5,"nodeType":"360","messageId":"361","endLine":16,"endColumn":13},{"ruleId":"358","severity":1,"message":"370","line":17,"column":5,"nodeType":"360","messageId":"361","endLine":17,"endColumn":16},{"ruleId":"358","severity":1,"message":"371","line":19,"column":5,"nodeType":"360","messageId":"361","endLine":19,"endColumn":18},{"ruleId":"358","severity":1,"message":"372","line":21,"column":5,"nodeType":"360","messageId":"361","endLine":21,"endColumn":27},{"ruleId":"363","severity":1,"message":"373","line":26,"column":6,"nodeType":"365","endLine":26,"endColumn":27,"suggestions":"374"},{"ruleId":"358","severity":1,"message":"375","line":15,"column":5,"nodeType":"360","messageId":"361","endLine":15,"endColumn":16},{"ruleId":"358","severity":1,"message":"376","line":16,"column":5,"nodeType":"360","messageId":"361","endLine":16,"endColumn":23},{"ruleId":"358","severity":1,"message":"377","line":17,"column":5,"nodeType":"360","messageId":"361","endLine":17,"endColumn":19},{"ruleId":"363","severity":1,"message":"364","line":32,"column":6,"nodeType":"365","endLine":32,"endColumn":35,"suggestions":"378"},{"ruleId":"358","severity":1,"message":"370","line":20,"column":5,"nodeType":"360","messageId":"361","endLine":20,"endColumn":16},{"ruleId":"358","severity":1,"message":"371","line":22,"column":5,"nodeType":"360","messageId":"361","endLine":22,"endColumn":18},{"ruleId":"358","severity":1,"message":"379","line":23,"column":5,"nodeType":"360","messageId":"361","endLine":23,"endColumn":24},{"ruleId":"363","severity":1,"message":"380","line":56,"column":6,"nodeType":"365","endLine":56,"endColumn":18,"suggestions":"381"},{"ruleId":"363","severity":1,"message":"380","line":96,"column":6,"nodeType":"365","endLine":96,"endColumn":29,"suggestions":"382"},{"ruleId":"358","severity":1,"message":"375","line":16,"column":5,"nodeType":"360","messageId":"361","endLine":16,"endColumn":16},{"ruleId":"358","severity":1,"message":"376","line":17,"column":5,"nodeType":"360","messageId":"361","endLine":17,"endColumn":23},{"ruleId":"358","severity":1,"message":"377","line":18,"column":5,"nodeType":"360","messageId":"361","endLine":18,"endColumn":19},{"ruleId":"358","severity":1,"message":"370","line":28,"column":5,"nodeType":"360","messageId":"361","endLine":28,"endColumn":16},{"ruleId":"358","severity":1,"message":"383","line":29,"column":5,"nodeType":"360","messageId":"361","endLine":29,"endColumn":15},{"ruleId":"358","severity":1,"message":"371","line":30,"column":5,"nodeType":"360","messageId":"361","endLine":30,"endColumn":18},{"ruleId":"358","severity":1,"message":"379","line":31,"column":5,"nodeType":"360","messageId":"361","endLine":31,"endColumn":24},{"ruleId":"363","severity":1,"message":"384","line":74,"column":6,"nodeType":"365","endLine":74,"endColumn":23,"suggestions":"385"},{"ruleId":"363","severity":1,"message":"386","line":136,"column":6,"nodeType":"365","endLine":136,"endColumn":24,"suggestions":"387"},{"ruleId":"363","severity":1,"message":"388","line":181,"column":6,"nodeType":"365","endLine":181,"endColumn":17,"suggestions":"389"},{"ruleId":"363","severity":1,"message":"364","line":19,"column":6,"nodeType":"365","endLine":19,"endColumn":33,"suggestions":"390"},{"ruleId":"358","severity":1,"message":"362","line":1,"column":50,"nodeType":"360","messageId":"361","endLine":1,"endColumn":56},{"ruleId":"358","severity":1,"message":"391","line":11,"column":5,"nodeType":"360","messageId":"361","endLine":11,"endColumn":16},{"ruleId":"358","severity":1,"message":"392","line":14,"column":5,"nodeType":"360","messageId":"361","endLine":14,"endColumn":13},{"ruleId":"358","severity":1,"message":"393","line":15,"column":5,"nodeType":"360","messageId":"361","endLine":15,"endColumn":16},{"ruleId":"358","severity":1,"message":"394","line":16,"column":5,"nodeType":"360","messageId":"361","endLine":16,"endColumn":11},{"ruleId":"358","severity":1,"message":"395","line":17,"column":5,"nodeType":"360","messageId":"361","endLine":17,"endColumn":14},{"ruleId":"358","severity":1,"message":"396","line":19,"column":5,"nodeType":"360","messageId":"361","endLine":19,"endColumn":14},{"ruleId":"358","severity":1,"message":"397","line":20,"column":5,"nodeType":"360","messageId":"361","endLine":20,"endColumn":17},{"ruleId":"358","severity":1,"message":"398","line":21,"column":5,"nodeType":"360","messageId":"361","endLine":21,"endColumn":19},{"ruleId":"358","severity":1,"message":"399","line":22,"column":5,"nodeType":"360","messageId":"361","endLine":22,"endColumn":22},{"ruleId":"358","severity":1,"message":"400","line":23,"column":5,"nodeType":"360","messageId":"361","endLine":23,"endColumn":19},{"ruleId":"358","severity":1,"message":"401","line":24,"column":5,"nodeType":"360","messageId":"361","endLine":24,"endColumn":22},{"ruleId":"402","severity":1,"message":"403","line":55,"column":51,"nodeType":"404","messageId":"405","endLine":55,"endColumn":53},{"ruleId":"363","severity":1,"message":"406","line":74,"column":6,"nodeType":"365","endLine":74,"endColumn":40,"suggestions":"407"},{"ruleId":"358","severity":1,"message":"408","line":1,"column":32,"nodeType":"360","messageId":"361","endLine":1,"endColumn":39},{"ruleId":"358","severity":1,"message":"375","line":25,"column":5,"nodeType":"360","messageId":"361","endLine":25,"endColumn":16},{"ruleId":"358","severity":1,"message":"376","line":26,"column":5,"nodeType":"360","messageId":"361","endLine":26,"endColumn":23},{"ruleId":"358","severity":1,"message":"377","line":27,"column":5,"nodeType":"360","messageId":"361","endLine":27,"endColumn":19},{"ruleId":"358","severity":1,"message":"409","line":30,"column":11,"nodeType":"360","messageId":"361","endLine":30,"endColumn":21},{"ruleId":"358","severity":1,"message":"410","line":30,"column":23,"nodeType":"360","messageId":"361","endLine":30,"endColumn":33},{"ruleId":"358","severity":1,"message":"411","line":7,"column":10,"nodeType":"360","messageId":"361","endLine":7,"endColumn":14},{"ruleId":"358","severity":1,"message":"391","line":18,"column":5,"nodeType":"360","messageId":"361","endLine":18,"endColumn":16},{"ruleId":"358","severity":1,"message":"412","line":19,"column":5,"nodeType":"360","messageId":"361","endLine":19,"endColumn":16},{"ruleId":"358","severity":1,"message":"413","line":20,"column":5,"nodeType":"360","messageId":"361","endLine":20,"endColumn":19},{"ruleId":"358","severity":1,"message":"392","line":21,"column":5,"nodeType":"360","messageId":"361","endLine":21,"endColumn":13},{"ruleId":"358","severity":1,"message":"393","line":22,"column":5,"nodeType":"360","messageId":"361","endLine":22,"endColumn":16},{"ruleId":"358","severity":1,"message":"394","line":23,"column":5,"nodeType":"360","messageId":"361","endLine":23,"endColumn":11},{"ruleId":"358","severity":1,"message":"395","line":24,"column":5,"nodeType":"360","messageId":"361","endLine":24,"endColumn":14},{"ruleId":"358","severity":1,"message":"414","line":25,"column":5,"nodeType":"360","messageId":"361","endLine":25,"endColumn":23},{"ruleId":"363","severity":1,"message":"364","line":36,"column":6,"nodeType":"365","endLine":36,"endColumn":33,"suggestions":"415"},{"ruleId":"363","severity":1,"message":"416","line":24,"column":6,"nodeType":"365","endLine":24,"endColumn":8,"suggestions":"417"},{"ruleId":"358","severity":1,"message":"418","line":17,"column":5,"nodeType":"360","messageId":"361","endLine":17,"endColumn":20},{"ruleId":"358","severity":1,"message":"376","line":19,"column":5,"nodeType":"360","messageId":"361","endLine":19,"endColumn":23},{"ruleId":"358","severity":1,"message":"377","line":20,"column":5,"nodeType":"360","messageId":"361","endLine":20,"endColumn":19},{"ruleId":"363","severity":1,"message":"419","line":32,"column":6,"nodeType":"365","endLine":32,"endColumn":18,"suggestions":"420"},{"ruleId":"363","severity":1,"message":"421","line":15,"column":6,"nodeType":"365","endLine":15,"endColumn":23,"suggestions":"422"},{"ruleId":"423","severity":1,"message":"424","line":39,"column":26,"nodeType":"425","messageId":"426","endLine":39,"endColumn":28},{"ruleId":"402","severity":1,"message":"427","line":44,"column":62,"nodeType":"404","messageId":"405","endLine":44,"endColumn":64},{"ruleId":"363","severity":1,"message":"428","line":59,"column":6,"nodeType":"365","endLine":59,"endColumn":15,"suggestions":"429"},{"ruleId":"358","severity":1,"message":"430","line":1,"column":17,"nodeType":"360","messageId":"361","endLine":1,"endColumn":25},{"ruleId":"358","severity":1,"message":"431","line":1,"column":39,"nodeType":"360","messageId":"361","endLine":1,"endColumn":48},{"ruleId":"358","severity":1,"message":"432","line":10,"column":9,"nodeType":"360","messageId":"361","endLine":10,"endColumn":15},{"ruleId":"358","severity":1,"message":"369","line":12,"column":5,"nodeType":"360","messageId":"361","endLine":12,"endColumn":13},{"ruleId":"358","severity":1,"message":"383","line":14,"column":5,"nodeType":"360","messageId":"361","endLine":14,"endColumn":15},{"ruleId":"358","severity":1,"message":"379","line":16,"column":5,"nodeType":"360","messageId":"361","endLine":16,"endColumn":24},{"ruleId":"358","severity":1,"message":"433","line":27,"column":5,"nodeType":"360","messageId":"361","endLine":27,"endColumn":9},{"ruleId":"358","severity":1,"message":"434","line":30,"column":5,"nodeType":"360","messageId":"361","endLine":30,"endColumn":19},{"ruleId":"358","severity":1,"message":"435","line":32,"column":5,"nodeType":"360","messageId":"361","endLine":32,"endColumn":19},{"ruleId":"358","severity":1,"message":"436","line":37,"column":5,"nodeType":"360","messageId":"361","endLine":37,"endColumn":14},{"ruleId":"358","severity":1,"message":"437","line":38,"column":5,"nodeType":"360","messageId":"361","endLine":38,"endColumn":21},{"ruleId":"358","severity":1,"message":"438","line":39,"column":5,"nodeType":"360","messageId":"361","endLine":39,"endColumn":9},{"ruleId":"358","severity":1,"message":"439","line":44,"column":5,"nodeType":"360","messageId":"361","endLine":44,"endColumn":14},{"ruleId":"363","severity":1,"message":"421","line":16,"column":6,"nodeType":"365","endLine":16,"endColumn":8,"suggestions":"440"},{"ruleId":"423","severity":1,"message":"424","line":31,"column":38,"nodeType":"425","messageId":"426","endLine":31,"endColumn":40},{"ruleId":"441","severity":1,"message":"442","line":123,"column":19,"nodeType":"443","endLine":129,"endColumn":21},{"ruleId":"444","severity":1,"message":"445","line":123,"column":19,"nodeType":"443","endLine":129,"endColumn":21},{"ruleId":"358","severity":1,"message":"383","line":14,"column":5,"nodeType":"360","messageId":"361","endLine":14,"endColumn":15},{"ruleId":"358","severity":1,"message":"371","line":15,"column":5,"nodeType":"360","messageId":"361","endLine":15,"endColumn":18},{"ruleId":"358","severity":1,"message":"379","line":16,"column":5,"nodeType":"360","messageId":"361","endLine":16,"endColumn":24},{"ruleId":"358","severity":1,"message":"376","line":22,"column":5,"nodeType":"360","messageId":"361","endLine":22,"endColumn":23},{"ruleId":"358","severity":1,"message":"377","line":23,"column":5,"nodeType":"360","messageId":"361","endLine":23,"endColumn":19},{"ruleId":"358","severity":1,"message":"410","line":11,"column":23,"nodeType":"360","messageId":"361","endLine":11,"endColumn":33},{"ruleId":"358","severity":1,"message":"375","line":21,"column":5,"nodeType":"360","messageId":"361","endLine":21,"endColumn":16},{"ruleId":"358","severity":1,"message":"376","line":22,"column":5,"nodeType":"360","messageId":"361","endLine":22,"endColumn":23},{"ruleId":"358","severity":1,"message":"377","line":23,"column":5,"nodeType":"360","messageId":"361","endLine":23,"endColumn":19},{"ruleId":"358","severity":1,"message":"370","line":12,"column":21,"nodeType":"360","messageId":"361","endLine":12,"endColumn":32},{"ruleId":"363","severity":1,"message":"446","line":20,"column":6,"nodeType":"365","endLine":20,"endColumn":23,"suggestions":"447"},{"ruleId":"358","severity":1,"message":"431","line":1,"column":39,"nodeType":"360","messageId":"361","endLine":1,"endColumn":48},{"ruleId":"358","severity":1,"message":"448","line":11,"column":19,"nodeType":"360","messageId":"361","endLine":11,"endColumn":29},{"ruleId":"358","severity":1,"message":"431","line":1,"column":27,"nodeType":"360","messageId":"361","endLine":1,"endColumn":36},{"ruleId":"358","severity":1,"message":"375","line":13,"column":5,"nodeType":"360","messageId":"361","endLine":13,"endColumn":16},{"ruleId":"358","severity":1,"message":"376","line":14,"column":5,"nodeType":"360","messageId":"361","endLine":14,"endColumn":23},{"ruleId":"358","severity":1,"message":"377","line":15,"column":5,"nodeType":"360","messageId":"361","endLine":15,"endColumn":19},{"ruleId":"358","severity":1,"message":"433","line":12,"column":11,"nodeType":"360","messageId":"361","endLine":12,"endColumn":15},{"ruleId":"358","severity":1,"message":"449","line":12,"column":17,"nodeType":"360","messageId":"361","endLine":12,"endColumn":24},{"ruleId":"358","severity":1,"message":"450","line":12,"column":26,"nodeType":"360","messageId":"361","endLine":12,"endColumn":35},{"ruleId":"358","severity":1,"message":"391","line":16,"column":5,"nodeType":"360","messageId":"361","endLine":16,"endColumn":16},{"ruleId":"358","severity":1,"message":"412","line":17,"column":5,"nodeType":"360","messageId":"361","endLine":17,"endColumn":16},{"ruleId":"358","severity":1,"message":"413","line":18,"column":5,"nodeType":"360","messageId":"361","endLine":18,"endColumn":19},{"ruleId":"358","severity":1,"message":"392","line":19,"column":5,"nodeType":"360","messageId":"361","endLine":19,"endColumn":13},{"ruleId":"358","severity":1,"message":"393","line":20,"column":5,"nodeType":"360","messageId":"361","endLine":20,"endColumn":16},{"ruleId":"358","severity":1,"message":"394","line":21,"column":5,"nodeType":"360","messageId":"361","endLine":21,"endColumn":11},{"ruleId":"358","severity":1,"message":"395","line":22,"column":5,"nodeType":"360","messageId":"361","endLine":22,"endColumn":14},{"ruleId":"358","severity":1,"message":"414","line":23,"column":5,"nodeType":"360","messageId":"361","endLine":23,"endColumn":23},{"ruleId":"358","severity":1,"message":"451","line":26,"column":10,"nodeType":"360","messageId":"361","endLine":26,"endColumn":20},{"ruleId":"358","severity":1,"message":"452","line":26,"column":22,"nodeType":"360","messageId":"361","endLine":26,"endColumn":35},{"ruleId":"363","severity":1,"message":"364","line":34,"column":6,"nodeType":"365","endLine":34,"endColumn":33,"suggestions":"453"},{"ruleId":"358","severity":1,"message":"362","line":1,"column":50,"nodeType":"360","messageId":"361","endLine":1,"endColumn":56},{"ruleId":"358","severity":1,"message":"437","line":9,"column":5,"nodeType":"360","messageId":"361","endLine":9,"endColumn":21},{"ruleId":"358","severity":1,"message":"375","line":21,"column":5,"nodeType":"360","messageId":"361","endLine":21,"endColumn":16},{"ruleId":"358","severity":1,"message":"376","line":22,"column":5,"nodeType":"360","messageId":"361","endLine":22,"endColumn":23},{"ruleId":"358","severity":1,"message":"377","line":23,"column":5,"nodeType":"360","messageId":"361","endLine":23,"endColumn":19},{"ruleId":"454","severity":1,"message":"455","line":119,"column":23,"nodeType":"456","endLine":119,"endColumn":41},{"ruleId":"363","severity":1,"message":"421","line":13,"column":6,"nodeType":"365","endLine":13,"endColumn":8,"suggestions":"457"},{"ruleId":"358","severity":1,"message":"458","line":16,"column":10,"nodeType":"360","messageId":"361","endLine":16,"endColumn":14},{"ruleId":"363","severity":1,"message":"459","line":52,"column":6,"nodeType":"365","endLine":52,"endColumn":20,"suggestions":"460"},{"ruleId":"358","severity":1,"message":"362","line":1,"column":50,"nodeType":"360","messageId":"361","endLine":1,"endColumn":56},{"ruleId":"363","severity":1,"message":"364","line":22,"column":6,"nodeType":"365","endLine":22,"endColumn":14,"suggestions":"461"},{"ruleId":"358","severity":1,"message":"462","line":6,"column":5,"nodeType":"360","messageId":"361","endLine":6,"endColumn":13},{"ruleId":"358","severity":1,"message":"391","line":7,"column":5,"nodeType":"360","messageId":"361","endLine":7,"endColumn":16},{"ruleId":"358","severity":1,"message":"412","line":8,"column":5,"nodeType":"360","messageId":"361","endLine":8,"endColumn":16},{"ruleId":"358","severity":1,"message":"394","line":12,"column":5,"nodeType":"360","messageId":"361","endLine":12,"endColumn":11},{"ruleId":"358","severity":1,"message":"395","line":13,"column":5,"nodeType":"360","messageId":"361","endLine":13,"endColumn":14},{"ruleId":"358","severity":1,"message":"414","line":14,"column":5,"nodeType":"360","messageId":"361","endLine":14,"endColumn":23},{"ruleId":"358","severity":1,"message":"398","line":17,"column":5,"nodeType":"360","messageId":"361","endLine":17,"endColumn":19},{"ruleId":"358","severity":1,"message":"400","line":19,"column":5,"nodeType":"360","messageId":"361","endLine":19,"endColumn":19},{"ruleId":"358","severity":1,"message":"463","line":9,"column":10,"nodeType":"360","messageId":"361","endLine":9,"endColumn":19},{"ruleId":"358","severity":1,"message":"464","line":9,"column":21,"nodeType":"360","messageId":"361","endLine":9,"endColumn":33},{"ruleId":"358","severity":1,"message":"465","line":10,"column":9,"nodeType":"360","messageId":"361","endLine":10,"endColumn":16},{"ruleId":"402","severity":1,"message":"427","line":37,"column":45,"nodeType":"404","messageId":"405","endLine":37,"endColumn":47},{"ruleId":"363","severity":1,"message":"466","line":44,"column":6,"nodeType":"365","endLine":44,"endColumn":8,"suggestions":"467"},{"ruleId":"358","severity":1,"message":"468","line":7,"column":17,"nodeType":"360","messageId":"361","endLine":7,"endColumn":25},{"ruleId":"358","severity":1,"message":"469","line":13,"column":9,"nodeType":"360","messageId":"361","endLine":13,"endColumn":18},{"ruleId":"358","severity":1,"message":"468","line":7,"column":17,"nodeType":"360","messageId":"361","endLine":7,"endColumn":25},{"ruleId":"358","severity":1,"message":"469","line":13,"column":9,"nodeType":"360","messageId":"361","endLine":13,"endColumn":18},{"ruleId":"358","severity":1,"message":"430","line":1,"column":17,"nodeType":"360","messageId":"361","endLine":1,"endColumn":25},{"ruleId":"358","severity":1,"message":"436","line":8,"column":5,"nodeType":"360","messageId":"361","endLine":8,"endColumn":14},{"ruleId":"358","severity":1,"message":"437","line":9,"column":5,"nodeType":"360","messageId":"361","endLine":9,"endColumn":21},{"ruleId":"358","severity":1,"message":"470","line":14,"column":5,"nodeType":"360","messageId":"361","endLine":14,"endColumn":17},{"ruleId":"358","severity":1,"message":"471","line":16,"column":5,"nodeType":"360","messageId":"361","endLine":16,"endColumn":17},{"ruleId":"358","severity":1,"message":"375","line":21,"column":5,"nodeType":"360","messageId":"361","endLine":21,"endColumn":16},{"ruleId":"358","severity":1,"message":"376","line":22,"column":5,"nodeType":"360","messageId":"361","endLine":22,"endColumn":23},{"ruleId":"358","severity":1,"message":"377","line":23,"column":5,"nodeType":"360","messageId":"361","endLine":23,"endColumn":19},{"ruleId":"363","severity":1,"message":"472","line":53,"column":7,"nodeType":"473","endLine":53,"endColumn":30},{"ruleId":"363","severity":1,"message":"472","line":53,"column":32,"nodeType":"473","endLine":53,"endColumn":55},{"ruleId":"402","severity":1,"message":"427","line":95,"column":27,"nodeType":"404","messageId":"405","endLine":95,"endColumn":29},{"ruleId":"358","severity":1,"message":"408","line":1,"column":32,"nodeType":"360","messageId":"361","endLine":1,"endColumn":39},{"ruleId":"358","severity":1,"message":"391","line":11,"column":5,"nodeType":"360","messageId":"361","endLine":11,"endColumn":16},{"ruleId":"358","severity":1,"message":"412","line":12,"column":5,"nodeType":"360","messageId":"361","endLine":12,"endColumn":16},{"ruleId":"358","severity":1,"message":"413","line":13,"column":5,"nodeType":"360","messageId":"361","endLine":13,"endColumn":19},{"ruleId":"358","severity":1,"message":"392","line":14,"column":5,"nodeType":"360","messageId":"361","endLine":14,"endColumn":13},{"ruleId":"358","severity":1,"message":"393","line":15,"column":5,"nodeType":"360","messageId":"361","endLine":15,"endColumn":16},{"ruleId":"358","severity":1,"message":"394","line":16,"column":5,"nodeType":"360","messageId":"361","endLine":16,"endColumn":11},{"ruleId":"358","severity":1,"message":"395","line":17,"column":5,"nodeType":"360","messageId":"361","endLine":17,"endColumn":14},{"ruleId":"358","severity":1,"message":"414","line":18,"column":5,"nodeType":"360","messageId":"361","endLine":18,"endColumn":23},{"ruleId":"358","severity":1,"message":"474","line":30,"column":10,"nodeType":"360","messageId":"361","endLine":30,"endColumn":22},{"ruleId":"358","severity":1,"message":"475","line":30,"column":24,"nodeType":"360","messageId":"361","endLine":30,"endColumn":39},{"ruleId":"363","severity":1,"message":"476","line":42,"column":6,"nodeType":"365","endLine":42,"endColumn":8,"suggestions":"477"},{"ruleId":"358","severity":1,"message":"375","line":57,"column":5,"nodeType":"360","messageId":"361","endLine":57,"endColumn":16},{"ruleId":"358","severity":1,"message":"376","line":58,"column":5,"nodeType":"360","messageId":"361","endLine":58,"endColumn":23},{"ruleId":"358","severity":1,"message":"377","line":59,"column":5,"nodeType":"360","messageId":"361","endLine":59,"endColumn":19},{"ruleId":"358","severity":1,"message":"409","line":62,"column":11,"nodeType":"360","messageId":"361","endLine":62,"endColumn":21},{"ruleId":"358","severity":1,"message":"410","line":62,"column":23,"nodeType":"360","messageId":"361","endLine":62,"endColumn":33},"no-native-reassign",["478"],"no-negated-in-lhs",["479"],"no-unused-vars","'setServer' is assigned a value but never used.","Identifier","unusedVar","'useRef' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'server'. Either include it or remove the dependency array.","ArrayExpression",["480"],"React Hook useEffect has a missing dependency: 'checkAuthorization'. Either include it or remove the dependency array.",["481"],"'loggedIn' is assigned a value but never used.","'setLoggedIn' is assigned a value but never used.","'setCustomerFK' is assigned a value but never used.","'setLoginWithJWTSuccess' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchUserProfile'. Either include it or remove the dependency array.",["482"],"'userProfile' is assigned a value but never used.","'setCustomerProfile' is assigned a value but never used.","'setUserProfile' is assigned a value but never used.",["483"],"'loginWithJWTSuccess' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'firstFetchDone', 'loggedIn', and 'server'. Either include them or remove the dependency array.",["484"],["485"],"'customerFK' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loggedIn' and 'server'. Either include them or remove the dependency array.",["486"],"React Hook useEffect has missing dependencies: 'customerProfile' and 'loggedIn'. Either include them or remove the dependency array.",["487"],"React Hook useEffect has missing dependencies: 'connected', 'customerProfile', and 'loggedIn'. Either include them or remove the dependency array.",["488"],["489"],"'setProducts' is assigned a value but never used.","'pageSize' is assigned a value but never used.","'setPageSize' is assigned a value but never used.","'sortBy' is assigned a value but never used.","'setSortBy' is assigned a value but never used.","'direction' is assigned a value but never used.","'setDirection' is assigned a value but never used.","'minPriceFilter' is assigned a value but never used.","'setMinPriceFilter' is assigned a value but never used.","'maxPriceFilter' is assigned a value but never used.","'setMaxPriceFilter' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'currentPage' and 'pageNumberArray'. Either include them or remove the dependency array.",["490"],"'useMemo' is defined but never used.","'myProducts' is assigned a value but never used.","'itemUpdate' is assigned a value but never used.","'Link' is defined but never used.","'currentPage' is assigned a value but never used.","'setCurrentPage' is assigned a value but never used.","'numberOfTotalPages' is assigned a value but never used.",["491"],"React Hook useEffect has missing dependencies: 'props.match.params.uuid' and 'server'. Either include them or remove the dependency array.",["492"],"'customerProfile' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'SearchTyped'. Either include it or remove the dependency array.",["493"],"React Hook useEffect has a missing dependency: 'FetchPath'. Either include it or remove the dependency array.",["494"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Expected '===' and instead saw '=='.","React Hook useEffect has missing dependencies: 'props.match.params.itemId' and 'server'. Either include them or remove the dependency array.",["495"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'server' is assigned a value but never used.","'cart' is assigned a value but never used.","'cartOrderItems' is assigned a value but never used.","'firstFetchDone' is assigned a value but never used.","'connected' is assigned a value but never used.","'subscribedTopics' is assigned a value but never used.","'chat' is assigned a value but never used.","'chatIndex' is assigned a value but never used.",["496"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has missing dependencies: 'FetchOrders' and 'loggedIn'. Either include them or remove the dependency array.",["497"],"'setTaxRate' is assigned a value but never used.","'setCart' is assigned a value but never used.","'savedCart' is assigned a value but never used.","'itemAmount' is assigned a value but never used.","'setItemAmount' is assigned a value but never used.",["498"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["499"],"'pics' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'PostFiles' and 'itemId'. Either include them or remove the dependency array.",["500"],["501"],"'products' is assigned a value but never used.","'fetchDone' is assigned a value but never used.","'setFetchDone' is assigned a value but never used.","'fetched' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'itemId', 'reviews', and 'server'. Either include them or remove the dependency array.",["502"],"'setTitle' is assigned a value but never used.","'showModal' is assigned a value but never used.","'setConnected' is assigned a value but never used.","'setChatIndex' is assigned a value but never used.","React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","'newItemSaved' is assigned a value but never used.","'setNewItemSaved' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'products' and 'props.match.params.itemId'. Either include them or remove the dependency array. If 'setItemBeingEdited' needs the current value of 'props.match.params.itemId', you can also switch to useReducer instead of useState and read 'props.match.params.itemId' in the reducer.",["503"],"no-global-assign","no-unsafe-negation",{"desc":"504","fix":"505"},{"desc":"506","fix":"507"},{"desc":"508","fix":"509"},{"desc":"510","fix":"511"},{"desc":"512","fix":"513"},{"desc":"514","fix":"515"},{"desc":"516","fix":"517"},{"desc":"518","fix":"519"},{"desc":"520","fix":"521"},{"desc":"522","fix":"523"},{"desc":"524","fix":"525"},{"desc":"522","fix":"526"},{"desc":"527","fix":"528"},{"desc":"529","fix":"530"},{"desc":"531","fix":"532"},{"desc":"533","fix":"534"},{"desc":"535","fix":"536"},{"desc":"537","fix":"538"},{"desc":"522","fix":"539"},{"desc":"535","fix":"540"},{"desc":"541","fix":"542"},{"desc":"543","fix":"544"},{"desc":"545","fix":"546"},{"desc":"547","fix":"548"},"Update the dependencies array to be: [currentPage, pageSize, sortBy, direction, minPriceFilter, maxPriceFilter, productChange, server]",{"range":"549","text":"550"},"Update the dependencies array to be: [checkAuthorization, loggedIn]",{"range":"551","text":"552"},"Update the dependencies array to be: [fetchUserProfile, loginWithJWTSuccess]",{"range":"553","text":"554"},"Update the dependencies array to be: [customerProfile, itemUpdate, server]",{"range":"555","text":"556"},"Update the dependencies array to be: [customerFK, firstFetchDone, loggedIn, server]",{"range":"557","text":"558"},"Update the dependencies array to be: [cart, customerProfile, firstFetchDone, loggedIn, server]",{"range":"559","text":"560"},"Update the dependencies array to be: [customerProfile, loggedIn, server]",{"range":"561","text":"562"},"Update the dependencies array to be: [customerProfile, loggedIn, subscribedTopics]",{"range":"563","text":"564"},"Update the dependencies array to be: [chatIndex, connected, customerProfile, loggedIn]",{"range":"565","text":"566"},"Update the dependencies array to be: [props.match.params.itemId, server]",{"range":"567","text":"568"},"Update the dependencies array to be: [currentPage, endOfPageSet, numberOfTotalPages, pageNumberArray]",{"range":"569","text":"570"},{"range":"571","text":"568"},"Update the dependencies array to be: [props.match.params.uuid, server]",{"range":"572","text":"573"},"Update the dependencies array to be: [SearchTyped, searchWord]",{"range":"574","text":"575"},"Update the dependencies array to be: [FetchPath, triggerReRender]",{"range":"576","text":"577"},"Update the dependencies array to be: [picPath, props.match.params.itemId, server]",{"range":"578","text":"579"},"Update the dependencies array to be: [FetchPath]",{"range":"580","text":"581"},"Update the dependencies array to be: [FetchOrders, customerProfile, loggedIn]",{"range":"582","text":"583"},{"range":"584","text":"568"},{"range":"585","text":"581"},"Update the dependencies array to be: [PostFiles, itemId, newItemSaved]",{"range":"586","text":"587"},"Update the dependencies array to be: [itemId, server]",{"range":"588","text":"589"},"Update the dependencies array to be: [itemId, reviews, server]",{"range":"590","text":"591"},"Update the dependencies array to be: [products, props.match.params.itemId]",{"range":"592","text":"593"},[1917,2047],"[currentPage, pageSize, sortBy, direction, minPriceFilter, maxPriceFilter, productChange, server]",[601,611],"[checkAuthorization, loggedIn]",[839,860],"[fetchUserProfile, loginWithJWTSuccess]",[990,1019],"[customerProfile, itemUpdate, server]",[2076,2088],"[customerFK, firstFetchDone, loggedIn, server]",[3299,3322],"[cart, customerProfile, firstFetchDone, loggedIn, server]",[2331,2348],"[customerProfile, loggedIn, server]",[4350,4368],"[customerProfile, loggedIn, subscribedTopics]",[5594,5605],"[chatIndex, connected, customerProfile, loggedIn]",[644,671],"[props.match.params.itemId, server]",[2167,2201],"[currentPage, endOfPageSet, numberOfTotalPages, pageNumberArray]",[1129,1156],[778,780],"[props.match.params.uuid, server]",[1046,1058],"[SearchTyped, searchWord]",[500,517],"[FetchPath, triggerReRender]",[1824,1833],"[picPath, props.match.params.itemId, server]",[487,489],"[FetchPath]",[745,762],"[FetchOrders, customerProfile, loggedIn]",[1024,1051],[424,426],[1669,1683],"[PostFiles, itemId, newItemSaved]",[769,777],"[itemId, server]",[1383,1385],"[itemId, reviews, server]",[1288,1290],"[products, props.match.params.itemId]"]