[{"D:\\IntelliJ Projects\\app\\src\\main\\front-end\\src\\index.js":"1","D:\\IntelliJ Projects\\app\\src\\main\\front-end\\src\\App.js":"2","D:\\IntelliJ Projects\\app\\src\\main\\front-end\\src\\Contexts\\ServerContext.js":"3","D:\\IntelliJ Projects\\app\\src\\main\\front-end\\src\\ProductSource\\Product.js":"4","D:\\IntelliJ Projects\\app\\src\\main\\front-end\\src\\ProductSource\\AddProduct.js":"5","D:\\IntelliJ Projects\\app\\src\\main\\front-end\\src\\Contexts\\ProductContext.js":"6","D:\\IntelliJ Projects\\app\\src\\main\\front-end\\src\\Auth\\Login.js":"7","D:\\IntelliJ Projects\\app\\src\\main\\front-end\\src\\Components\\CustomerSignUp.js":"8","D:\\IntelliJ Projects\\app\\src\\main\\front-end\\src\\Components\\Navbar.js":"9","D:\\IntelliJ Projects\\app\\src\\main\\front-end\\src\\ProductSource\\Image.js":"10","D:\\ReactPrjs\\front-end\\src\\index.js":"11","D:\\ReactPrjs\\front-end\\src\\App.js":"12","D:\\ReactPrjs\\front-end\\src\\ProductSource\\Product.js":"13","D:\\ReactPrjs\\front-end\\src\\ProductSource\\AddProduct.js":"14","D:\\ReactPrjs\\front-end\\src\\Contexts\\ProductContext.js":"15","D:\\ReactPrjs\\front-end\\src\\Contexts\\ServerContext.js":"16","D:\\ReactPrjs\\front-end\\src\\ProductSource\\Image.js":"17","D:\\ReactPrjs\\front-end\\src\\Components\\CustomerSignUp.js":"18","D:\\ReactPrjs\\front-end\\src\\Auth\\Login.js":"19","D:\\ReactPrjs\\front-end\\src\\Components\\Navbar.js":"20","D:\\ReactPrjs\\front-end\\src\\Contexts\\PathContext.js":"21","D:\\ReactPrjs\\front-end\\src\\ProductSource\\ProductCoverImage.js":"22","D:\\ReactPrjs\\front-end\\src\\ProductSource\\UploadProductImage.js":"23","D:\\ReactPrjs\\front-end\\src\\ProductSource\\ProductDetails.js":"24","D:\\ReactPrjs\\front-end\\src\\ProductSource\\EditProductDescription.js":"25","D:\\ReactPrjs\\front-end\\src\\Components\\LoginModal.js":"26","D:\\ReactPrjs\\front-end\\src\\Contexts\\LoginSuccessContext.js":"27","D:\\ReactPrjs\\front-end\\src\\Contexts\\CustomerProfileContext.js":"28","D:\\ReactPrjs\\front-end\\src\\Components\\CustomerProfile.js":"29","D:\\ReactPrjs\\front-end\\src\\Components\\EditCustomerProfile.js":"30","D:\\ReactPrjs\\front-end\\src\\Components\\EditSuccessModal.js":"31","D:\\ReactPrjs\\front-end\\src\\Components\\FilterBar.js":"32","D:\\ReactPrjs\\front-end\\src\\Auth\\PasswordResetRequest.js":"33","D:\\ReactPrjs\\front-end\\src\\Auth\\PasswordReset.js":"34","D:\\ReactPrjs\\front-end\\src\\Components\\Cart.js":"35","D:\\ReactPrjs\\front-end\\src\\Contexts\\CartContext.js":"36","D:\\ReactPrjs\\front-end\\src\\Components\\Orders.js":"37","D:\\ReactPrjs\\front-end\\src\\ProductSource\\EditPictures.js":"38"},{"size":411,"mtime":1610311289203,"results":"39","hashOfConfig":"40"},{"size":1266,"mtime":1610413093762,"results":"41","hashOfConfig":"40"},{"size":354,"mtime":1610311327024,"results":"42","hashOfConfig":"40"},{"size":1463,"mtime":1610383981883,"results":"43","hashOfConfig":"40"},{"size":3563,"mtime":1610383688903,"results":"44","hashOfConfig":"40"},{"size":798,"mtime":1610387135972,"results":"45","hashOfConfig":"40"},{"size":2429,"mtime":1610370105880,"results":"46","hashOfConfig":"40"},{"size":5026,"mtime":1610374787794,"results":"47","hashOfConfig":"40"},{"size":1394,"mtime":1610380188645,"results":"48","hashOfConfig":"40"},{"size":530,"mtime":1610449389434,"results":"49","hashOfConfig":"40"},{"size":410,"mtime":1610846178377,"results":"50","hashOfConfig":"51"},{"size":3333,"mtime":1611354139393,"results":"52","hashOfConfig":"51"},{"size":6964,"mtime":1611235171199,"results":"53","hashOfConfig":"51"},{"size":5009,"mtime":1611417587481,"results":"54","hashOfConfig":"51"},{"size":2577,"mtime":1611399175311,"results":"55","hashOfConfig":"51"},{"size":354,"mtime":1610311327024,"results":"56","hashOfConfig":"51"},{"size":5315,"mtime":1611406829115,"results":"57","hashOfConfig":"51"},{"size":5160,"mtime":1611519964845,"results":"58","hashOfConfig":"51"},{"size":4022,"mtime":1611519825085,"results":"59","hashOfConfig":"51"},{"size":4450,"mtime":1611255305538,"results":"60","hashOfConfig":"51"},{"size":897,"mtime":1610673337498,"results":"61","hashOfConfig":"51"},{"size":1276,"mtime":1611406743978,"results":"62","hashOfConfig":"51"},{"size":3220,"mtime":1611426601362,"results":"63","hashOfConfig":"51"},{"size":4458,"mtime":1611428115294,"results":"64","hashOfConfig":"51"},{"size":3709,"mtime":1611350655232,"results":"65","hashOfConfig":"51"},{"size":1025,"mtime":1610846547561,"results":"66","hashOfConfig":"51"},{"size":1531,"mtime":1611399588759,"results":"67","hashOfConfig":"51"},{"size":1812,"mtime":1611487464368,"results":"68","hashOfConfig":"51"},{"size":2206,"mtime":1611399613908,"results":"69","hashOfConfig":"51"},{"size":4987,"mtime":1610986288815,"results":"70","hashOfConfig":"51"},{"size":1057,"mtime":1610983211224,"results":"71","hashOfConfig":"51"},{"size":3300,"mtime":1611227968735,"results":"72","hashOfConfig":"51"},{"size":2014,"mtime":1611520190979,"results":"73","hashOfConfig":"51"},{"size":3204,"mtime":1611160188674,"results":"74","hashOfConfig":"51"},{"size":4083,"mtime":1611350232057,"results":"75","hashOfConfig":"51"},{"size":3421,"mtime":1611489532445,"results":"76","hashOfConfig":"51"},{"size":3414,"mtime":1611489804323,"results":"77","hashOfConfig":"51"},{"size":3950,"mtime":1611428253081,"results":"78","hashOfConfig":"51"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xh7e0c",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"86"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},"15lbfgl",{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"105"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"105"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"105"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"105"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"105"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"105"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"105"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"105"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"105"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"105"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"105"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"105"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"105"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"105"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"105"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"105"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"105"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"105"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"105"},"D:\\IntelliJ Projects\\app\\src\\main\\front-end\\src\\index.js",[],"D:\\IntelliJ Projects\\app\\src\\main\\front-end\\src\\App.js",[],"D:\\IntelliJ Projects\\app\\src\\main\\front-end\\src\\Contexts\\ServerContext.js",["178"],"import React, { useState } from \"react\";\r\n\r\nexport const ServerContext = React.createContext();\r\n\r\nexport const ServerProvider = (props) => {\r\n    const [server, setServer] = useState(\"http://localhost:9191\");\r\n\r\n    return(\r\n        <ServerContext.Provider value={server}>\r\n            {props.children}\r\n            </ServerContext.Provider>\r\n    );\r\n};",["179","180"],"D:\\IntelliJ Projects\\app\\src\\main\\front-end\\src\\ProductSource\\Product.js",[],"D:\\IntelliJ Projects\\app\\src\\main\\front-end\\src\\ProductSource\\AddProduct.js",[],"D:\\IntelliJ Projects\\app\\src\\main\\front-end\\src\\Contexts\\ProductContext.js",["181"],"import React, {useState, useEffect, useContext} from \"react\";\r\nimport {ServerContext} from \"../Contexts/ServerContext\";\r\nimport axios from \"axios\";\r\n\r\n//http://localhost:9191/items/getItemsPage?pageNo=0&pageSize=3&sortBy=itemId\r\n\r\nexport const ProductContext = React.createContext();\r\n\r\nexport const ProductProvider = (props) => {\r\n    const[products, setProducts] = useState([]);\r\n    const server = useContext(ServerContext);\r\n\r\n    const FetchProducts = () => {\r\n        axios.get(`${server}/items/getItems`).then((res) => {\r\n        setProducts(res.data.itemList);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        FetchProducts();\r\n    }, [])\r\n\r\n    return(\r\n        <ProductContext.Provider value={products} >\r\n            {props.children}\r\n        </ProductContext.Provider>\r\n    );\r\n};","D:\\IntelliJ Projects\\app\\src\\main\\front-end\\src\\Auth\\Login.js",[],"D:\\IntelliJ Projects\\app\\src\\main\\front-end\\src\\Components\\CustomerSignUp.js",[],"D:\\IntelliJ Projects\\app\\src\\main\\front-end\\src\\Components\\Navbar.js",["182","183"],"import { Navbar, Nav, NavDropdown, NavLink, Container } from \"react-bootstrap\";\r\nimport React from \"react\";\r\n\r\nexport const NavBar = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand href=\"/\">Home</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"/addProduct\">Add Product</Nav.Link>\r\n            <Nav.Link href=\"#\">Space</Nav.Link>\r\n            <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\r\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#action/3.2\">\r\n                Another action\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n              <NavDropdown.Divider />\r\n              <NavDropdown.Item href=\"#action/3.4\">\r\n                Separated link\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n          </Nav>\r\n          <Nav>\r\n            <Nav.Link href=\"#deets\">More deets</Nav.Link>\r\n            <Nav.Link eventKey={2} href=\"/login\">\r\n              Login\r\n            </Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","D:\\IntelliJ Projects\\app\\src\\main\\front-end\\src\\ProductSource\\Image.js",["184"],"D:\\ReactPrjs\\front-end\\src\\index.js",[],["185","186"],"D:\\ReactPrjs\\front-end\\src\\App.js",[],"D:\\ReactPrjs\\front-end\\src\\ProductSource\\Product.js",["187","188","189","190","191","192","193","194","195","196","197","198","199"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { ProductContext } from \"../Contexts/ProductContext\";\r\nimport { ProductCoverImage } from \"./ProductCoverImage\";\r\nimport { FilterBar } from \"../Components/FilterBar\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Product = () => {\r\n  const [\r\n    products,\r\n    setProducts,\r\n    currentPage,\r\n    setCurrentPage,\r\n    pageSize,\r\n    setPageSize,\r\n    sortBy,\r\n    setSortBy,\r\n    numberOfTotalPages,\r\n    direction,\r\n    setDirection,\r\n    minPriceFilter,\r\n    setMinPriceFilter,\r\n    maxPriceFilter,\r\n    setMaxPriceFilter,\r\n  ] = useContext(ProductContext);\r\n\r\n  //Array to show page numbers on pagination and change current page\r\n  const [pageNumberArray, setPageNumberArray] = useState([]);\r\n\r\n  //last page on pagination dashboard to update pageNumberArray when necessary\r\n  const [endOfPageSet, setEndOfPageSet] = useState(4);\r\n  if (currentPage > endOfPageSet) {\r\n    setEndOfPageSet((prev) => prev + 5);\r\n  }\r\n\r\n  if (currentPage < endOfPageSet - 4) {\r\n    setEndOfPageSet((prev) => prev - 5);\r\n  }\r\n\r\n  useEffect(() => {\r\n    var arr = [];\r\n    //If pressing prev and first element of pageNumberArray is bigger than or equal to current page number,\r\n    //load previous pages\r\n    if (endOfPageSet === currentPage && pageNumberArray[0] >= currentPage) {\r\n      for (\r\n        let index = endOfPageSet;\r\n        index >= endOfPageSet - 5 && index >= 0;\r\n        index--\r\n      ) {\r\n        arr.unshift(index);\r\n      }\r\n    } else if (\r\n      //If last page button is pressed\r\n      currentPage === numberOfTotalPages - 1 &&\r\n      pageNumberArray[pageNumberArray.length - 1] != currentPage\r\n    ) {\r\n      for (\r\n        let index = numberOfTotalPages - 1;\r\n        index >= endOfPageSet - 5 && index >= 0;\r\n        index--\r\n      ) {\r\n        arr.unshift(index);\r\n      }\r\n    } else {\r\n      for (\r\n        let index = currentPage;\r\n        index <= endOfPageSet && index < numberOfTotalPages;\r\n        index++\r\n      ) {\r\n        arr.push(index);\r\n      }\r\n    }\r\n    setPageNumberArray(arr);\r\n  }, [endOfPageSet, numberOfTotalPages]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-2 d-none d-lg-block\">\r\n          <div className=\"position-absolute start-0\">\r\n            <FilterBar />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-10 mx-auto\">\r\n          <div className=\"row \">\r\n            {products.map((item) => {\r\n              return (\r\n                <div\r\n                  className=\" col-md-5 col-lg-2 col-sm-6 justify-content-center p-2 m-2 position-relative \"\r\n                  key={item.itemId}\r\n                >\r\n                  <ProductCoverImage itemId={item.itemId} />\r\n                  <div className=\"text-secondary fs-4 mt-2\">\r\n                    ${item.itemPrice}\r\n                  </div>\r\n                  <p className=\"text-secondary fs-3 fw-normal\">\r\n                    {item.itemName}\r\n                  </p>\r\n                  <Link\r\n                    to={`/product-details/${item.itemId}`}\r\n                    className=\"stretched-link\"\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"row fixed-bottom\">\r\n            <div className=\"col \">\r\n              <nav aria-label=\"Page navigation example\">\r\n                <ul className=\"pagination justify-content-center\">\r\n                  <li\r\n                    className={\r\n                      currentPage === 0 ? \"page-item disabled\" : \"page-item\"\r\n                    }\r\n                  >\r\n                    <Link\r\n                      className=\"page-link\"\r\n                      to=\"#\"\r\n                      tabindex=\"-1\"\r\n                      aria-disabled=\"true\"\r\n                      onClick={(e) => {\r\n                        if (currentPage > 0) {\r\n                          setCurrentPage((prev) => prev - 1);\r\n                        }\r\n                      }}\r\n                    >\r\n                      Previous\r\n                    </Link>\r\n                  </li>\r\n\r\n                  <li\r\n                    hidden={currentPage < 5 ? true : false}\r\n                    className=\"page-item\"\r\n                  >\r\n                    <Link\r\n                      className=\"page-link\"\r\n                      to=\"#\"\r\n                      onClick={(e) => {\r\n                        setCurrentPage(0);\r\n                      }}\r\n                    >\r\n                      1...\r\n                    </Link>\r\n                  </li>\r\n\r\n                  {pageNumberArray.map((pageNum) => {\r\n                    return (\r\n                      <li\r\n                        key={pageNum}\r\n                        className={\r\n                          currentPage === pageNum\r\n                            ? \"page-item active\"\r\n                            : \"page-item\"\r\n                        }\r\n                      >\r\n                        <Link\r\n                          className=\"page-link\"\r\n                          to=\"#\"\r\n                          onClick={(e) => {\r\n                            setCurrentPage(pageNum);\r\n                          }}\r\n                        >\r\n                          {pageNum + 1}\r\n                        </Link>\r\n                      </li>\r\n                    );\r\n                  })}\r\n\r\n                  <li\r\n                    hidden={\r\n                      numberOfTotalPages < 5 ||\r\n                      currentPage === numberOfTotalPages - 1 ||\r\n                      endOfPageSet >= numberOfTotalPages - 1\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    className=\"page-item\"\r\n                  >\r\n                    <Link\r\n                      className=\"page-link\"\r\n                      to=\"#\"\r\n                      onClick={(e) => {\r\n                        setCurrentPage(numberOfTotalPages - 1);\r\n                      }}\r\n                    >\r\n                      ...{numberOfTotalPages}\r\n                    </Link>\r\n                  </li>\r\n                  <li\r\n                    className={\r\n                      currentPage === numberOfTotalPages - 1\r\n                        ? \"page-item disabled\"\r\n                        : \"page-item\"\r\n                    }\r\n                  >\r\n                    <Link\r\n                      className=\"page-link\"\r\n                      to=\"#\"\r\n                      onClick={(e) => {\r\n                        if (currentPage < numberOfTotalPages - 1) {\r\n                          setCurrentPage((prev) => prev + 1);\r\n                        }\r\n                      }}\r\n                    >\r\n                      Next\r\n                    </Link>\r\n                  </li>\r\n                </ul>\r\n              </nav>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ReactPrjs\\front-end\\src\\ProductSource\\AddProduct.js",["200"],"import { useState, useContext, useMemo } from \"react\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport axios from \"axios\";\r\nimport { UploadProductImage } from \"./UploadProductImage\";\r\n\r\nexport const AddProduct = (props) => {\r\n  const server = useContext(ServerContext);\r\n  const [itemName, setItemName] = useState(\"\");\r\n  const [itemPrice, setItemPrice] = useState(\"0.0\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [inStock, setInStock] = useState(0);\r\n  const [featured, setFeatured] = useState(false);\r\n\r\n  const [validated, setValidated] = useState(false);\r\n\r\n  const [newItemSaved, setNewItemSaved] = ([]);\r\n\r\n  const handleSubmit = (event) => {\r\n    const form = event.currentTarget;\r\n\r\n    event.preventDefault();\r\n    if (form.checkValidity() === false) {\r\n    } else {\r\n      sendToServer(newItem);\r\n    }\r\n    setValidated((prev) => true);\r\n  };\r\n\r\n  const newItem = {\r\n    itemPrice: itemPrice,\r\n    itemName: itemName,\r\n    itemCategory: category,\r\n    itemFeatured: featured,\r\n    itemLeftInStock: inStock,\r\n  };\r\n\r\n  const [itemSaving, setItemSaving] = useState([]);\r\n\r\n  const sendToServer = (product) => {\r\n    axios\r\n      .post(`${server}/items/addItem`, newItem, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: localStorage.getItem(\"TokenJWT\"),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(\"item sent to server\");\r\n        console.log(response.data);\r\n        setItemSaving(response.data);\r\n        setNewItemSaved((prev) => [...prev, 1]);\r\n        window.alert(\"Item saved!\");\r\n        props.history.push(\"/\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        window.alert(\"An error occured!!\");\r\n      });\r\n  };\r\n\r\n  /*const savedItem = useMemo(() => {\r\n    console.log(itemSaving);\r\n    return itemSaving;\r\n  }, [itemSaving]);\r\n*/\r\n  const validateForm = () => {\r\n    return (\r\n      itemName.length > 0 && itemPrice > 0 && category.length > 0 && inStock > 0\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"container pt-5\">\r\n      <div className=\"row justify-content-center\">\r\n        <form\r\n          className=\"col-6 g-3 needs-validation\"\r\n          noValidate\r\n          validated={validated}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          <div className=\"col-7\">\r\n            <label for=\"itemname\" className=\"form-label\">\r\n              Product Name\r\n            </label>\r\n            <input\r\n              autoFocus\r\n              className=\"form-control\"\r\n              id=\"itemname\"\r\n              type=\"text\"\r\n              value={itemName}\r\n              onChange={(e) => setItemName(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"col-7\">\r\n            <label for=\"itemprice\" className=\"form-label\">\r\n              Product Price\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"itemprice\"\r\n              type=\"text\"\r\n              onChange={(e) => setItemPrice(parseFloat(e.target.value))}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"col-7\">\r\n            <label for=\"itemcategory\" className=\"form-label\">\r\n              Product Category\r\n            </label>\r\n            <input\r\n              id=\"itemcategory\"\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              value={category}\r\n              onChange={(e) => setCategory(e.target.value)}\r\n              required\r\n            />\r\n\r\n            <div className=\"col-7\">\r\n              <label for=\"itemnuminstock\" className=\"form-label\">\r\n                Number of Product in Stock\r\n              </label>\r\n              <input\r\n                id=\"itemnuminstock\"\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                value={inStock}\r\n                onChange={(e) => {\r\n                  setInStock(e.target.value);\r\n                }}\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <div className=\"form-check\">\r\n              <label for=\"itemfeatured\" className=\"from-check-label\">\r\n                Product Featured\r\n              </label>\r\n              <input\r\n                className=\"form-check-input\"\r\n                id=\"itemfeatured\"\r\n                type=\"checkbox\"\r\n                value={featured}\r\n                onChange={(e) => setFeatured((prev) => !prev)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <button\r\n              className=\"btn btn-primary p-2\"\r\n              type=\"submit\"\r\n              disabled={!validateForm()}\r\n            >\r\n              Add Product\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <div className=\"col-4 my-auto\">\r\n          <UploadProductImage itemId={itemSaving.itemId} newItemSaved={newItemSaved} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ReactPrjs\\front-end\\src\\Contexts\\ProductContext.js",["201","202"],"import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport axios from \"axios\";\r\n\r\n//http://localhost:9191/items/getItemsPage?pageNo=0&pageSize=3&sortBy=itemId\r\n\r\nexport const ProductContext = React.createContext();\r\n\r\nexport const ProductProvider = (props) => {\r\n  const [products, setProducts] = useState([]);\r\n  const server = useContext(ServerContext);\r\n\r\n  //If filtered before and saved to session storage, use those props otherwise use default\r\n  // const stored = sessionStorage.getItem(\"filter\");\r\n  /* const searchProps = useRef(\r\n    stored\r\n      ? JSON.parse(stored)\r\n      : {\r\n          pageNo: 0,\r\n          pageSize: 1,\r\n          sortBy: \"itemPrice\",\r\n          direction: 1,\r\n          min: 0,\r\n          max: 9999999,\r\n        }\r\n  );*/\r\n  // console.log(searchProps.current);\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(1);\r\n  const [sortBy, setSortBy] = useState(\"itemPrice\");\r\n  const [direction, setDirection] = useState(1);\r\n\r\n  const [minPriceFilter, setMinPriceFilter] = useState(0);\r\n  const [maxPriceFilter, setMaxPriceFilter] = useState(9999999);\r\n\r\n  const [numberOfTotalPages, setNumberOfTotalPages] = useState();\r\n\r\n  useEffect(() => {\r\n    const FetchProducts = () => {\r\n      axios\r\n        .get(`${server}/items/getItemsPage`, {\r\n          params: {\r\n            pageNo: currentPage,\r\n            pageSize: pageSize,\r\n            sortBy: sortBy,\r\n            direction: direction,\r\n            min: minPriceFilter,\r\n            max: maxPriceFilter,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          setProducts(res.data.data);\r\n          setNumberOfTotalPages(res.data.NumberOfTotalPages);\r\n        });\r\n    };\r\n    FetchProducts();\r\n  }, [\r\n    currentPage,\r\n    pageSize,\r\n    sortBy,\r\n    direction,\r\n    minPriceFilter,\r\n    maxPriceFilter,\r\n  ]);\r\n\r\n  /*\r\n    currentPage,\r\n    pageSize,\r\n    sortBy,\r\n    direction,\r\n    minPriceFilter,\r\n    maxPriceFilter,\r\n\r\n  */\r\n\r\n  return (\r\n    <ProductContext.Provider\r\n      value={[\r\n        products,\r\n        setProducts,\r\n        currentPage,\r\n        setCurrentPage,\r\n        pageSize,\r\n        setPageSize,\r\n        sortBy,\r\n        setSortBy,\r\n        numberOfTotalPages,\r\n        direction,\r\n        setDirection,\r\n        minPriceFilter,\r\n        setMinPriceFilter,\r\n        maxPriceFilter,\r\n        setMaxPriceFilter,\r\n      ]}\r\n    >\r\n      {props.children}\r\n    </ProductContext.Provider>\r\n  );\r\n};\r\n","D:\\ReactPrjs\\front-end\\src\\Contexts\\ServerContext.js",["203"],"D:\\ReactPrjs\\front-end\\src\\ProductSource\\Image.js",["204","205","206","207"],"import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\n\r\nexport const Images = (props) => {\r\n  //  const [path, setPath] = useState([]);\r\n  //  const [loading, setLoading] = useState(true);\r\n  const server = useContext(ServerContext);\r\n\r\n  //Memorize previous images\r\n  const pics = useRef([]);\r\n  const [imgs, setImgs] = useState();\r\n\r\n  useEffect(() => {\r\n    FetchPath();\r\n  }, []);\r\n\r\n  const FetchPath = () => {\r\n    //Method returns a list of path locations for a particular item.\r\n    axios\r\n      .get(`${server}/items/getItemFileLocations/${props.itemId}`)\r\n      .then((res) => {\r\n        //  console.log(res.data.pathObjList);\r\n        //setPath(res.data.pathObjList);\r\n        //paths.current = res.data.pathObjList;\r\n        // setLoading(false);\r\n\r\n        /**\r\n         * For returned path list, load each image from server and add to (pics) Ref, destructure the Ref first and add loaded image\r\n         */\r\n        res.data.pathList.map((path) => {\r\n          const src = `${server}/storage/getItemFiles/${props.itemId}/${path}`;\r\n          var imageToLoad = new Image();\r\n          imageToLoad.src = src;\r\n          imageToLoad.onload = () => {\r\n            //Keep memorizing images\r\n            pics.current = [...pics.current, imageToLoad];\r\n            // Add to state for re-render\r\n            setImgs(pics.current);\r\n          };\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  //Reference to the main img to change src with mainImage.current.src\r\n  const mainImage = useRef();\r\n\r\n  //Used to connect to next and previous buttons\r\n  const prev = useRef();\r\n  const next = useRef();\r\n\r\n  //first Index always 0\r\n  const [firstIndex, setFirstIndex] = useState(0);\r\n  const first = useRef(0);\r\n\r\n  //increase first index with modulus\r\n  function goNext() {\r\n    first.current = (first.current + 1) % imgs.length;\r\n    setFirstIndex(first.current);\r\n  }\r\n\r\n  //decrease first index with modulus\r\n  function goPrev() {\r\n    first.current = (first.current - 1 + imgs.length) % imgs.length;\r\n    setFirstIndex(first.current);\r\n  }\r\n\r\n  //if null return\r\n  if (!imgs) {\r\n    return null;\r\n  }\r\n  //get 3 consequent pics and put in a list\r\n  let listOf3DashImages;\r\n\r\n  if (imgs.length > 0 && imgs[firstIndex] != null) {\r\n    listOf3DashImages = [imgs[firstIndex]];\r\n  }\r\n\r\n  if (imgs.length > 1 && imgs[(firstIndex + 1) % imgs.length] != null) {\r\n    listOf3DashImages = [\r\n      imgs[firstIndex],\r\n      imgs[(firstIndex + 1) % imgs.length],\r\n    ];\r\n  }\r\n  if (imgs.length > 2 && imgs[(firstIndex + 2) % imgs.length] != null) {\r\n    listOf3DashImages = [\r\n      imgs[firstIndex],\r\n      imgs[(firstIndex + 1) % imgs.length],\r\n      imgs[(firstIndex + 2) % imgs.length],\r\n    ];\r\n  }\r\n  //function to change main picture using useRef hook\r\n  //make main image point to clicked image's src\r\n  //button id is same as image's place in array\r\n  const selectMain = (e) => {\r\n    const imgId = e.target.id;\r\n    mainImage.current.src = listOf3DashImages[imgId].src;\r\n  };\r\n\r\n  /**\r\n   * Two rows inside a container to seperate different functionalities from each other\r\n   */\r\n  return (\r\n    <div className=\"container \">\r\n      <div className=\"row row-cols-1 pb-2\">\r\n        <div className=\"col-10\">\r\n          <div className=\"card\">\r\n            <div className=\"img-container\">\r\n              <img\r\n                ref={mainImage}\r\n                alt=\"Product\"\r\n                className=\"card-img-top\"\r\n                src={imgs[0].src}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row row-cols-3 carousel slide\">\r\n        {listOf3DashImages.map((imgg, index) => {\r\n          return (\r\n            <div className=\"col-3 position-relative\" key={index}>\r\n              <div className=\"card\">\r\n                <div className=\"img-container\">\r\n                  <img alt=\"Product\" className=\"card-img-top\" src={imgg.src} />\r\n                  <a\r\n                    href=\"#\"\r\n                    role=\"button\"\r\n                    className=\"stretched-link\"\r\n                    id={index}\r\n                    onClick={selectMain}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n        <a\r\n          ref={prev}\r\n          hidden={imgs.length < 4 ? true : false}\r\n          onClick={goPrev}\r\n          class=\"carousel-control-prev\"\r\n          href=\"#carouselExampleIndicators\"\r\n          role=\"button\"\r\n          data-bs-slide=\"prev\"\r\n        >\r\n          <span\r\n            class=\"carousel-control-prev-icon bg-dark\"\r\n            aria-hidden=\"true\"\r\n          ></span>\r\n          <span class=\"visually-hidden\">Previous</span>\r\n        </a>\r\n        <a\r\n          ref={next}\r\n          hidden={imgs.length < 4 ? true : false}\r\n          onClick={goNext}\r\n          class=\"carousel-control-next\"\r\n          href=\"#carouselExampleIndicators\"\r\n          role=\"button\"\r\n          data-bs-slide=\"next\"\r\n        >\r\n          <span\r\n            class=\"carousel-control-next-icon bg-dark\"\r\n            aria-hidden=\"true\"\r\n          ></span>\r\n          <span class=\"visually-hidden\">Next</span>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ReactPrjs\\front-end\\src\\Components\\CustomerSignUp.js",[],"D:\\ReactPrjs\\front-end\\src\\Auth\\Login.js",[],"D:\\ReactPrjs\\front-end\\src\\Components\\Navbar.js",["208"],"import axios from \"axios\";\r\nimport React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport { LoginSuccessContext } from \"../Contexts/LoginSuccessContext\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport { CartContext } from \"../Contexts/CartContext\";\r\nimport \"./navbar.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const NavBar = () => {\r\n  const [loggedIn] = useContext(LoginSuccessContext);\r\n  const [searchWord, setSearchWord] = useState();\r\n  const server = useContext(ServerContext);\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [cart] = useContext(CartContext);\r\n\r\n  const dropdownList = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!searchWord) {\r\n      setSearchResult([]);\r\n    }\r\n\r\n    if (searchWord) {\r\n      SearchTyped(searchWord);\r\n    }\r\n  }, [searchWord]);\r\n\r\n  const SearchTyped = (word) => {\r\n    axios\r\n      .get(`${server}/items/searchItems/${word}`)\r\n      .then((res) => {\r\n        setSearchResult(res.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <div className=\"container-fluid\">\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarTogglerDemo03\"\r\n          aria-controls=\"navbarTogglerDemo03\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          Home\r\n        </Link>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo03\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link\r\n                className=\"nav-link text-dark\"\r\n                aria-current=\"page\"\r\n                to=\"/addProduct\"\r\n              >\r\n                Add Product\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link text-dark\" to=\"/orders\">\r\n                Orders\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n\r\n          <div className=\"dropdown\">\r\n            <form class=\"d-flex\">\r\n              <input\r\n                className=\"form-control me-2\"\r\n                value={searchWord}\r\n                onChange={(e) => {\r\n                  setSearchWord(e.target.value);\r\n                }}\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n                data-bs-toggle=\"dropdown\"\r\n              />\r\n\r\n              <button\r\n                class=\"btn btn-outline-success\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"dropdown\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                Search\r\n              </button>\r\n\r\n              <ul\r\n                ref={dropdownList}\r\n                style={searchResult.length < 1 ? { display: \"none\" } : null}\r\n                className=\"dropdown-menu\"\r\n              >\r\n                {searchResult\r\n                  ? searchResult.map((item) => {\r\n                      return (\r\n                        <li key={item.itemId}>\r\n                          <Link\r\n                            className=\"dropdown-item\"\r\n                            to={`/product-details/${item.itemId}`}\r\n                          >\r\n                            {item.itemName}\r\n                          </Link>\r\n                        </li>\r\n                      );\r\n                    })\r\n                  : null}\r\n              </ul>\r\n            </form>\r\n          </div>\r\n\r\n          {loggedIn ? (\r\n            <Link className=\"nav-link text-dark\" to=\"/profile\">\r\n              Your Profile\r\n            </Link>\r\n          ) : (\r\n            <Link className=\"nav-link text-dark\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          )}\r\n\r\n          <Link\r\n            className=\"nav-link text-dark btn btn-primary position-relative me-2\"\r\n            to=\"/cart\"\r\n          >\r\n            Cart{\" \"}\r\n            <span class=\"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-secondary\">\r\n              {cart.length} <span class=\"visually-hidden\">unread messages</span>\r\n            </span>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n","D:\\ReactPrjs\\front-end\\src\\Contexts\\PathContext.js",["209","210"],"D:\\ReactPrjs\\front-end\\src\\ProductSource\\ProductCoverImage.js",["211"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport icon from \"../icon/product.svg\";\r\n\r\nexport const ProductCoverImage = (props) => {\r\n  const [path, setPath] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const server = useContext(ServerContext);\r\n\r\n  useEffect(() => {\r\n    FetchPath();\r\n  }, []);\r\n\r\n  const FetchPath = () => {\r\n    axios\r\n      .get(`${server}/items/getItemFileLocations/${props.itemId}`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        if (res.data != null) {\r\n          setPath(res.data.pathList);\r\n          setLoading(false);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  let obj;\r\n  if (!loading) {\r\n    if (path != null) {\r\n      obj = path[0];\r\n    }\r\n  }\r\n\r\n  if (!obj) {\r\n    return (\r\n      <img\r\n        src={icon}\r\n        style={{ height: \"15rem\", width: \"15rem\" }}\r\n        className=\"img-fluid\"\r\n        alt=\"Product\"\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <img\r\n      style={{ height: \"15rem\", width: \"15rem\" }}\r\n      alt=\"Product\"\r\n      className=\"img-fluid\"\r\n      src={`http://localhost:9696/storage/getItemFiles/${props.itemId}/${obj}`}\r\n    />\r\n  );\r\n};\r\n","D:\\ReactPrjs\\front-end\\src\\ProductSource\\UploadProductImage.js",["212","213"],"import React, { useState, useCallback, useEffect, useRef } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport axios from \"axios\";\r\n\r\nexport const UploadProductImage = ({ itemId, newItemSaved, rerender }) => {\r\n  //Keep files in memory to between re-renders, access and set files with .current property\r\n  const file = useRef([]);\r\n  //To trigger re-render\r\n  const [pics, setPics] = useState([]);\r\n  //Convert files to images and store\r\n  const savedPics = useRef([]);\r\n\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    file.current = acceptedFiles;\r\n    console.log(\"file saved\");\r\n\r\n    /**\r\n     * Each file needs a new FileReader for asynchronous converting.\r\n     * After conversion destructure savedPics Ref and add newly converted image\r\n     * change setPic to trigger re-render\r\n     */\r\n    file.current.forEach((eachfile) => {\r\n      let reader = new FileReader();\r\n      reader.readAsDataURL(eachfile);\r\n      reader.onload = () => {\r\n        savedPics.current = [...savedPics.current, reader.result];\r\n        console.log(savedPics.current);\r\n        setPics([reader.result]);\r\n      };\r\n    });\r\n\r\n    // Do something with the files\r\n  }, []);\r\n\r\n  // When item saved to database and id retrieved, run Postfiles function\r\n  useEffect(() => {\r\n    //   console.log(itemId);\r\n    if (file != null && itemId != null) {\r\n      console.log(itemId + \" not null\");\r\n      PostFiles(file.current, itemId);\r\n    }\r\n  }, [newItemSaved]);\r\n\r\n  const PostFiles = (fileArray, itemId) => {\r\n    console.log(itemId);\r\n    fileArray.forEach((eachFileInArray) => {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", eachFileInArray);\r\n      if (itemId != null) {\r\n        axios\r\n          .post(`http://localhost:9191/storage/save/${itemId}`, formData, {\r\n            headers: {\r\n              \"Content-Type\": \"multipart/form-data\",\r\n            },\r\n          })\r\n          .then((res) => {\r\n            console.log(\"file sent\");\r\n\r\n            rerender((prev) => [...prev, 1]);\r\n          })\r\n          .catch((err) => console.log(err));\r\n        file.current = [];\r\n        savedPics.current = [];\r\n      }\r\n    });\r\n  };\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row row-cols-3 carousel slide\">\r\n        {savedPics.current.map((p, index) => {\r\n          return (\r\n            <div className=\"col\" key={index}>\r\n              <div className=\"card\">\r\n                <div className=\"img-container\">\r\n                  <img alt=\"Product\" className=\"card-img-top\" src={p} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"row row-cols-1 pb-2\">\r\n        <div className=\"position-relative p-5 bg-secondary\" {...getRootProps()}>\r\n          <input\r\n            className=\"bg-primary p-5 stretched-link\"\r\n            {...getInputProps()}\r\n          />\r\n          {isDragActive ? (\r\n            <p>Drop the files here ...</p>\r\n          ) : (\r\n            <p>Drag 'n' drop product pictures here, or click to select files</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ReactPrjs\\front-end\\src\\ProductSource\\ProductDetails.js",["214","215","216","217","218","219","220","221","222"],"import { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Images } from \"./Image\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport { CartContext } from \"../Contexts/CartContext\";\r\nimport { ProductContext } from \"../Contexts/ProductContext\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const ProductDetails = (props) => {\r\n  const [itemDetails, setItemDetails] = useState([]);\r\n  const server = useContext(ServerContext);\r\n  const [cart, setCart, savedCart] = useContext(CartContext);\r\n\r\n  const [\r\n    products,\r\n    setProducts,\r\n    currentPage,\r\n    setCurrentPage,\r\n    pageSize,\r\n    setPageSize,\r\n    sortBy,\r\n    setSortBy,\r\n    numberOfTotalPages,\r\n  ] = useContext(ProductContext);\r\n\r\n  const [itemAmount, setItemAmount] = useState(1);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${server}/itemDetails/getItemDetails/${props.match.params.itemId}`)\r\n      .then((res) => {\r\n        setItemDetails(res.data.itemDetailsList);\r\n      });\r\n  }, [props.match.params.itemId]);\r\n\r\n  const item = products.find(\r\n    (item) => item.itemId === parseInt(props.match.params.itemId)\r\n  );\r\n\r\n  function handleAddToCart() {\r\n    const indexOfItem = cart.findIndex((order) => {\r\n      return order.itemId === item.itemId;\r\n    });\r\n\r\n    if (indexOfItem > -1) {\r\n      cart[indexOfItem].itemAmount =\r\n        parseInt(cart[indexOfItem].itemAmount) + itemAmount;\r\n      savedCart.current = cart;\r\n    } else {\r\n      savedCart.current = [\r\n        ...savedCart.current,\r\n        { itemId: item.itemId, itemAmount: itemAmount },\r\n      ];\r\n    }\r\n    localStorage.setItem(\"cartcontent\", JSON.stringify(savedCart.current));\r\n    console.log(savedCart.current);\r\n\r\n    setCart([...savedCart.current]);\r\n    props.history.push(\"/cart\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-4 col-md-5 col-sm-8 m-4\">\r\n          <Images itemId={props.match.params.itemId} />\r\n        </div>\r\n        <div className=\"col-md-5 mt-2\">\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">Properties</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {itemDetails\r\n                ? itemDetails.map((item, index) => {\r\n                    return (\r\n                      <tr className=\"col\" key={index}>\r\n                        <td className=\"col-md-3 col-sm-5\">{item.nameOf}</td>\r\n                        <td className=\"col-md-3 col-sm-5\">\r\n                          {\" : \" + item.valueOf}\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })\r\n                : null}\r\n            </tbody>\r\n          </table>\r\n          <Link\r\n            className=\"btn btn-primary\"\r\n            to={`/edit-product-description/${props.match.params.itemId}`}\r\n          >\r\n            Edit Item Properties\r\n          </Link>\r\n          <Link\r\n            className=\"btn btn-primary ms-5\"\r\n            to={`/edit-pictures/${props.match.params.itemId}`}\r\n          >\r\n            Edit Pictures\r\n          </Link>\r\n        </div>\r\n        <div className=\"col-md-2 mt-2\">\r\n          <p className=\"fs-2\">$ {item ? item.itemPrice : null}</p>\r\n\r\n          <label className=\"form-label me-2\" for=\"selectqty\">\r\n            Quantity:\r\n          </label>\r\n          <select\r\n            id=\"selectqty\"\r\n            value={itemAmount}\r\n            onChange={(e) => setItemAmount(parseInt(e.target.value))}\r\n          >\r\n            <option selected value=\"1\">\r\n              1\r\n            </option>\r\n            <option selected value=\"2\">\r\n              2\r\n            </option>\r\n            <option selected value=\"3\">\r\n              3\r\n            </option>\r\n            <option selected value=\"4\">\r\n              4\r\n            </option>\r\n            <option selected value=\"5\">\r\n              5\r\n            </option>\r\n          </select>\r\n\r\n          <button className=\"btn btn-primary\" onClick={handleAddToCart}>\r\n            Add to Cart\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n/*\r\n{Object.keys(itemDetails).map((currentKey, index) => {\r\n    return (\r\n      <tr className=\"col\" key={index}>\r\n        <td className=\"col-md-3 col-sm-5\">{currentKey} :</td>\r\n        <td className=\"col-md-3 col-sm-5\">\r\n          {itemDetails[currentKey]}\r\n        </td>\r\n      </tr>\r\n    );\r\n  })}\r\n  */\r\n","D:\\ReactPrjs\\front-end\\src\\ProductSource\\EditProductDescription.js",["223"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport axios from \"axios\";\r\n\r\nexport const EditProductDescription = (props) => {\r\n  const [inputFields, setInputFields] = useState([{ nameOf: \"\", valueOf: \"\" }]);\r\n\r\n  const server = useContext(ServerContext);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${server}/itemDetails/getItemDetails/${props.match.params.itemId}`)\r\n      .then((res) => {\r\n        console.log(res.data.itemDetailsList);\r\n        if (res.data.itemDetailsList) {\r\n          setInputFields(res.data.itemDetailsList);\r\n        }\r\n      });\r\n  }, [props.match.params.itemId]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(inputFields);\r\n\r\n    const itemDetailsToSend = {\r\n      itemId: props.match.params.itemId,\r\n      itemDetailsList: inputFields,\r\n    };\r\n\r\n    console.log(itemDetailsToSend);\r\n\r\n    axios\r\n      .post(`${server}/itemDetails/saveItemDetails`, itemDetailsToSend, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        window.alert(\"Item details saved!\");\r\n        props.history.push(`/product-details/${props.match.params.itemId}`);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const addField = () => {\r\n    setInputFields([...inputFields, { nameOf: \"\", valueOf: \"\" }]);\r\n  };\r\n\r\n  const removeField = (index) => {\r\n    const values = [...inputFields];\r\n    values.splice(index, 1);\r\n    setInputFields(values);\r\n  };\r\n\r\n  function handleInputChange(event, index) {\r\n    const values = [...inputFields];\r\n    values[index][event.target.name] = event.target.value;\r\n    setInputFields(values);\r\n  }\r\n\r\n  if (!inputFields) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container \">\r\n      <h2 className=\"text-center\">Enter/Edit Product Properties</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        {inputFields.map((field, index) => {\r\n          return (\r\n            <div className=\"row my-4\" key={index}>\r\n              <div className=\"col-3 form-floating\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"nameOf\"\r\n                  id=\"floatingNameOf\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Property\"\r\n                  value={field.nameOf}\r\n                  onChange={(e) => handleInputChange(e, index)}\r\n                />\r\n                <label for=\"floatingNameOf\">Property Name</label>\r\n              </div>\r\n              <div className=\"col-7 form-floating\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"valueOf\"\r\n                  id=\"floatingValueOf\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Property Value\"\r\n                  value={field.valueOf}\r\n                  onChange={(e) => handleInputChange(e, index)}\r\n                />\r\n                <label for=\"floatingValueOf\">Property Value</label>\r\n              </div>\r\n              <div className=\"col-2\">\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  type=\"button\"\r\n                  onClick={() => removeField(index)}\r\n                >\r\n                  Remove Field\r\n                </button>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Submit\r\n        </button>\r\n        <button\r\n          className=\"btn btn-secondary mx-5\"\r\n          type=\"button\"\r\n          onClick={addField}\r\n        >\r\n          Add New Field\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ReactPrjs\\front-end\\src\\Components\\LoginModal.js",["224","225"],"import React, { useState, useEffect } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nfunction LoginModal({ history, isModalOpen }) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [timer, setTimer] = useState(3);\r\n  const [title, setTitle] = useState(\"Login successful...\");\r\n\r\n  useEffect(() => {\r\n    setIsOpen(isModalOpen);\r\n  }, [isModalOpen]);\r\n\r\n  const showModal = () => {\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const hideModal = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const modalLoaded = () => {\r\n    setInterval(() => {\r\n      setTimer((prev) => prev - 1);\r\n    }, 1000);\r\n\r\n    setTimeout(() => {\r\n      history.push(\"/\");\r\n    }, 3000);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal show={isOpen} onHide={hideModal} onEntered={modalLoaded}>\r\n        <Modal.Header>\r\n          <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Redirecting... {timer}</Modal.Body>\r\n        <Modal.Footer></Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoginModal;\r\n","D:\\ReactPrjs\\front-end\\src\\Contexts\\LoginSuccessContext.js",["226"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport axios from \"axios\";\r\n\r\nexport const LoginSuccessContext = React.createContext();\r\n\r\nexport const LoginSuccessProvider = (props) => {\r\n  const server = useContext(ServerContext);\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [customerFK, setCustomerFK] = useState(null);\r\n  const [loginWithJWTSuccess, setLoginWithJWTSuccess] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"TokenJWT\")) {\r\n      checkAuthorization();\r\n    }\r\n  }, [loggedIn]);\r\n\r\n  const checkAuthorization = () => {\r\n    axios\r\n      .get(`${server}/auth/checkJWT`, {\r\n        headers: {\r\n          Authorization: localStorage.getItem(\"TokenJWT\"),\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          console.log(\"logged in\");\r\n\r\n          var FK = res.headers.cookie.replace(\"custFK=\", \"\");\r\n          console.log(\"FK: \" + FK);\r\n          // sessionStorage.setItem(\"custFK\", FK);\r\n          setCustomerFK(FK);\r\n          setLoggedIn(true);\r\n          setLoginWithJWTSuccess(true);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <LoginSuccessContext.Provider\r\n      value={[\r\n        loggedIn,\r\n        setLoggedIn,\r\n        customerFK,\r\n        setCustomerFK,\r\n        loginWithJWTSuccess,\r\n        setLoginWithJWTSuccess,\r\n      ]}\r\n    >\r\n      {props.children}\r\n    </LoginSuccessContext.Provider>\r\n  );\r\n};\r\n","D:\\ReactPrjs\\front-end\\src\\Contexts\\CustomerProfileContext.js",["227","228","229","230"],"D:\\ReactPrjs\\front-end\\src\\Components\\CustomerProfile.js",["231","232","233","234","235","236","237","238","239","240"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport { LoginSuccessContext } from \"../Contexts/LoginSuccessContext\";\r\nimport { CustomerProfileContext } from \"../Contexts/CustomerProfileContext\";\r\nimport axios from \"axios\";\r\nimport { CartContext } from \"../Contexts/CartContext\";\r\n\r\nexport const CustomerProfile = (props) => {\r\n  const server = useContext(ServerContext);\r\n  const [\r\n    loggedIn,\r\n    setLoggedIn,\r\n    customerFK,\r\n    setCustomerFK,\r\n    loginWithJWTSuccess,\r\n    setLoginWithJWTSuccess,\r\n  ] = useContext(LoginSuccessContext);\r\n  const [\r\n    customerProfile,\r\n    userProfile,\r\n    setCustomerProfile,\r\n    setUserProfile,\r\n  ] = useContext(CustomerProfileContext);\r\n\r\n  const [\r\n    cart,\r\n    setCart,\r\n    savedCart,\r\n    cartOrderItems,\r\n    setCartOrderItems,\r\n    firstFetchDone,\r\n    setFirstFetchDone,\r\n  ] = useContext(CartContext);\r\n\r\n  function handleLogout() {\r\n    localStorage.removeItem(\"TokenJWT\");\r\n    localStorage.removeItem(\"cartcontent\");\r\n    savedCart.current = [];\r\n    setCustomerProfile([]);\r\n    setUserProfile([]);\r\n    setCart([]);\r\n    setCartOrderItems([]);\r\n    setCustomerFK(null);\r\n    setFirstFetchDone(false);\r\n    setLoggedIn(false);\r\n    setLoginWithJWTSuccess(false);\r\n\r\n    props.history.push(\"/\");\r\n  }\r\n  console.log(\"render profile\");\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"row row-cols-1 \">\r\n        <div className=\"col \">\r\n          <p id=\"customerName\">Name: {customerProfile.customerName}</p>\r\n        </div>\r\n        <div className=\"col\">\r\n          <p id=\"eMail\">E-Mail: {customerProfile.customerEMail}</p>\r\n        </div>\r\n        <div className=\"col\">\r\n          <p id=\"username\">User Name: {userProfile.userName}</p>\r\n        </div>\r\n        <div className=\"col\">\r\n          <a className=\"btn btn-primary\" href=\"/edit-profile\" role=\"button\">\r\n            Edit\r\n          </a>\r\n          <button\r\n            className=\"btn btn-primary ms-2\"\r\n            onClick={(e) => handleLogout()}\r\n            type=\"button\"\r\n          >\r\n            Logout\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ReactPrjs\\front-end\\src\\Components\\EditCustomerProfile.js",["241","242"],"import React, { useState, useContext, useEffect, useRef } from \"react\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport { LoginSuccessContext } from \"../Contexts/LoginSuccessContext\";\r\nimport { CustomerProfileContext } from \"../Contexts/CustomerProfileContext\";\r\nimport axios from \"axios\";\r\nimport EditSuccessModal from \"./EditSuccessModal\";\r\n\r\nexport const EditCustomerProfile = (props) => {\r\n  const server = useContext(ServerContext);\r\n  const [loggedIn, setLoggedIn] = useContext(LoginSuccessContext);\r\n  const [\r\n    customerProfile,\r\n    userProfile,\r\n    setCustomerProfile,\r\n    setUserProfile,\r\n  ] = useContext(CustomerProfileContext);\r\n\r\n  const [name, setName] = useState();\r\n  const [email, setEMail] = useState();\r\n  const [username, setUserName] = useState();\r\n\r\n  const [editProfileSuccess, setEditProfileSuccess] = useState(false);\r\n  const [editUserSuccess, setEditUserSuccess] = useState(false);\r\n\r\n  const userNameRef = useRef();\r\n\r\n  useEffect(() => {\r\n    setName(customerProfile.customerName);\r\n    setEMail(customerProfile.customerEMail);\r\n    setUserName(userProfile.userName);\r\n  }, [customerProfile, userProfile]);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    var currentUserName = userProfile.userName;\r\n    const uProfile = {\r\n      userId: userProfile.userId,\r\n      password: userProfile.password,\r\n      userName: username,\r\n      customerFK: userProfile.customerFK,\r\n    };\r\n\r\n    var cProfile = customerProfile;\r\n    cProfile.customerEMail = email;\r\n    cProfile.customerName = name;\r\n\r\n    //var cProfile = [...customerProfile];\r\n    console.log(uProfile);\r\n    console.log(cProfile);\r\n\r\n    if (uProfile.userName !== currentUserName) {\r\n      axios\r\n        .post(`${server}/auth/updateUserReact`, uProfile, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: localStorage.getItem(\"TokenJWT\"),\r\n          },\r\n        })\r\n        .then((res) => {\r\n          console.log(\"User updated: \" + res);\r\n          localStorage.removeItem(\"TokenJWT\");\r\n          setLoggedIn(false);\r\n\r\n          setEditUserSuccess(true);\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"User update failed : \" + err);\r\n          userNameRef.current.className =\r\n            \"col-6 alert alert-danger mx-auto fw-normal fs-3 my-2 text-dark text-center\";\r\n          setEditUserSuccess(false);\r\n        });\r\n    } else {\r\n      console.log(\"values equal\");\r\n      setEditUserSuccess(true);\r\n    }\r\n\r\n    axios\r\n      .post(`${server}/customer/save`, cProfile, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: localStorage.getItem(\"TokenJWT\"),\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(\"Customer updated: \" + res);\r\n        setEditProfileSuccess(true);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Customer update failed : \" + err);\r\n      });\r\n  }\r\n\r\n  if (editUserSuccess && editProfileSuccess && loggedIn) {\r\n    props.history.push(\"/profile\");\r\n  }\r\n\r\n  //Customer name changed and logged out, new login required\r\n  if (editUserSuccess && editProfileSuccess && !loggedIn) {\r\n    // setCustomerProfile();\r\n    return <EditSuccessModal isModalOpen={true} history={props.history} />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <form noValidate onSubmit={handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col col-lg-6 col-md-8 col-sm-10 mx-auto\">\r\n            <label className=\"form-label\">Name</label>\r\n            <input\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col col-lg-6 col-md-8 col-sm-10 mx-auto\">\r\n            <label className=\"form-label\">E-Mail</label>\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEMail(e.target.value)}\r\n              className=\"form-control\"\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col col-lg-6 col-md-8 col-sm-10 mx-auto\">\r\n            <label className=\"form-label\">User Name</label>\r\n            <input\r\n              type=\"text\"\r\n              value={username}\r\n              onChange={(e) => setUserName(e.target.value)}\r\n              className=\"form-control\"\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <div ref={userNameRef} className=\"visually-hidden\" role=\"alert\">\r\n          User Name already exists! Select another one!\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col col-lg-6 col-md-8 col-sm-10 mx-auto mt-3\">\r\n            <button className=\"btn btn-primary\" type=\"submit\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ReactPrjs\\front-end\\src\\Components\\EditSuccessModal.js",["243","244"],"import React, { useState, useEffect } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nfunction EditSuccessModal({ history, isModalOpen }) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [timer, setTimer] = useState(3);\r\n  const [title, setTitle] = useState(\"Edit successful, Login Required...\");\r\n\r\n  useEffect(() => {\r\n    setIsOpen(isModalOpen);\r\n  }, [isModalOpen]);\r\n\r\n  const showModal = () => {\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const hideModal = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const modalLoaded = () => {\r\n    setInterval(() => {\r\n      setTimer((prev) => prev - 1);\r\n    }, 1000);\r\n\r\n    setTimeout(() => {\r\n      history.push(\"/login\");\r\n    }, 3000);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal show={isOpen} onHide={hideModal} onEntered={modalLoaded}>\r\n        <Modal.Header>\r\n          <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Redirecting... {timer}</Modal.Body>\r\n        <Modal.Footer></Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EditSuccessModal;\r\n","D:\\ReactPrjs\\front-end\\src\\Components\\FilterBar.js",["245","246","247","248","249","250","251","252","253"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { ProductContext } from \"../Contexts/ProductContext\";\r\n\r\nexport const FilterBar = () => {\r\n  const [\r\n    products,\r\n    setProducts,\r\n    currentPage,\r\n    setCurrentPage,\r\n    pageSize,\r\n    setPageSize,\r\n    sortBy,\r\n    setSortBy,\r\n    numberOfTotalPages,\r\n    direction,\r\n    setDirection,\r\n    minPriceFilter,\r\n    setMinPriceFilter,\r\n    maxPriceFilter,\r\n    setMaxPriceFilter,\r\n  ] = useContext(ProductContext);\r\n  const [min, setMin] = useState();\r\n  const [max, setMax] = useState();\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    setMinPriceFilter(min);\r\n    setMaxPriceFilter(max);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-7\">\r\n          <div class=\"input-group mb-3\">\r\n            <label class=\"input-group-text\" for=\"inputGroupSelect02\">\r\n              Number of Items Each Page\r\n            </label>\r\n            <select\r\n              value={pageSize}\r\n              onChange={(e) => {\r\n                setCurrentPage(0);\r\n                setPageSize(e.target.value);\r\n              }}\r\n              class=\"form-select\"\r\n              id=\"inputGroupSelect02\"\r\n            >\r\n              <option value=\"1\" selected>\r\n                1\r\n              </option>\r\n              <option value=\"2\">2</option>\r\n              <option value=\"5\">5</option>\r\n              <option value=\"10\">10</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div class=\"input-group mb-3\">\r\n            <label class=\"input-group-text\" for=\"inputGroupSelect02\">\r\n              Sort By\r\n            </label>\r\n            <select\r\n              value={direction}\r\n              onChange={(e) => {\r\n                setCurrentPage(0);\r\n                setDirection(e.target.value);\r\n              }}\r\n              class=\"form-select\"\r\n              id=\"inputGroupSelect02\"\r\n            >\r\n              <option value=\"1\" selected>\r\n                Price: Low to High\r\n              </option>\r\n              <option value=\"2\">Price: High to Low</option>\r\n            </select>\r\n          </div>\r\n          <form noValidate onSubmit={handleSubmit}>\r\n            <div className=\"input-group \">\r\n              <span className=\"input-group-text\">Price$</span>\r\n              <input\r\n                type=\"text\"\r\n                aria-label=\"Min Price\"\r\n                className=\"form-control\"\r\n                placeholder=\"Min\"\r\n                value={min}\r\n                onChange={(e) => {\r\n                  if (e.target.value) {\r\n                    setMin(parseInt(e.target.value));\r\n                  }\r\n                }}\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                aria-label=\"Max Price\"\r\n                className=\"form-control\"\r\n                placeholder=\"Max\"\r\n                value={max}\r\n                onChange={(e) => {\r\n                  if (e.target.value) {\r\n                    setMax(parseFloat(e.target.value));\r\n                  }\r\n                }}\r\n              />\r\n              <button className=\"btn btn-primary \" type=\"submit\">\r\n                Filter\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ReactPrjs\\front-end\\src\\Auth\\PasswordResetRequest.js",[],"D:\\ReactPrjs\\front-end\\src\\Auth\\PasswordReset.js",["254"],"import { useState, useRef, useContext, useEffect } from \"react\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport axios from \"axios\";\r\n\r\nexport const PasswordReset = (props) => {\r\n  const server = useContext(ServerContext);\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [newPasswordConfirm, setNewPasswordConfirm] = useState(\"\");\r\n  const [linkValid, setLinkValid] = useState(false);\r\n  const showErr = useRef();\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `${server}/auth/passwordReset/checkLinkValidity/${props.match.params.uuid}`\r\n      )\r\n      .then((res) => {\r\n        console.log(res);\r\n        setLinkValid(true);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setLinkValid(false);\r\n      });\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    axios\r\n      .post(\r\n        `${server}/auth/resetPasswordByLink/${props.match.params.uuid}`,\r\n        newPassword,\r\n        { headers: { \"Content-Type\": \"application/json\" } }\r\n      )\r\n      .then((res) => console.log(\"reset successful! \" + res.data))\r\n      .catch((err) => console.log(\"Reset fail!\" + err));\r\n  };\r\n\r\n  if (!linkValid) {\r\n    return <p>Link invalid!</p>;\r\n  }\r\n\r\n  function validateForm() {\r\n    if (showErr.current) {\r\n      if (newPassword.length < 6) {\r\n        showErr.current.className =\r\n          \"col-5 alert alert-danger mx-auto fw-normal fs-3 text-dark text-center\";\r\n      } else {\r\n        showErr.current.className = \"visually-hidden\";\r\n      }\r\n    }\r\n    return newPassword.length > 5 && newPassword === newPasswordConfirm;\r\n  }\r\n  return (\r\n    <div className=\"container mt-5 \">\r\n      <div ref={showErr} className=\"visually-hidden\" role=\"alert\">\r\n        Password must be 6 caharacters or longer!\r\n      </div>\r\n      <form className=\"g-3 needs-validation \" onSubmit={handleSubmit}>\r\n        <div className=\"row \">\r\n          <div className=\"col-md-4 mx-auto\">\r\n            <label className=\"form-label\" for=\"passw\">\r\n              Enter new password:\r\n            </label>\r\n            <input\r\n              autoFocus\r\n              id=\"passw\"\r\n              className=\"form-control\"\r\n              type=\"password\"\r\n              value={newPassword}\r\n              onChange={(e) => setNewPassword(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4 mx-auto\">\r\n            <label className=\"form-label\" for=\"passwd\">\r\n              Enter password again:\r\n            </label>\r\n            <input\r\n              id=\"passwd\"\r\n              className=\"form-control\"\r\n              type=\"password\"\r\n              value={newPasswordConfirm}\r\n              onChange={(e) => setNewPasswordConfirm(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row clearfix\">\r\n          <div className=\"col-md-4 mx-auto mt-2 float-star\">\r\n            <button\r\n              className=\"btn btn-primary px-5\"\r\n              type=\"submit\"\r\n              disabled={!validateForm()}\r\n            >\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ReactPrjs\\front-end\\src\\Components\\Cart.js",["255","256"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { CartContext } from \"../Contexts/CartContext\";\r\nimport { ProductCoverImage } from \"../ProductSource/ProductCoverImage\";\r\nimport { CustomerProfileContext } from \"../Contexts/CustomerProfileContext\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport axios from \"axios\";\r\nimport { LoginSuccessContext } from \"../Contexts/LoginSuccessContext\";\r\n\r\nexport const Cart = (props) => {\r\n  const [cart, setCart, savedCart, cartOrderItems] = useContext(CartContext);\r\n  const [taxRate, setTaxRate] = useState(10);\r\n  const [customerProfile] = useContext(CustomerProfileContext);\r\n  const server = useContext(ServerContext);\r\n  const [loggedIn] = useContext(LoginSuccessContext);\r\n\r\n  function calculateSubtotal() {\r\n    if (cartOrderItems) {\r\n      const total = cartOrderItems.reduce((acc, orderitem) => {\r\n        return (\r\n          acc + orderitem.orderItemPrice * orderitem.orderItemAmountOrdered\r\n        );\r\n      }, 0);\r\n      return total;\r\n    }\r\n  }\r\n\r\n  function calculateTotal() {\r\n    var subtotal = calculateSubtotal();\r\n    return subtotal + subtotal * (taxRate / 100);\r\n  }\r\n\r\n  function handleRemove(itemId) {\r\n    savedCart.current = savedCart.current.filter(\r\n      (order) => order.itemId !== itemId\r\n    );\r\n    localStorage.setItem(\"cartcontent\", JSON.stringify(savedCart.current));\r\n    setCart(savedCart.current);\r\n  }\r\n\r\n  function handlePlaceOrder() {\r\n    if (!loggedIn) {\r\n      props.history.push(\"/login\");\r\n    } else {\r\n      if (customerProfile && cart) {\r\n        console.log(cart);\r\n        axios\r\n          .post(\r\n            `${server}/order/${customerProfile.customerId}/placeOrder`,\r\n            { orderContentList: cart },\r\n            {\r\n              headers: { \"Content-Type\": \"application/json\" },\r\n            }\r\n          )\r\n          .then((res) => {\r\n            console.log(res);\r\n            savedCart.current = null;\r\n            localStorage.removeItem(\"cartcontent\");\r\n            setCart([]);\r\n            props.history.push(\"/orders\");\r\n          })\r\n          .catch((err) => console.log(err));\r\n      }\r\n    }\r\n  }\r\n\r\n  /*\r\n\"orderItemAmountOrdered\":4,\r\n\"orderItemItemId\":75,\r\n\"orderItemPrice\":12.34,\r\n\"orderItemName\":\"PR3\",\r\n\r\n\r\n*/\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row my-2\">\r\n        <div className=\"col-4\"></div>\r\n        <div className=\"col-3\"></div>\r\n        <div className=\"col-3\">\r\n          <span>Price</span>\r\n        </div>\r\n        <hr />\r\n      </div>\r\n      {cartOrderItems.map((orderitem) => {\r\n        return (\r\n          <div className=\"row\" key={orderitem.orderItemItemId}>\r\n            <div className=\"col-4\">\r\n              <ProductCoverImage itemId={orderitem.orderItemItemId} />\r\n            </div>\r\n            <div className=\"col-3 my-auto\">\r\n              Quantity: {orderitem.orderItemAmountOrdered}\r\n            </div>\r\n            <div className=\"col-3 my-auto\">\r\n              <span>{orderitem.orderItemPrice}</span>\r\n            </div>\r\n            <div className=\"col-1 my-auto\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={(e) => handleRemove(orderitem.orderItemItemId)}\r\n              >\r\n                Remove\r\n              </button>\r\n            </div>\r\n            <hr className=\"my-3\" />\r\n          </div>\r\n        );\r\n      })}\r\n      <div className=\"row\">\r\n        <div className=\"col-4\"></div>\r\n        <div className=\"col-3\"></div>\r\n        <div className=\"col-3\">\r\n          <h4>Subtotal: $ {calculateSubtotal().toFixed(2)}</h4>\r\n          <h4>Tax: $ {(calculateSubtotal() * (taxRate / 100)).toFixed(2)}</h4>\r\n          <h4>Total: $ {calculateTotal().toFixed(2)}</h4>\r\n        </div>\r\n        <div className=\"col-2  my-auto\">\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            type=\"button\"\r\n            onClick={handlePlaceOrder}\r\n            disabled={cartOrderItems.length < 1}\r\n          >\r\n            Place Order\r\n          </button>\r\n        </div>\r\n        <hr />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ReactPrjs\\front-end\\src\\Contexts\\CartContext.js",["257","258","259","260","261"],"D:\\ReactPrjs\\front-end\\src\\Components\\Orders.js",["262","263"],"D:\\ReactPrjs\\front-end\\src\\ProductSource\\EditPictures.js",["264","265","266","267"],"import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport { UploadProductImage } from \"./UploadProductImage\";\r\n\r\nexport const EditPictures = (props) => {\r\n  const [picPath, setPicPath] = useState([]);\r\n  const server = useContext(ServerContext);\r\n  const [triggerReRender, setTriggerReRender] = useState([]);\r\n\r\n  const savePics = useRef([]);\r\n\r\n  useEffect(() => {\r\n    FetchPath();\r\n  }, [triggerReRender]);\r\n\r\n  const [picMap, setPicMap] = useState([]);\r\n  const [addPic, setAddPic] = useState([]);\r\n\r\n  const FetchPath = () => {\r\n    //Method returns a list of path locations for a particular item.\r\n    if (props.match.params.itemId) {\r\n      axios\r\n        .get(\r\n          `${server}/items/getItemFileLocations/${props.match.params.itemId}`\r\n        )\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          setPicPath(res.data.pathList);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (picPath) {\r\n      setPicMap([]);\r\n      savePics.current = [];\r\n      picPath.map((path) => {\r\n        const src = `${server}/storage/getItemFiles/${props.match.params.itemId}/${path}`;\r\n        var imageToLoad = new Image();\r\n        imageToLoad.src = src;\r\n        imageToLoad.onload = () => {\r\n          if (savePics.current.findIndex((picc) => picc.path == path) < 0) {\r\n            savePics.current = [\r\n              ...savePics.current,\r\n              {\r\n                itemId: props.match.params.itemId,\r\n                path: path,\r\n                image: imageToLoad,\r\n              },\r\n            ];\r\n            let setArr = new Set(savePics.current);\r\n            setPicMap([...setArr]);\r\n          }\r\n        };\r\n      });\r\n    }\r\n  }, [picPath]);\r\n\r\n  console.log(picMap);\r\n\r\n  function handleDeletePic(itemId, path) {\r\n    axios\r\n      .delete(`${server}/storage/deleteItemFiles/${itemId}/${path}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        setPicMap((prev) => prev.filter((pic) => pic.path !== path));\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  function handleAddPics() {\r\n    setAddPic((prev) => [...prev, 1]);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-8\">\r\n          <div className=\"row\">\r\n            {picMap.map((pic, index) => {\r\n              return (\r\n                <div className=\"col-4\" key={index}>\r\n                  <div className=\"card\">\r\n                    <div className=\"img-container\">\r\n                      <img\r\n                        alt=\"Product\"\r\n                        className=\"card-img-top\"\r\n                        src={pic.image.src}\r\n                      />\r\n                      <button\r\n                        className=\"btn btn-primary\"\r\n                        type=\"button\"\r\n                        onClick={(e) => handleDeletePic(pic.itemId, pic.path)}\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"col-4 my-auto\">\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <UploadProductImage\r\n                itemId={props.match.params.itemId}\r\n                newItemSaved={addPic}\r\n                rerender={setTriggerReRender}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row \">\r\n            <div className=\"col\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                type=\"button\"\r\n                onClick={(e) => handleAddPics()}\r\n              >\r\n                Save Pictures\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n",{"ruleId":"268","severity":1,"message":"269","line":6,"column":20,"nodeType":"270","messageId":"271","endLine":6,"endColumn":29},{"ruleId":"272","replacedBy":"273"},{"ruleId":"274","replacedBy":"275"},{"ruleId":"276","severity":1,"message":"277","line":21,"column":8,"nodeType":"278","endLine":21,"endColumn":10,"suggestions":"279"},{"ruleId":"268","severity":1,"message":"280","line":1,"column":36,"nodeType":"270","messageId":"271","endLine":1,"endColumn":43},{"ruleId":"268","severity":1,"message":"281","line":1,"column":45,"nodeType":"270","messageId":"271","endLine":1,"endColumn":54},{"ruleId":"268","severity":1,"message":"282","line":5,"column":12,"nodeType":"270","messageId":"271","endLine":5,"endColumn":29},{"ruleId":"272","replacedBy":"283"},{"ruleId":"274","replacedBy":"284"},{"ruleId":"268","severity":1,"message":"285","line":10,"column":5,"nodeType":"270","messageId":"271","endLine":10,"endColumn":16},{"ruleId":"268","severity":1,"message":"286","line":13,"column":5,"nodeType":"270","messageId":"271","endLine":13,"endColumn":13},{"ruleId":"268","severity":1,"message":"287","line":14,"column":5,"nodeType":"270","messageId":"271","endLine":14,"endColumn":16},{"ruleId":"268","severity":1,"message":"288","line":15,"column":5,"nodeType":"270","messageId":"271","endLine":15,"endColumn":11},{"ruleId":"268","severity":1,"message":"289","line":16,"column":5,"nodeType":"270","messageId":"271","endLine":16,"endColumn":14},{"ruleId":"268","severity":1,"message":"290","line":18,"column":5,"nodeType":"270","messageId":"271","endLine":18,"endColumn":14},{"ruleId":"268","severity":1,"message":"291","line":19,"column":5,"nodeType":"270","messageId":"271","endLine":19,"endColumn":17},{"ruleId":"268","severity":1,"message":"292","line":20,"column":5,"nodeType":"270","messageId":"271","endLine":20,"endColumn":19},{"ruleId":"268","severity":1,"message":"293","line":21,"column":5,"nodeType":"270","messageId":"271","endLine":21,"endColumn":22},{"ruleId":"268","severity":1,"message":"294","line":22,"column":5,"nodeType":"270","messageId":"271","endLine":22,"endColumn":19},{"ruleId":"268","severity":1,"message":"295","line":23,"column":5,"nodeType":"270","messageId":"271","endLine":23,"endColumn":22},{"ruleId":"296","severity":1,"message":"297","line":54,"column":51,"nodeType":"298","messageId":"299","endLine":54,"endColumn":53},{"ruleId":"276","severity":1,"message":"300","line":73,"column":6,"nodeType":"278","endLine":73,"endColumn":40,"suggestions":"301"},{"ruleId":"268","severity":1,"message":"302","line":1,"column":32,"nodeType":"270","messageId":"271","endLine":1,"endColumn":39},{"ruleId":"268","severity":1,"message":"303","line":1,"column":50,"nodeType":"270","messageId":"271","endLine":1,"endColumn":56},{"ruleId":"276","severity":1,"message":"304","line":58,"column":6,"nodeType":"278","endLine":65,"endColumn":4,"suggestions":"305"},{"ruleId":"268","severity":1,"message":"269","line":6,"column":20,"nodeType":"270","messageId":"271","endLine":6,"endColumn":29},{"ruleId":"276","severity":1,"message":"306","line":16,"column":6,"nodeType":"278","endLine":16,"endColumn":8,"suggestions":"307"},{"ruleId":"308","severity":1,"message":"309","line":31,"column":38,"nodeType":"310","messageId":"311","endLine":31,"endColumn":40},{"ruleId":"312","severity":1,"message":"313","line":127,"column":19,"nodeType":"314","endLine":133,"endColumn":21},{"ruleId":"315","severity":1,"message":"316","line":127,"column":19,"nodeType":"314","endLine":133,"endColumn":21},{"ruleId":"276","severity":1,"message":"317","line":26,"column":6,"nodeType":"278","endLine":26,"endColumn":18,"suggestions":"318"},{"ruleId":"268","severity":1,"message":"319","line":11,"column":18,"nodeType":"270","messageId":"271","endLine":11,"endColumn":27},{"ruleId":"276","severity":1,"message":"306","line":15,"column":6,"nodeType":"278","endLine":15,"endColumn":8,"suggestions":"320"},{"ruleId":"276","severity":1,"message":"306","line":13,"column":6,"nodeType":"278","endLine":13,"endColumn":8,"suggestions":"321"},{"ruleId":"268","severity":1,"message":"322","line":9,"column":10,"nodeType":"270","messageId":"271","endLine":9,"endColumn":14},{"ruleId":"276","severity":1,"message":"323","line":42,"column":6,"nodeType":"278","endLine":42,"endColumn":20,"suggestions":"324"},{"ruleId":"268","severity":1,"message":"285","line":16,"column":5,"nodeType":"270","messageId":"271","endLine":16,"endColumn":16},{"ruleId":"268","severity":1,"message":"325","line":17,"column":5,"nodeType":"270","messageId":"271","endLine":17,"endColumn":16},{"ruleId":"268","severity":1,"message":"326","line":18,"column":5,"nodeType":"270","messageId":"271","endLine":18,"endColumn":19},{"ruleId":"268","severity":1,"message":"286","line":19,"column":5,"nodeType":"270","messageId":"271","endLine":19,"endColumn":13},{"ruleId":"268","severity":1,"message":"287","line":20,"column":5,"nodeType":"270","messageId":"271","endLine":20,"endColumn":16},{"ruleId":"268","severity":1,"message":"288","line":21,"column":5,"nodeType":"270","messageId":"271","endLine":21,"endColumn":11},{"ruleId":"268","severity":1,"message":"289","line":22,"column":5,"nodeType":"270","messageId":"271","endLine":22,"endColumn":14},{"ruleId":"268","severity":1,"message":"327","line":23,"column":5,"nodeType":"270","messageId":"271","endLine":23,"endColumn":23},{"ruleId":"276","severity":1,"message":"304","line":34,"column":6,"nodeType":"278","endLine":34,"endColumn":33,"suggestions":"328"},{"ruleId":"276","severity":1,"message":"304","line":19,"column":6,"nodeType":"278","endLine":19,"endColumn":33,"suggestions":"329"},{"ruleId":"268","severity":1,"message":"330","line":7,"column":17,"nodeType":"270","messageId":"271","endLine":7,"endColumn":25},{"ruleId":"268","severity":1,"message":"331","line":13,"column":9,"nodeType":"270","messageId":"271","endLine":13,"endColumn":18},{"ruleId":"276","severity":1,"message":"332","line":17,"column":6,"nodeType":"278","endLine":17,"endColumn":16,"suggestions":"333"},{"ruleId":"268","severity":1,"message":"334","line":13,"column":5,"nodeType":"270","messageId":"271","endLine":13,"endColumn":13},{"ruleId":"268","severity":1,"message":"335","line":14,"column":5,"nodeType":"270","messageId":"271","endLine":14,"endColumn":16},{"ruleId":"268","severity":1,"message":"336","line":16,"column":5,"nodeType":"270","messageId":"271","endLine":16,"endColumn":18},{"ruleId":"276","severity":1,"message":"337","line":22,"column":6,"nodeType":"278","endLine":22,"endColumn":27,"suggestions":"338"},{"ruleId":"268","severity":1,"message":"339","line":1,"column":17,"nodeType":"270","messageId":"271","endLine":1,"endColumn":25},{"ruleId":"268","severity":1,"message":"340","line":1,"column":39,"nodeType":"270","messageId":"271","endLine":1,"endColumn":48},{"ruleId":"268","severity":1,"message":"341","line":5,"column":8,"nodeType":"270","messageId":"271","endLine":5,"endColumn":13},{"ruleId":"268","severity":1,"message":"342","line":9,"column":9,"nodeType":"270","messageId":"271","endLine":9,"endColumn":15},{"ruleId":"268","severity":1,"message":"334","line":11,"column":5,"nodeType":"270","messageId":"271","endLine":11,"endColumn":13},{"ruleId":"268","severity":1,"message":"343","line":13,"column":5,"nodeType":"270","messageId":"271","endLine":13,"endColumn":15},{"ruleId":"268","severity":1,"message":"344","line":15,"column":5,"nodeType":"270","messageId":"271","endLine":15,"endColumn":24},{"ruleId":"268","severity":1,"message":"345","line":26,"column":5,"nodeType":"270","messageId":"271","endLine":26,"endColumn":9},{"ruleId":"268","severity":1,"message":"346","line":29,"column":5,"nodeType":"270","messageId":"271","endLine":29,"endColumn":19},{"ruleId":"268","severity":1,"message":"347","line":31,"column":5,"nodeType":"270","messageId":"271","endLine":31,"endColumn":19},{"ruleId":"268","severity":1,"message":"348","line":14,"column":5,"nodeType":"270","messageId":"271","endLine":14,"endColumn":23},{"ruleId":"268","severity":1,"message":"349","line":15,"column":5,"nodeType":"270","messageId":"271","endLine":15,"endColumn":19},{"ruleId":"268","severity":1,"message":"330","line":7,"column":17,"nodeType":"270","messageId":"271","endLine":7,"endColumn":25},{"ruleId":"268","severity":1,"message":"331","line":13,"column":9,"nodeType":"270","messageId":"271","endLine":13,"endColumn":18},{"ruleId":"268","severity":1,"message":"340","line":1,"column":27,"nodeType":"270","messageId":"271","endLine":1,"endColumn":36},{"ruleId":"268","severity":1,"message":"350","line":6,"column":5,"nodeType":"270","messageId":"271","endLine":6,"endColumn":13},{"ruleId":"268","severity":1,"message":"285","line":7,"column":5,"nodeType":"270","messageId":"271","endLine":7,"endColumn":16},{"ruleId":"268","severity":1,"message":"325","line":8,"column":5,"nodeType":"270","messageId":"271","endLine":8,"endColumn":16},{"ruleId":"268","severity":1,"message":"288","line":12,"column":5,"nodeType":"270","messageId":"271","endLine":12,"endColumn":11},{"ruleId":"268","severity":1,"message":"289","line":13,"column":5,"nodeType":"270","messageId":"271","endLine":13,"endColumn":14},{"ruleId":"268","severity":1,"message":"327","line":14,"column":5,"nodeType":"270","messageId":"271","endLine":14,"endColumn":23},{"ruleId":"268","severity":1,"message":"292","line":17,"column":5,"nodeType":"270","messageId":"271","endLine":17,"endColumn":19},{"ruleId":"268","severity":1,"message":"294","line":19,"column":5,"nodeType":"270","messageId":"271","endLine":19,"endColumn":19},{"ruleId":"276","severity":1,"message":"351","line":24,"column":6,"nodeType":"278","endLine":24,"endColumn":8,"suggestions":"352"},{"ruleId":"268","severity":1,"message":"340","line":1,"column":39,"nodeType":"270","messageId":"271","endLine":1,"endColumn":48},{"ruleId":"268","severity":1,"message":"353","line":11,"column":19,"nodeType":"270","messageId":"271","endLine":11,"endColumn":29},{"ruleId":"268","severity":1,"message":"335","line":20,"column":5,"nodeType":"270","messageId":"271","endLine":20,"endColumn":16},{"ruleId":"268","severity":1,"message":"336","line":22,"column":5,"nodeType":"270","messageId":"271","endLine":22,"endColumn":18},{"ruleId":"268","severity":1,"message":"344","line":23,"column":5,"nodeType":"270","messageId":"271","endLine":23,"endColumn":24},{"ruleId":"276","severity":1,"message":"354","line":52,"column":6,"nodeType":"278","endLine":52,"endColumn":18,"suggestions":"355"},{"ruleId":"276","severity":1,"message":"354","line":91,"column":6,"nodeType":"278","endLine":91,"endColumn":29,"suggestions":"356"},{"ruleId":"268","severity":1,"message":"335","line":11,"column":20,"nodeType":"270","messageId":"271","endLine":11,"endColumn":31},{"ruleId":"276","severity":1,"message":"357","line":19,"column":6,"nodeType":"278","endLine":19,"endColumn":23,"suggestions":"358"},{"ruleId":"276","severity":1,"message":"306","line":15,"column":6,"nodeType":"278","endLine":15,"endColumn":23,"suggestions":"359"},{"ruleId":"308","severity":1,"message":"309","line":39,"column":26,"nodeType":"310","messageId":"311","endLine":39,"endColumn":28},{"ruleId":"296","severity":1,"message":"360","line":44,"column":62,"nodeType":"298","messageId":"299","endLine":44,"endColumn":64},{"ruleId":"276","severity":1,"message":"361","line":59,"column":6,"nodeType":"278","endLine":59,"endColumn":15,"suggestions":"362"},"no-unused-vars","'setServer' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["363"],"no-negated-in-lhs",["364"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'FetchProducts'. Either include it or remove the dependency array.","ArrayExpression",["365"],"'NavLink' is defined but never used.","'Container' is defined but never used.","'itemFileLocations' is assigned a value but never used.",["363"],["364"],"'setProducts' is assigned a value but never used.","'pageSize' is assigned a value but never used.","'setPageSize' is assigned a value but never used.","'sortBy' is assigned a value but never used.","'setSortBy' is assigned a value but never used.","'direction' is assigned a value but never used.","'setDirection' is assigned a value but never used.","'minPriceFilter' is assigned a value but never used.","'setMinPriceFilter' is assigned a value but never used.","'maxPriceFilter' is assigned a value but never used.","'setMaxPriceFilter' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'currentPage' and 'pageNumberArray'. Either include them or remove the dependency array.",["366"],"'useMemo' is defined but never used.","'useRef' is defined but never used.","React Hook useEffect has a missing dependency: 'server'. Either include it or remove the dependency array.",["367"],"React Hook useEffect has a missing dependency: 'FetchPath'. Either include it or remove the dependency array.",["368"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'SearchTyped'. Either include it or remove the dependency array.",["369"],"'setItemId' is assigned a value but never used.",["370"],["371"],"'pics' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'PostFiles' and 'itemId'. Either include them or remove the dependency array.",["372"],"'currentPage' is assigned a value but never used.","'setCurrentPage' is assigned a value but never used.","'numberOfTotalPages' is assigned a value but never used.",["373"],["374"],"'setTitle' is assigned a value but never used.","'showModal' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'checkAuthorization'. Either include it or remove the dependency array.",["375"],"'loggedIn' is assigned a value but never used.","'setLoggedIn' is assigned a value but never used.","'setCustomerFK' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchUserProfile'. Either include it or remove the dependency array.",["376"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'server' is assigned a value but never used.","'customerFK' is assigned a value but never used.","'loginWithJWTSuccess' is assigned a value but never used.","'cart' is assigned a value but never used.","'cartOrderItems' is assigned a value but never used.","'firstFetchDone' is assigned a value but never used.","'setCustomerProfile' is assigned a value but never used.","'setUserProfile' is assigned a value but never used.","'products' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.match.params.uuid' and 'server'. Either include them or remove the dependency array.",["377"],"'setTaxRate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'firstFetchDone', 'loggedIn', and 'server'. Either include them or remove the dependency array.",["378"],["379"],"React Hook useEffect has missing dependencies: 'FetchOrders' and 'loggedIn'. Either include them or remove the dependency array.",["380"],["381"],"Expected '===' and instead saw '=='.","React Hook useEffect has missing dependencies: 'props.match.params.itemId' and 'server'. Either include them or remove the dependency array.",["382"],"no-global-assign","no-unsafe-negation",{"desc":"383","fix":"384"},{"desc":"385","fix":"386"},{"desc":"387","fix":"388"},{"desc":"389","fix":"390"},{"desc":"391","fix":"392"},{"desc":"389","fix":"393"},{"desc":"389","fix":"394"},{"desc":"395","fix":"396"},{"desc":"397","fix":"398"},{"desc":"397","fix":"399"},{"desc":"400","fix":"401"},{"desc":"402","fix":"403"},{"desc":"404","fix":"405"},{"desc":"406","fix":"407"},{"desc":"408","fix":"409"},{"desc":"410","fix":"411"},{"desc":"412","fix":"413"},{"desc":"414","fix":"415"},"Update the dependencies array to be: [FetchProducts]",{"range":"416","text":"417"},"Update the dependencies array to be: [currentPage, endOfPageSet, numberOfTotalPages, pageNumberArray]",{"range":"418","text":"419"},"Update the dependencies array to be: [currentPage, pageSize, sortBy, direction, minPriceFilter, maxPriceFilter, server]",{"range":"420","text":"421"},"Update the dependencies array to be: [FetchPath]",{"range":"422","text":"423"},"Update the dependencies array to be: [SearchTyped, searchWord]",{"range":"424","text":"425"},{"range":"426","text":"423"},{"range":"427","text":"423"},"Update the dependencies array to be: [PostFiles, itemId, newItemSaved]",{"range":"428","text":"429"},"Update the dependencies array to be: [props.match.params.itemId, server]",{"range":"430","text":"431"},{"range":"432","text":"431"},"Update the dependencies array to be: [checkAuthorization, loggedIn]",{"range":"433","text":"434"},"Update the dependencies array to be: [fetchUserProfile, loginWithJWTSuccess]",{"range":"435","text":"436"},"Update the dependencies array to be: [props.match.params.uuid, server]",{"range":"437","text":"438"},"Update the dependencies array to be: [customerFK, firstFetchDone, loggedIn, server]",{"range":"439","text":"440"},"Update the dependencies array to be: [cart, customerProfile, firstFetchDone, loggedIn, server]",{"range":"441","text":"442"},"Update the dependencies array to be: [FetchOrders, customerProfile, loggedIn]",{"range":"443","text":"444"},"Update the dependencies array to be: [FetchPath, triggerReRender]",{"range":"445","text":"446"},"Update the dependencies array to be: [picPath, props.match.params.itemId, server]",{"range":"447","text":"448"},[649,651],"[FetchProducts]",[2095,2129],"[currentPage, endOfPageSet, numberOfTotalPages, pageNumberArray]",[1856,1966],"[currentPage, pageSize, sortBy, direction, minPriceFilter, maxPriceFilter, server]",[487,489],"[FetchPath]",[826,838],"[SearchTyped, searchWord]",[464,466],[424,426],[1450,1464],"[PostFiles, itemId, newItemSaved]",[1017,1044],"[props.match.params.itemId, server]",[644,671],[601,611],"[checkAuthorization, loggedIn]",[707,728],"[fetchUserProfile, loginWithJWTSuccess]",[778,780],"[props.match.params.uuid, server]",[1923,1935],"[customerFK, firstFetchDone, loggedIn, server]",[3066,3089],"[cart, customerProfile, firstFetchDone, loggedIn, server]",[703,720],"[FetchOrders, customerProfile, loggedIn]",[500,517],"[FetchPath, triggerReRender]",[1824,1833],"[picPath, props.match.params.itemId, server]"]