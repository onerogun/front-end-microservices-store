[{"/media/ogn/Multimedia/ReactPrjs/front-end/src/index.js":"1","/media/ogn/Multimedia/ReactPrjs/front-end/src/App.js":"2","/media/ogn/Multimedia/ReactPrjs/front-end/src/Contexts/ServerContext.js":"3","/media/ogn/Multimedia/ReactPrjs/front-end/src/Contexts/ProductContext.js":"4","/media/ogn/Multimedia/ReactPrjs/front-end/src/Contexts/LoginSuccessContext.js":"5","/media/ogn/Multimedia/ReactPrjs/front-end/src/Contexts/CustomerProfileContext.js":"6","/media/ogn/Multimedia/ReactPrjs/front-end/src/Contexts/ManagedProductContext.js":"7","/media/ogn/Multimedia/ReactPrjs/front-end/src/Contexts/CartContext.js":"8","/media/ogn/Multimedia/ReactPrjs/front-end/src/Contexts/ChatContext.js":"9","/media/ogn/Multimedia/ReactPrjs/front-end/src/ProductSource/EditProductDescription.js":"10","/media/ogn/Multimedia/ReactPrjs/front-end/src/ProductSource/Product.js":"11","/media/ogn/Multimedia/ReactPrjs/front-end/src/ProductSource/AddProduct.js":"12","/media/ogn/Multimedia/ReactPrjs/front-end/src/ProductSource/ProductDetails.js":"13","/media/ogn/Multimedia/ReactPrjs/front-end/src/Auth/Login.js":"14","/media/ogn/Multimedia/ReactPrjs/front-end/src/Auth/PasswordResetRequest.js":"15","/media/ogn/Multimedia/ReactPrjs/front-end/src/Auth/PasswordReset.js":"16","/media/ogn/Multimedia/ReactPrjs/front-end/src/SignUp/CustomerSignUp.js":"17","/media/ogn/Multimedia/ReactPrjs/front-end/src/Components/Navbar.js":"18","/media/ogn/Multimedia/ReactPrjs/front-end/src/Images/EditPictures.js":"19","/media/ogn/Multimedia/ReactPrjs/front-end/src/Profile/CustomerProfile.js":"20","/media/ogn/Multimedia/ReactPrjs/front-end/src/Images/Image.js":"21","/media/ogn/Multimedia/ReactPrjs/front-end/src/Profile/EditCustomerProfile.js":"22","/media/ogn/Multimedia/ReactPrjs/front-end/src/Manage/ManageProducts.js":"23","/media/ogn/Multimedia/ReactPrjs/front-end/src/Orders/Orders.js":"24","/media/ogn/Multimedia/ReactPrjs/front-end/src/Cart/Cart.js":"25","/media/ogn/Multimedia/ReactPrjs/front-end/src/Review/WriteReview.js":"26","/media/ogn/Multimedia/ReactPrjs/front-end/src/Manage/EditProduct.js":"27","/media/ogn/Multimedia/ReactPrjs/front-end/src/Chat/Chat.js":"28","/media/ogn/Multimedia/ReactPrjs/front-end/src/Images/ProductCoverImage.js":"29","/media/ogn/Multimedia/ReactPrjs/front-end/src/Images/UploadProductImage.js":"30","/media/ogn/Multimedia/ReactPrjs/front-end/src/Components/ItemRating.js":"31","/media/ogn/Multimedia/ReactPrjs/front-end/src/Components/FilterBar.js":"32","/media/ogn/Multimedia/ReactPrjs/front-end/src/Review/Reviews.js":"33","/media/ogn/Multimedia/ReactPrjs/front-end/src/Auth/LoginModal.js":"34","/media/ogn/Multimedia/ReactPrjs/front-end/src/Profile/EditSuccessModal.js":"35","/media/ogn/Multimedia/ReactPrjs/front-end/src/Chat/ChatArea.js":"36"},{"size":410,"mtime":1610846178377,"results":"37","hashOfConfig":"38"},{"size":4621,"mtime":1612315728535,"results":"39","hashOfConfig":"38"},{"size":389,"mtime":1613090883815,"results":"40","hashOfConfig":"38"},{"size":2577,"mtime":1611399175311,"results":"41","hashOfConfig":"38"},{"size":1565,"mtime":1612095819290,"results":"42","hashOfConfig":"38"},{"size":1995,"mtime":1611617754664,"results":"43","hashOfConfig":"38"},{"size":1119,"mtime":1611605432780,"results":"44","hashOfConfig":"38"},{"size":3652,"mtime":1613600319894,"results":"45","hashOfConfig":"38"},{"size":5964,"mtime":1612534302980,"results":"46","hashOfConfig":"38"},{"size":3709,"mtime":1611350655232,"results":"47","hashOfConfig":"38"},{"size":8090,"mtime":1613091050336,"results":"48","hashOfConfig":"38"},{"size":5312,"mtime":1611756859110,"results":"49","hashOfConfig":"38"},{"size":4415,"mtime":1611756818719,"results":"50","hashOfConfig":"38"},{"size":4069,"mtime":1612097363025,"results":"51","hashOfConfig":"38"},{"size":2014,"mtime":1611520190979,"results":"52","hashOfConfig":"38"},{"size":3204,"mtime":1611160188674,"results":"53","hashOfConfig":"38"},{"size":5818,"mtime":1611756614057,"results":"54","hashOfConfig":"38"},{"size":5560,"mtime":1613090981579,"results":"55","hashOfConfig":"38"},{"size":3950,"mtime":1611756859103,"results":"56","hashOfConfig":"38"},{"size":2761,"mtime":1612117124786,"results":"57","hashOfConfig":"38"},{"size":5183,"mtime":1613597832200,"results":"58","hashOfConfig":"38"},{"size":5259,"mtime":1611756730169,"results":"59","hashOfConfig":"38"},{"size":2164,"mtime":1611756843715,"results":"60","hashOfConfig":"38"},{"size":3857,"mtime":1611863807293,"results":"61","hashOfConfig":"38"},{"size":4175,"mtime":1611756843685,"results":"62","hashOfConfig":"38"},{"size":2687,"mtime":1611756450969,"results":"63","hashOfConfig":"38"},{"size":3001,"mtime":1611756818722,"results":"64","hashOfConfig":"38"},{"size":5761,"mtime":1613590837305,"results":"65","hashOfConfig":"38"},{"size":1385,"mtime":1612473758715,"results":"66","hashOfConfig":"38"},{"size":3344,"mtime":1613571251068,"results":"67","hashOfConfig":"38"},{"size":980,"mtime":1611744980296,"results":"68","hashOfConfig":"38"},{"size":3008,"mtime":1613091432302,"results":"69","hashOfConfig":"38"},{"size":2040,"mtime":1611756401912,"results":"70","hashOfConfig":"38"},{"size":1025,"mtime":1611756784164,"results":"71","hashOfConfig":"38"},{"size":1057,"mtime":1611756727290,"results":"72","hashOfConfig":"38"},{"size":3725,"mtime":1612117348127,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1n0fk5w",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"76"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"76"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"76"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"76"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"76"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"76"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"76"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"76"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"76"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"76"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"76"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"76"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"76"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"76"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"76"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"76"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"76"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"76"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"76"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"76"},"/media/ogn/Multimedia/ReactPrjs/front-end/src/index.js",[],["175","176"],"/media/ogn/Multimedia/ReactPrjs/front-end/src/App.js",[],"/media/ogn/Multimedia/ReactPrjs/front-end/src/Contexts/ServerContext.js",["177"],"import React, { useState } from \"react\";\r\n\r\nexport const ServerContext = React.createContext();\r\n//http://192.168.49.2:31000\r\n//http://localhost:9191\r\nexport const ServerProvider = (props) => {\r\n  const [server, setServer] = useState(\"http://192.168.49.2:31000\");\r\n\r\n  return (\r\n    <ServerContext.Provider value={server}>\r\n      {props.children}\r\n    </ServerContext.Provider>\r\n  );\r\n};\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/Contexts/ProductContext.js",["178","179"],"import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport axios from \"axios\";\r\n\r\n//http://localhost:9191/items/getItemsPage?pageNo=0&pageSize=3&sortBy=itemId\r\n\r\nexport const ProductContext = React.createContext();\r\n\r\nexport const ProductProvider = (props) => {\r\n  const [products, setProducts] = useState([]);\r\n  const server = useContext(ServerContext);\r\n\r\n  //If filtered before and saved to session storage, use those props otherwise use default\r\n  // const stored = sessionStorage.getItem(\"filter\");\r\n  /* const searchProps = useRef(\r\n    stored\r\n      ? JSON.parse(stored)\r\n      : {\r\n          pageNo: 0,\r\n          pageSize: 1,\r\n          sortBy: \"itemPrice\",\r\n          direction: 1,\r\n          min: 0,\r\n          max: 9999999,\r\n        }\r\n  );*/\r\n  // console.log(searchProps.current);\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(1);\r\n  const [sortBy, setSortBy] = useState(\"itemPrice\");\r\n  const [direction, setDirection] = useState(1);\r\n\r\n  const [minPriceFilter, setMinPriceFilter] = useState(0);\r\n  const [maxPriceFilter, setMaxPriceFilter] = useState(9999999);\r\n\r\n  const [numberOfTotalPages, setNumberOfTotalPages] = useState();\r\n\r\n  useEffect(() => {\r\n    const FetchProducts = () => {\r\n      axios\r\n        .get(`${server}/items/getItemsPage`, {\r\n          params: {\r\n            pageNo: currentPage,\r\n            pageSize: pageSize,\r\n            sortBy: sortBy,\r\n            direction: direction,\r\n            min: minPriceFilter,\r\n            max: maxPriceFilter,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          setProducts(res.data.data);\r\n          setNumberOfTotalPages(res.data.NumberOfTotalPages);\r\n        });\r\n    };\r\n    FetchProducts();\r\n  }, [\r\n    currentPage,\r\n    pageSize,\r\n    sortBy,\r\n    direction,\r\n    minPriceFilter,\r\n    maxPriceFilter,\r\n  ]);\r\n\r\n  /*\r\n    currentPage,\r\n    pageSize,\r\n    sortBy,\r\n    direction,\r\n    minPriceFilter,\r\n    maxPriceFilter,\r\n\r\n  */\r\n\r\n  return (\r\n    <ProductContext.Provider\r\n      value={[\r\n        products,\r\n        setProducts,\r\n        currentPage,\r\n        setCurrentPage,\r\n        pageSize,\r\n        setPageSize,\r\n        sortBy,\r\n        setSortBy,\r\n        numberOfTotalPages,\r\n        direction,\r\n        setDirection,\r\n        minPriceFilter,\r\n        setMinPriceFilter,\r\n        maxPriceFilter,\r\n        setMaxPriceFilter,\r\n      ]}\r\n    >\r\n      {props.children}\r\n    </ProductContext.Provider>\r\n  );\r\n};\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/Contexts/LoginSuccessContext.js",["180"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport axios from \"axios\";\r\n\r\nexport const LoginSuccessContext = React.createContext();\r\n\r\nexport const LoginSuccessProvider = (props) => {\r\n  const server = useContext(ServerContext);\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [customerFK, setCustomerFK] = useState(null);\r\n  const [loginWithJWTSuccess, setLoginWithJWTSuccess] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"TokenJWT\")) {\r\n      checkAuthorization();\r\n    }\r\n  }, [loggedIn]);\r\n\r\n  const checkAuthorization = () => {\r\n    axios\r\n      .get(`${server}/auth/checkJWT`, {\r\n        headers: {\r\n          Authorization: localStorage.getItem(\"TokenJWT\"),\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.status);\r\n        if (res.status === 200) {\r\n          console.log(\"logged in\");\r\n\r\n          var FK = res.headers.cookie.replace(\"custFK=\", \"\");\r\n          console.log(\"FK: \" + FK);\r\n          // sessionStorage.setItem(\"custFK\", FK);\r\n          setCustomerFK(FK);\r\n          setLoggedIn(true);\r\n          setLoginWithJWTSuccess(true);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <LoginSuccessContext.Provider\r\n      value={[\r\n        loggedIn,\r\n        setLoggedIn,\r\n        customerFK,\r\n        setCustomerFK,\r\n        loginWithJWTSuccess,\r\n        setLoginWithJWTSuccess,\r\n      ]}\r\n    >\r\n      {props.children}\r\n    </LoginSuccessContext.Provider>\r\n  );\r\n};\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/Contexts/CustomerProfileContext.js",["181","182","183","184"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport axios from \"axios\";\r\nimport { LoginSuccessContext } from \"../Contexts/LoginSuccessContext\";\r\n\r\nexport const CustomerProfileContext = React.createContext();\r\n\r\nexport const CustomerProfileProvider = (props) => {\r\n  const server = useContext(ServerContext);\r\n  const [customerProfile, setCustomerProfile] = useState([]);\r\n  const [userProfile, setUserProfile] = useState([]);\r\n\r\n // user: {\"userId\":50,\"userName\":\"zz\",\"userEMail\":\"zz@z.c\",\"customerFK\":36,\"userRoles\":\"ADMIN\"}\r\n\r\n  const [\r\n    loggedIn,\r\n    setLoggedIn,\r\n    customerFK,\r\n    setCustomerFK,\r\n    loginWithJWTSuccess,\r\n  ] = useContext(LoginSuccessContext);\r\n\r\n  useEffect(() => {\r\n    fetchUserProfile();\r\n  }, [loginWithJWTSuccess]);\r\n\r\n  /**\r\n   * First get customer profile from customer-service , then get user profile using foreign key in\r\n   *  returned customer object\r\n   */\r\n  const fetchUserProfile = () => {\r\n    console.log(\"fetching profile\");\r\n    if (customerFK) {\r\n      axios\r\n        .get(`${server}/customer/getCustomer/${customerFK}`, {\r\n          headers: {\r\n            Authorization: localStorage.getItem(\"TokenJWT\"),\r\n          },\r\n        })\r\n        .then((res) => {\r\n          axios\r\n            .get(`${server}/auth/getUser/${res.data.userFK}`, {\r\n              headers: {\r\n                Authorization: localStorage.getItem(\"TokenJWT\"),\r\n              },\r\n            })\r\n            .then((response) => {\r\n              console.log(\"user: \" + JSON.stringify(response.data));\r\n              setUserProfile(response.data);\r\n            });\r\n\r\n          setCustomerProfile(res.data);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CustomerProfileContext.Provider\r\n      value={[customerProfile, userProfile, setCustomerProfile, setUserProfile]}\r\n    >\r\n      {props.children}\r\n    </CustomerProfileContext.Provider>\r\n  );\r\n};\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/Contexts/ManagedProductContext.js",["185","186","187","188"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport { CustomerProfileContext } from \"./CustomerProfileContext\";\r\nimport axios from \"axios\";\r\n\r\nexport const ManagedProductContext = React.createContext();\r\n\r\nexport const ManagedProductProvider = (props) => {\r\n  const [myProducts, setMyProducts] = useState([]);\r\n  const server = useContext(ServerContext);\r\n\r\n  const [\r\n    customerProfile,\r\n    userProfile,\r\n    setCustomerProfile,\r\n    setUserProfile,\r\n  ] = useContext(CustomerProfileContext);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${server}/items/getUserItems/${customerProfile.customerId}`, {\r\n        headers: {\r\n          Authorization: localStorage.getItem(\"TokenJWT\"),\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setMyProducts(res.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, [customerProfile]);\r\n\r\n  return (\r\n    <ManagedProductContext.Provider value={[myProducts, setMyProducts]}>\r\n      {props.children}\r\n    </ManagedProductContext.Provider>\r\n  );\r\n};\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/Contexts/CartContext.js",["189","190","191","192","193"],"/media/ogn/Multimedia/ReactPrjs/front-end/src/Contexts/ChatContext.js",["194","195","196","197","198","199","200","201","202","203","204"],"import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport { Client } from \"@stomp/stompjs\";\r\nimport { CustomerProfileContext } from \"./CustomerProfileContext\";\r\nimport { LoginSuccessContext } from \"./LoginSuccessContext\";\r\nimport { ServerContext } from \"./ServerContext\";\r\n\r\nexport const ChatContext = React.createContext();\r\n\r\nexport const ChatProvider = (props) => {\r\n  const client = useRef(new Client());\r\n  const [connected, setConnected] = useState(false);\r\n  const [subscribedTopics, setSubscribedTopics] = useState([]);\r\n  const server = useContext(ServerContext);\r\n  const [\r\n    customerProfile,\r\n    userProfile,\r\n    setCustomerProfile,\r\n    setUserProfile,\r\n  ] = useContext(CustomerProfileContext);\r\n\r\n  const arr = useRef([]);\r\n  const [chat, setChat] = useState([]);\r\n\r\n  const [chatIndex, setChatIndex] = useState(-1);\r\n\r\n  const [\r\n    loggedIn,\r\n    setLoggedIn,\r\n    customerFK,\r\n    setCustomerFK,\r\n    loginWithJWTSuccess,\r\n  ] = useContext(LoginSuccessContext);\r\n\r\n  /**\r\n   * first open websocket and subscribe to certain endpoints\r\n   */\r\n  useEffect(() => {\r\n    if (loggedIn && customerProfile) {\r\n      console.log(\"trying to connect\");\r\n      let srvr = server.replace(\"http://\", \"\");\r\n      client.current.configure({\r\n        brokerURL: `ws://${srvr}/mywebsockets`,\r\n        onConnect: () => {\r\n          /**\r\n           * get list of previously subscribed topics\r\n           * and set in state\r\n           */\r\n          console.log(\"connected!!! \");\r\n          client.current.subscribe(\r\n            `/app/getTopics/${customerProfile.customerId}`,\r\n            (message) => {\r\n              console.log(\"subd topics: \" + message.body);\r\n              if (message.body) {\r\n                setSubscribedTopics(JSON.parse(message.body));\r\n              }\r\n            }\r\n          );\r\n\r\n          /**\r\n           * when a new topic opened, it is sent here and state updated\r\n           * then view is updated\r\n           */\r\n          client.current.subscribe(\r\n            `/queue/${customerProfile.customerId}`,\r\n            (message) => {\r\n              console.log(\"new topic added: \" + JSON.stringify(message.body));\r\n              setSubscribedTopics(JSON.parse(message.body));\r\n            }\r\n          );\r\n          setConnected(true);\r\n        },\r\n      });\r\n    }\r\n  }, [customerProfile]);\r\n\r\n  /**\r\n   * When list of subscribed topics change, create new array for topics\r\n   * and details\r\n   */\r\n  useEffect(() => {\r\n    if (loggedIn && customerProfile) {\r\n      console.log(\"subbed topic change\");\r\n      console.log(subscribedTopics);\r\n      /**\r\n       * extract publisher and use it to open a new topic when replying\r\n       */\r\n      subscribedTopics.forEach((topicName, index) => {\r\n        var publisherIdDash = topicName.replace(\"Publisher:\", \"\");\r\n        var publisher = publisherIdDash.substring(\r\n          0,\r\n          publisherIdDash.indexOf(\"-\")\r\n        );\r\n        /**\r\n         * message is for incoming messages, sendMessage is for messages that will\r\n         * be sent by subscriber\r\n         * Add new object to chat only if new topic is not already in chat\r\n         * (publisher is the user who are sending messages to this topic)\r\n         */\r\n        if (arr.current.findIndex((msg) => msg.topic === topicName) < 0) {\r\n          arr.current.push({\r\n            topic: topicName,\r\n            publisher: publisher,\r\n            message: [],\r\n            sendMessage: \"\",\r\n            youSent: [],\r\n          });\r\n        }\r\n        setChat([...arr.current]);\r\n      });\r\n\r\n      subscribedTopics.forEach((topicName, index) => {\r\n        /**\r\n         * adds received chat to the array only when a new message is received\r\n         */\r\n        client.current.subscribe(`/queue/${topicName}`, (message) => {\r\n          console.log(\"newmsg:\" + message.body);\r\n          arr.current[index].message = [\r\n            ...arr.current[index].message,\r\n            message.body,\r\n          ];\r\n          if (\r\n            arr.current[index].message.length >\r\n            arr.current[index].youSent.length\r\n          ) {\r\n            arr.current[index].youSent = [...arr.current[index].youSent, \"\"];\r\n          }\r\n\r\n          setChat([...arr.current]);\r\n        });\r\n      });\r\n      /**\r\n       * sets chat array\r\n       */\r\n      setChat([...arr.current]);\r\n    }\r\n  }, [subscribedTopics]);\r\n\r\n  /**\r\n   * Stores previous subscription\r\n   */\r\n  const subscription = useRef();\r\n\r\n  useEffect(() => {\r\n    if (loggedIn && customerProfile) {\r\n      if (connected && client.current) {\r\n        /**\r\n         * First unsubscribe previous subscription\r\n         */\r\n        if (subscription.current) {\r\n          subscription.current.unsubscribe();\r\n        }\r\n        /**\r\n         *And subscribe to current chat. server will always send back\r\n         * messages\r\n         */\r\n        subscription.current = client.current.subscribe(\r\n          `/user/queue/chat`,\r\n          (message) => {\r\n            console.log(\"sent msg: \" + message.body);\r\n\r\n            arr.current[chatIndex].youSent = [\r\n              ...arr.current[chatIndex].youSent,\r\n              message.body,\r\n            ];\r\n\r\n            if (\r\n              arr.current[chatIndex].youSent.length >\r\n              arr.current[chatIndex].message.length\r\n            ) {\r\n              arr.current[chatIndex].message = [\r\n                ...arr.current[chatIndex].message,\r\n                \"\",\r\n              ];\r\n            }\r\n            console.log(arr.current);\r\n            setChat([...arr.current]);\r\n          }\r\n        );\r\n      }\r\n    }\r\n  }, [chatIndex]);\r\n\r\n  return (\r\n    <ChatContext.Provider\r\n      value={[\r\n        connected,\r\n        subscribedTopics,\r\n        chat,\r\n        setChat,\r\n        client,\r\n        arr,\r\n        setConnected,\r\n        chatIndex,\r\n        setChatIndex,\r\n        ,\r\n        setSubscribedTopics,\r\n      ]}\r\n    >\r\n      {props.children}\r\n    </ChatContext.Provider>\r\n  );\r\n};\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/ProductSource/EditProductDescription.js",["205"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport axios from \"axios\";\r\n\r\nexport const EditProductDescription = (props) => {\r\n  const [inputFields, setInputFields] = useState([{ nameOf: \"\", valueOf: \"\" }]);\r\n\r\n  const server = useContext(ServerContext);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${server}/itemDetails/getItemDetails/${props.match.params.itemId}`)\r\n      .then((res) => {\r\n        console.log(res.data.itemDetailsList);\r\n        if (res.data.itemDetailsList) {\r\n          setInputFields(res.data.itemDetailsList);\r\n        }\r\n      });\r\n  }, [props.match.params.itemId]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(inputFields);\r\n\r\n    const itemDetailsToSend = {\r\n      itemId: props.match.params.itemId,\r\n      itemDetailsList: inputFields,\r\n    };\r\n\r\n    console.log(itemDetailsToSend);\r\n\r\n    axios\r\n      .post(`${server}/itemDetails/saveItemDetails`, itemDetailsToSend, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        window.alert(\"Item details saved!\");\r\n        props.history.push(`/product-details/${props.match.params.itemId}`);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const addField = () => {\r\n    setInputFields([...inputFields, { nameOf: \"\", valueOf: \"\" }]);\r\n  };\r\n\r\n  const removeField = (index) => {\r\n    const values = [...inputFields];\r\n    values.splice(index, 1);\r\n    setInputFields(values);\r\n  };\r\n\r\n  function handleInputChange(event, index) {\r\n    const values = [...inputFields];\r\n    values[index][event.target.name] = event.target.value;\r\n    setInputFields(values);\r\n  }\r\n\r\n  if (!inputFields) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container \">\r\n      <h2 className=\"text-center\">Enter/Edit Product Properties</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        {inputFields.map((field, index) => {\r\n          return (\r\n            <div className=\"row my-4\" key={index}>\r\n              <div className=\"col-3 form-floating\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"nameOf\"\r\n                  id=\"floatingNameOf\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Property\"\r\n                  value={field.nameOf}\r\n                  onChange={(e) => handleInputChange(e, index)}\r\n                />\r\n                <label for=\"floatingNameOf\">Property Name</label>\r\n              </div>\r\n              <div className=\"col-7 form-floating\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"valueOf\"\r\n                  id=\"floatingValueOf\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Property Value\"\r\n                  value={field.valueOf}\r\n                  onChange={(e) => handleInputChange(e, index)}\r\n                />\r\n                <label for=\"floatingValueOf\">Property Value</label>\r\n              </div>\r\n              <div className=\"col-2\">\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  type=\"button\"\r\n                  onClick={() => removeField(index)}\r\n                >\r\n                  Remove Field\r\n                </button>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Submit\r\n        </button>\r\n        <button\r\n          className=\"btn btn-secondary mx-5\"\r\n          type=\"button\"\r\n          onClick={addField}\r\n        >\r\n          Add New Field\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/ProductSource/Product.js",["206","207","208","209","210","211","212","213","214","215","216","217","218","219"],"import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport { ProductContext } from \"../Contexts/ProductContext\";\r\nimport { ProductCoverImage } from \"../Images/ProductCoverImage\";\r\nimport { FilterBar } from \"../Components/FilterBar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ItemRating } from \"../Components/ItemRating\";\r\n\r\nexport const Product = () => {\r\n  const [\r\n    products,\r\n    setProducts,\r\n    currentPage,\r\n    setCurrentPage,\r\n    pageSize,\r\n    setPageSize,\r\n    sortBy,\r\n    setSortBy,\r\n    numberOfTotalPages,\r\n    direction,\r\n    setDirection,\r\n    minPriceFilter,\r\n    setMinPriceFilter,\r\n    maxPriceFilter,\r\n    setMaxPriceFilter,\r\n  ] = useContext(ProductContext);\r\n\r\n  //Array to show page numbers on pagination and change current page\r\n  const [pageNumberArray, setPageNumberArray] = useState([]);\r\n\r\n  //last page on pagination dashboard to update pageNumberArray when necessary\r\n  const [endOfPageSet, setEndOfPageSet] = useState(4);\r\n  if (currentPage > endOfPageSet) {\r\n    setEndOfPageSet((prev) => prev + 5);\r\n  }\r\n\r\n  if (currentPage < endOfPageSet - 4) {\r\n    setEndOfPageSet((prev) => prev - 5);\r\n  }\r\n\r\n  useEffect(() => {\r\n    var arr = [];\r\n    //If pressing prev and first element of pageNumberArray is bigger than or equal to current page number,\r\n    //load previous pages\r\n    if (endOfPageSet === currentPage && pageNumberArray[0] >= currentPage) {\r\n      for (\r\n        let index = endOfPageSet;\r\n        index >= endOfPageSet - 5 && index >= 0;\r\n        index--\r\n      ) {\r\n        arr.unshift(index);\r\n      }\r\n    } else if (\r\n      //If last page button is pressed\r\n      currentPage === numberOfTotalPages - 1 &&\r\n      pageNumberArray[pageNumberArray.length - 1] != currentPage\r\n    ) {\r\n      for (\r\n        let index = numberOfTotalPages - 1;\r\n        index >= endOfPageSet - 5 && index >= 0;\r\n        index--\r\n      ) {\r\n        arr.unshift(index);\r\n      }\r\n    } else {\r\n      for (\r\n        let index = currentPage;\r\n        index <= endOfPageSet && index < numberOfTotalPages;\r\n        index++\r\n      ) {\r\n        arr.push(index);\r\n      }\r\n    }\r\n    setPageNumberArray(arr);\r\n  }, [endOfPageSet, numberOfTotalPages]);\r\n\r\n  const [hoverArr, setHoverArr] = useState([]);\r\n\r\n  /**\r\n   * Create an array as same size as product array and set hovered to false\r\n   */\r\n  useEffect(() => {\r\n    var arry = [];\r\n    products.forEach((product) => {\r\n      arry.push(false);\r\n    });\r\n    setHoverArr((prev) => [...arry]);\r\n  }, [products]);\r\n\r\n  function mouseEntered(index) {\r\n    setHoverArr((prev) => [...prev, (prev[index] = true)]);\r\n  }\r\n\r\n  function mouseLeaved(index) {\r\n    setHoverArr((prev) => [...prev, (prev[index] = false)]);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-3 col-12 \">\r\n          <FilterBar />\r\n        </div>\r\n        <div className=\"col-md-9 col-12\">\r\n          <div className=\"row \">\r\n            {products.map((item, index) => {\r\n              return (\r\n                <div\r\n                  className={\r\n                    hoverArr[index]\r\n                      ? \"col-md-5 col-lg-2 col-12 justify-content-center p-2 m-2 position-relative border border-primary rounded-3 overflow-hidden\"\r\n                      : \"col-md-5 col-lg-2 col-12 justify-content-center p-2 m-2 position-relative border border-light rounded-3 overflow-hidden\"\r\n                  }\r\n                  key={item.itemId}\r\n                  onMouseEnter={(e) => mouseEntered(index)}\r\n                  onMouseLeave={(e) => mouseLeaved(index)}\r\n                >\r\n                  <ProductCoverImage itemId={item.itemId} />\r\n                  <div>\r\n                    <ItemRating\r\n                      itemId={item.itemId}\r\n                      showNumberOfRaters={false}\r\n                    />{\" \"}\r\n                  </div>\r\n                  <div className=\"text-secondary fs-4 mt-2\">\r\n                    ${item.itemPrice}\r\n                  </div>\r\n                  <p className=\"text-secondary fs-3 fw-normal\">\r\n                    {item.itemName}\r\n                  </p>\r\n                  <Link\r\n                    to={`/product-details/${item.itemId}`}\r\n                    className=\"stretched-link\"\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"row fixed-bottom\">\r\n            <div className=\"col \">\r\n              <nav aria-label=\"Page navigation example\">\r\n                <ul className=\"pagination justify-content-center\">\r\n                  <li\r\n                    className={\r\n                      currentPage === 0 ? \"page-item disabled\" : \"page-item\"\r\n                    }\r\n                  >\r\n                    <Link\r\n                      className=\"page-link\"\r\n                      to=\"#\"\r\n                      tabIndex=\"-1\"\r\n                      aria-disabled=\"true\"\r\n                      onClick={(e) => {\r\n                        if (currentPage > 0) {\r\n                          setCurrentPage((prev) => prev - 1);\r\n                        }\r\n                      }}\r\n                    >\r\n                      Previous\r\n                    </Link>\r\n                  </li>\r\n\r\n                  <li\r\n                    hidden={currentPage < 5 ? true : false}\r\n                    className=\"page-item\"\r\n                  >\r\n                    <Link\r\n                      className=\"page-link\"\r\n                      to=\"#\"\r\n                      onClick={(e) => {\r\n                        setCurrentPage(0);\r\n                      }}\r\n                    >\r\n                      1...\r\n                    </Link>\r\n                  </li>\r\n\r\n                  {pageNumberArray.map((pageNum) => {\r\n                    return (\r\n                      <li\r\n                        key={pageNum}\r\n                        className={\r\n                          currentPage === pageNum\r\n                            ? \"page-item active\"\r\n                            : \"page-item\"\r\n                        }\r\n                      >\r\n                        <Link\r\n                          className=\"page-link\"\r\n                          to=\"#\"\r\n                          onClick={(e) => {\r\n                            setCurrentPage(pageNum);\r\n                          }}\r\n                        >\r\n                          {pageNum + 1}\r\n                        </Link>\r\n                      </li>\r\n                    );\r\n                  })}\r\n\r\n                  <li\r\n                    hidden={\r\n                      numberOfTotalPages < 5 ||\r\n                      currentPage === numberOfTotalPages - 1 ||\r\n                      endOfPageSet >= numberOfTotalPages - 1\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    className=\"page-item\"\r\n                  >\r\n                    <Link\r\n                      className=\"page-link\"\r\n                      to=\"#\"\r\n                      onClick={(e) => {\r\n                        setCurrentPage(numberOfTotalPages - 1);\r\n                      }}\r\n                    >\r\n                      ...{numberOfTotalPages}\r\n                    </Link>\r\n                  </li>\r\n                  <li\r\n                    className={\r\n                      currentPage === numberOfTotalPages - 1\r\n                        ? \"page-item disabled\"\r\n                        : \"page-item\"\r\n                    }\r\n                  >\r\n                    <Link\r\n                      className=\"page-link\"\r\n                      to=\"#\"\r\n                      onClick={(e) => {\r\n                        if (currentPage < numberOfTotalPages - 1) {\r\n                          setCurrentPage((prev) => prev + 1);\r\n                        }\r\n                      }}\r\n                    >\r\n                      Next\r\n                    </Link>\r\n                  </li>\r\n                </ul>\r\n              </nav>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/ProductSource/AddProduct.js",["220","221","222","223"],"import { useState, useContext, useMemo } from \"react\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport axios from \"axios\";\r\nimport { UploadProductImage } from \"../Images/UploadProductImage\";\r\nimport { CustomerProfileContext } from \"../Contexts/CustomerProfileContext\";\r\n\r\nexport const AddProduct = (props) => {\r\n  const server = useContext(ServerContext);\r\n  const [itemName, setItemName] = useState(\"\");\r\n  const [itemPrice, setItemPrice] = useState(\"0.0\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [inStock, setInStock] = useState(0);\r\n  const [featured, setFeatured] = useState(false);\r\n\r\n  const [validated, setValidated] = useState(false);\r\n\r\n  const [newItemSaved, setNewItemSaved] = useState([]);\r\n\r\n  const [\r\n    customerProfile,\r\n    userProfile,\r\n    setCustomerProfile,\r\n    setUserProfile,\r\n  ] = useContext(CustomerProfileContext);\r\n\r\n  const handleSubmit = (event) => {\r\n    const form = event.currentTarget;\r\n\r\n    event.preventDefault();\r\n    if (form.checkValidity() === false) {\r\n    } else {\r\n      sendToServer(newItem);\r\n    }\r\n    setValidated((prev) => true);\r\n  };\r\n\r\n  const newItem = {\r\n    itemPrice: itemPrice,\r\n    itemName: itemName,\r\n    itemCategory: category,\r\n    itemFeatured: featured,\r\n    itemLeftInStock: inStock,\r\n  };\r\n\r\n  const [itemSaving, setItemSaving] = useState([]);\r\n\r\n  const sendToServer = (product) => {\r\n    axios\r\n      .post(`${server}/items/addItem/${customerProfile.customerId}`, newItem, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: localStorage.getItem(\"TokenJWT\"),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(\"item sent to server\");\r\n        console.log(response.data);\r\n        setItemSaving(response.data);\r\n        setNewItemSaved((prev) => [...prev, 1]);\r\n        window.alert(\"Item saved!\");\r\n        props.history.push(\"/\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        window.alert(\"An error occured!!\");\r\n      });\r\n  };\r\n\r\n  /*const savedItem = useMemo(() => {\r\n    console.log(itemSaving);\r\n    return itemSaving;\r\n  }, [itemSaving]);\r\n*/\r\n  const validateForm = () => {\r\n    return (\r\n      itemName.length > 0 && itemPrice > 0 && category.length > 0 && inStock > 0\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"container pt-5\">\r\n      <div className=\"row justify-content-center\">\r\n        <form\r\n          className=\"col-6 g-3 needs-validation\"\r\n          noValidate\r\n          validated={validated}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          <div className=\"col-7\">\r\n            <label for=\"itemname\" className=\"form-label\">\r\n              Product Name\r\n            </label>\r\n            <input\r\n              autoFocus\r\n              className=\"form-control\"\r\n              id=\"itemname\"\r\n              type=\"text\"\r\n              value={itemName}\r\n              onChange={(e) => setItemName(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"col-7\">\r\n            <label for=\"itemprice\" className=\"form-label\">\r\n              Product Price\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"itemprice\"\r\n              type=\"text\"\r\n              onChange={(e) => setItemPrice(parseFloat(e.target.value))}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"col-7\">\r\n            <label for=\"itemcategory\" className=\"form-label\">\r\n              Product Category\r\n            </label>\r\n            <input\r\n              id=\"itemcategory\"\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              value={category}\r\n              onChange={(e) => setCategory(e.target.value)}\r\n              required\r\n            />\r\n\r\n            <div className=\"col-7\">\r\n              <label for=\"itemnuminstock\" className=\"form-label\">\r\n                Number of Product in Stock\r\n              </label>\r\n              <input\r\n                id=\"itemnuminstock\"\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                value={inStock}\r\n                onChange={(e) => {\r\n                  setInStock(e.target.value);\r\n                }}\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <div className=\"form-check\">\r\n              <label for=\"itemfeatured\" className=\"from-check-label\">\r\n                Product Featured\r\n              </label>\r\n              <input\r\n                className=\"form-check-input\"\r\n                id=\"itemfeatured\"\r\n                type=\"checkbox\"\r\n                value={featured}\r\n                onChange={(e) => setFeatured((prev) => !prev)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <button\r\n              className=\"btn btn-primary p-2\"\r\n              type=\"submit\"\r\n              disabled={!validateForm()}\r\n            >\r\n              Add Product\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <div className=\"col-4 my-auto\">\r\n          <UploadProductImage\r\n            itemId={itemSaving.itemId}\r\n            newItemSaved={newItemSaved}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/ProductSource/ProductDetails.js",["224","225","226","227","228","229","230","231","232","233"],"import { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Images } from \"../Images/Image\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport { CartContext } from \"../Contexts/CartContext\";\r\nimport { ProductContext } from \"../Contexts/ProductContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Reviews } from \"../Review/Reviews\";\r\nimport { ItemRating } from \"../Components/ItemRating\";\r\n\r\nexport const ProductDetails = (props) => {\r\n  const [itemDetails, setItemDetails] = useState([]);\r\n  const server = useContext(ServerContext);\r\n  const [cart, setCart, savedCart] = useContext(CartContext);\r\n\r\n  const [\r\n    products,\r\n    setProducts,\r\n    currentPage,\r\n    setCurrentPage,\r\n    pageSize,\r\n    setPageSize,\r\n    sortBy,\r\n    setSortBy,\r\n    numberOfTotalPages,\r\n  ] = useContext(ProductContext);\r\n\r\n  const [itemAmount, setItemAmount] = useState(1);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${server}/itemDetails/getItemDetails/${props.match.params.itemId}`)\r\n      .then((res) => {\r\n        setItemDetails(res.data.itemDetailsList);\r\n      });\r\n  }, [props.match.params.itemId]);\r\n\r\n  const item = products.find(\r\n    (item) => item.itemId === parseInt(props.match.params.itemId)\r\n  );\r\n\r\n  function handleAddToCart() {\r\n    const indexOfItem = cart.findIndex((order) => {\r\n      return order.itemId === item.itemId;\r\n    });\r\n\r\n    if (indexOfItem > -1) {\r\n      cart[indexOfItem].itemAmount =\r\n        parseInt(cart[indexOfItem].itemAmount) + itemAmount;\r\n      savedCart.current = cart;\r\n    } else {\r\n      savedCart.current = [\r\n        ...savedCart.current,\r\n        { itemId: item.itemId, itemAmount: itemAmount },\r\n      ];\r\n    }\r\n    localStorage.setItem(\"cartcontent\", JSON.stringify(savedCart.current));\r\n    console.log(savedCart.current);\r\n\r\n    setCart([...savedCart.current]);\r\n    props.history.push(\"/cart\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-4 col-md-5 col-sm-8 m-4\">\r\n          <Images itemId={props.match.params.itemId} />\r\n        </div>\r\n        <div className=\"col-md-5 mt-2\">\r\n          <ItemRating\r\n            itemId={props.match.params.itemId}\r\n            showNumberOfRaters={true}\r\n          />\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">Properties</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {itemDetails\r\n                ? itemDetails.map((item, index) => {\r\n                    return (\r\n                      <tr className=\"col\" key={index}>\r\n                        <td className=\"col-md-3 col-sm-5\">{item.nameOf}</td>\r\n                        <td className=\"col-md-3 col-sm-5\">\r\n                          {\" : \" + item.valueOf}\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })\r\n                : null}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div className=\"col-md-2 mt-2\">\r\n          <p className=\"fs-2\">$ {item ? item.itemPrice : null}</p>\r\n\r\n          <label className=\"form-label me-2\" for=\"selectqty\">\r\n            Quantity:\r\n          </label>\r\n          <select\r\n            id=\"selectqty\"\r\n            value={itemAmount}\r\n            onChange={(e) => setItemAmount(parseInt(e.target.value))}\r\n          >\r\n            <option selected value=\"1\">\r\n              1\r\n            </option>\r\n            <option selected value=\"2\">\r\n              2\r\n            </option>\r\n            <option selected value=\"3\">\r\n              3\r\n            </option>\r\n            <option selected value=\"4\">\r\n              4\r\n            </option>\r\n            <option selected value=\"5\">\r\n              5\r\n            </option>\r\n          </select>\r\n\r\n          <button className=\"btn btn-primary\" onClick={handleAddToCart}>\r\n            Add to Cart\r\n          </button>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <Reviews itemId={props.match.params.itemId} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n/*\r\n{Object.keys(itemDetails).map((currentKey, index) => {\r\n    return (\r\n      <tr className=\"col\" key={index}>\r\n        <td className=\"col-md-3 col-sm-5\">{currentKey} :</td>\r\n        <td className=\"col-md-3 col-sm-5\">\r\n          {itemDetails[currentKey]}\r\n        </td>\r\n      </tr>\r\n    );\r\n  })}\r\n  */\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/Auth/Login.js",[],"/media/ogn/Multimedia/ReactPrjs/front-end/src/Auth/PasswordResetRequest.js",[],"/media/ogn/Multimedia/ReactPrjs/front-end/src/Auth/PasswordReset.js",["234"],"import { useState, useRef, useContext, useEffect } from \"react\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport axios from \"axios\";\r\n\r\nexport const PasswordReset = (props) => {\r\n  const server = useContext(ServerContext);\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [newPasswordConfirm, setNewPasswordConfirm] = useState(\"\");\r\n  const [linkValid, setLinkValid] = useState(false);\r\n  const showErr = useRef();\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `${server}/auth/passwordReset/checkLinkValidity/${props.match.params.uuid}`\r\n      )\r\n      .then((res) => {\r\n        console.log(res);\r\n        setLinkValid(true);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setLinkValid(false);\r\n      });\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    axios\r\n      .post(\r\n        `${server}/auth/resetPasswordByLink/${props.match.params.uuid}`,\r\n        newPassword,\r\n        { headers: { \"Content-Type\": \"application/json\" } }\r\n      )\r\n      .then((res) => console.log(\"reset successful! \" + res.data))\r\n      .catch((err) => console.log(\"Reset fail!\" + err));\r\n  };\r\n\r\n  if (!linkValid) {\r\n    return <p>Link invalid!</p>;\r\n  }\r\n\r\n  function validateForm() {\r\n    if (showErr.current) {\r\n      if (newPassword.length < 6) {\r\n        showErr.current.className =\r\n          \"col-5 alert alert-danger mx-auto fw-normal fs-3 text-dark text-center\";\r\n      } else {\r\n        showErr.current.className = \"visually-hidden\";\r\n      }\r\n    }\r\n    return newPassword.length > 5 && newPassword === newPasswordConfirm;\r\n  }\r\n  return (\r\n    <div className=\"container mt-5 \">\r\n      <div ref={showErr} className=\"visually-hidden\" role=\"alert\">\r\n        Password must be 6 caharacters or longer!\r\n      </div>\r\n      <form className=\"g-3 needs-validation \" onSubmit={handleSubmit}>\r\n        <div className=\"row \">\r\n          <div className=\"col-md-4 mx-auto\">\r\n            <label className=\"form-label\" for=\"passw\">\r\n              Enter new password:\r\n            </label>\r\n            <input\r\n              autoFocus\r\n              id=\"passw\"\r\n              className=\"form-control\"\r\n              type=\"password\"\r\n              value={newPassword}\r\n              onChange={(e) => setNewPassword(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4 mx-auto\">\r\n            <label className=\"form-label\" for=\"passwd\">\r\n              Enter password again:\r\n            </label>\r\n            <input\r\n              id=\"passwd\"\r\n              className=\"form-control\"\r\n              type=\"password\"\r\n              value={newPasswordConfirm}\r\n              onChange={(e) => setNewPasswordConfirm(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row clearfix\">\r\n          <div className=\"col-md-4 mx-auto mt-2 float-star\">\r\n            <button\r\n              className=\"btn btn-primary px-5\"\r\n              type=\"submit\"\r\n              disabled={!validateForm()}\r\n            >\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/SignUp/CustomerSignUp.js",[],"/media/ogn/Multimedia/ReactPrjs/front-end/src/Components/Navbar.js",["235","236","237","238"],"import axios from \"axios\";\r\nimport React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport { LoginSuccessContext } from \"../Contexts/LoginSuccessContext\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport { CartContext } from \"../Contexts/CartContext\";\r\nimport \"./navbar.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CustomerProfileContext } from \"../Contexts/CustomerProfileContext\";\r\n\r\nexport const NavBar = () => {\r\n  const [loggedIn] = useContext(LoginSuccessContext);\r\n  const [searchWord, setSearchWord] = useState();\r\n  const server = useContext(ServerContext);\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [cart] = useContext(CartContext);\r\n  const [\r\n    customerProfile,\r\n    userProfile,\r\n    setCustomerProfile,\r\n    setUserProfile,\r\n  ] = useContext(CustomerProfileContext);\r\n  const dropdownList = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!searchWord) {\r\n      setSearchResult([]);\r\n    }\r\n\r\n    if (searchWord) {\r\n      SearchTyped(searchWord);\r\n    }\r\n  }, [searchWord]);\r\n\r\n  const SearchTyped = (word) => {\r\n    axios\r\n      .get(`${server}/items/searchItems/${word}`)\r\n      .then((res) => {\r\n        setSearchResult(res.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <div className=\"container-fluid\">\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarTogglerDemo03\"\r\n          aria-controls=\"navbarTogglerDemo03\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          Home\r\n        </Link>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo03\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li\r\n              hidden={\r\n                userProfile.userRoles &&\r\n                userProfile.userRoles.indexOf(\"ADMIN\") > -1\r\n                  ? true\r\n                  : false\r\n              }\r\n              className=\"nav-item\"\r\n            >\r\n              <Link className=\"nav-link text-dark\" to=\"/orders\">\r\n                Orders\r\n              </Link>\r\n            </li>\r\n            <li\r\n              hidden={\r\n                !userProfile.userRoles ||\r\n                (userProfile.userRoles &&\r\n                  userProfile.userRoles.indexOf(\"ADMIN\") < 0)\r\n                  ? true\r\n                  : false\r\n              }\r\n              className=\"nav-item\"\r\n            >\r\n              <Link className=\"nav-link text-dark\" to=\"/manage-products\">\r\n                Manage Products\r\n              </Link>\r\n            </li>\r\n\r\n            <li hidden={loggedIn ? false : true} className=\"nav-item\">\r\n              <Link className=\"nav-link text-dark\" to=\"/chat/-1\">\r\n                Messages\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n\r\n          <div className=\"dropdown\">\r\n            <form className=\"d-flex\">\r\n              <input\r\n                style={{ width: \"30rem\" }}\r\n                className=\"form-control me-2\"\r\n                value={searchWord}\r\n                onChange={(e) => {\r\n                  setSearchWord(e.target.value);\r\n                }}\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n                data-bs-toggle=\"dropdown\"\r\n              />\r\n\r\n              <button\r\n                className=\"btn btn-outline-success\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"dropdown\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                Search\r\n              </button>\r\n\r\n              <ul\r\n                ref={dropdownList}\r\n                style={searchResult.length < 1 ? { display: \"none\" } : null}\r\n                className=\"dropdown-menu\"\r\n              >\r\n                {searchResult\r\n                  ? searchResult.map((item) => {\r\n                      return (\r\n                        <li key={item.itemId}>\r\n                          <Link\r\n                            className=\"dropdown-item\"\r\n                            to={`/product-details/${item.itemId}`}\r\n                          >\r\n                            {item.itemName}\r\n                          </Link>\r\n                        </li>\r\n                      );\r\n                    })\r\n                  : null}\r\n              </ul>\r\n            </form>\r\n          </div>\r\n\r\n          {loggedIn ? (\r\n            <Link className=\"nav-link text-dark\" to=\"/profile\">\r\n              Your Profile\r\n            </Link>\r\n          ) : (\r\n            <Link className=\"nav-link text-dark\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          )}\r\n\r\n          <Link\r\n            hidden={\r\n              userProfile.userRoles &&\r\n              userProfile.userRoles.indexOf(\"ADMIN\") > -1\r\n                ? true\r\n                : false\r\n            }\r\n            className=\"nav-link text-dark btn btn-primary position-relative me-2\"\r\n            to=\"/cart\"\r\n          >\r\n            Cart{\" \"}\r\n            <span className=\"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-secondary\">\r\n              {cart.length}{\" \"}\r\n              <span className=\"visually-hidden\">unread messages</span>\r\n            </span>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/Images/EditPictures.js",["239","240","241","242"],"import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport { UploadProductImage } from \"./UploadProductImage\";\r\n\r\nexport const EditPictures = (props) => {\r\n  const [picPath, setPicPath] = useState([]);\r\n  const server = useContext(ServerContext);\r\n  const [triggerReRender, setTriggerReRender] = useState([]);\r\n\r\n  const savePics = useRef([]);\r\n\r\n  useEffect(() => {\r\n    FetchPath();\r\n  }, [triggerReRender]);\r\n\r\n  const [picMap, setPicMap] = useState([]);\r\n  const [addPic, setAddPic] = useState([]);\r\n\r\n  const FetchPath = () => {\r\n    //Method returns a list of path locations for a particular item.\r\n    if (props.match.params.itemId) {\r\n      axios\r\n        .get(\r\n          `${server}/items/getItemFileLocations/${props.match.params.itemId}`\r\n        )\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          setPicPath(res.data.pathList);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (picPath) {\r\n      setPicMap([]);\r\n      savePics.current = [];\r\n      picPath.map((path) => {\r\n        const src = `${server}/storage/getItemFiles/${props.match.params.itemId}/${path}`;\r\n        var imageToLoad = new Image();\r\n        imageToLoad.src = src;\r\n        imageToLoad.onload = () => {\r\n          if (savePics.current.findIndex((picc) => picc.path == path) < 0) {\r\n            savePics.current = [\r\n              ...savePics.current,\r\n              {\r\n                itemId: props.match.params.itemId,\r\n                path: path,\r\n                image: imageToLoad,\r\n              },\r\n            ];\r\n            let setArr = new Set(savePics.current);\r\n            setPicMap([...setArr]);\r\n          }\r\n        };\r\n      });\r\n    }\r\n  }, [picPath]);\r\n\r\n  console.log(picMap);\r\n\r\n  function handleDeletePic(itemId, path) {\r\n    axios\r\n      .delete(`${server}/storage/deleteItemFiles/${itemId}/${path}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        setPicMap((prev) => prev.filter((pic) => pic.path !== path));\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  function handleAddPics() {\r\n    setAddPic((prev) => [...prev, 1]);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-8\">\r\n          <div className=\"row\">\r\n            {picMap.map((pic, index) => {\r\n              return (\r\n                <div className=\"col-4\" key={index}>\r\n                  <div className=\"card\">\r\n                    <div className=\"img-container\">\r\n                      <img\r\n                        alt=\"Product\"\r\n                        className=\"card-img-top\"\r\n                        src={pic.image.src}\r\n                      />\r\n                      <button\r\n                        className=\"btn btn-primary\"\r\n                        type=\"button\"\r\n                        onClick={(e) => handleDeletePic(pic.itemId, pic.path)}\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"col-4 my-auto\">\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <UploadProductImage\r\n                itemId={props.match.params.itemId}\r\n                newItemSaved={addPic}\r\n                rerender={setTriggerReRender}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row \">\r\n            <div className=\"col\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                type=\"button\"\r\n                onClick={(e) => handleAddPics()}\r\n              >\r\n                Save Pictures\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/Profile/CustomerProfile.js",["243","244","245","246","247","248","249","250","251","252","253","254","255"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport { LoginSuccessContext } from \"../Contexts/LoginSuccessContext\";\r\nimport { CustomerProfileContext } from \"../Contexts/CustomerProfileContext\";\r\nimport { CartContext } from \"../Contexts/CartContext\";\r\nimport { ChatContext } from \"../Contexts/ChatContext\";\r\nimport { Client } from \"@stomp/stompjs\";\r\n\r\nexport const CustomerProfile = (props) => {\r\n  const server = useContext(ServerContext);\r\n  const [\r\n    loggedIn,\r\n    setLoggedIn,\r\n    customerFK,\r\n    setCustomerFK,\r\n    loginWithJWTSuccess,\r\n    setLoginWithJWTSuccess,\r\n  ] = useContext(LoginSuccessContext);\r\n  const [\r\n    customerProfile,\r\n    userProfile,\r\n    setCustomerProfile,\r\n    setUserProfile,\r\n  ] = useContext(CustomerProfileContext);\r\n\r\n  const [\r\n    cart,\r\n    setCart,\r\n    savedCart,\r\n    cartOrderItems,\r\n    setCartOrderItems,\r\n    firstFetchDone,\r\n    setFirstFetchDone,\r\n  ] = useContext(CartContext);\r\n\r\n  const [\r\n    connected,\r\n    subscribedTopics,\r\n    chat,\r\n    setChat,\r\n    client,\r\n    arr,\r\n    setConnected,\r\n    chatIndex,\r\n    setChatIndex,\r\n    ,\r\n    setSubscribedTopics,\r\n  ] = useContext(ChatContext);\r\n\r\n  function handleLogout() {\r\n    localStorage.removeItem(\"TokenJWT\");\r\n    localStorage.removeItem(\"cartcontent\");\r\n    savedCart.current = [];\r\n    setCustomerProfile([]);\r\n    setUserProfile([]);\r\n    setCart([]);\r\n    setCartOrderItems([]);\r\n    client.current = new Client();\r\n    setConnected(false);\r\n    setChatIndex(-1);\r\n    arr.current = [];\r\n    setChat([]);\r\n    setSubscribedTopics([]);\r\n    setCustomerFK(null);\r\n    setFirstFetchDone(false);\r\n    setLoggedIn(false);\r\n    setLoginWithJWTSuccess(false);\r\n\r\n    props.history.push(\"/\");\r\n  }\r\n  console.log(\"render profile\");\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"row row-cols-1 \">\r\n        <div className=\"col \">\r\n          <p id=\"customerName\">Name: {customerProfile.customerName}</p>\r\n        </div>\r\n        <div className=\"col\">\r\n          <p id=\"eMail\">E-Mail: {customerProfile.customerEMail}</p>\r\n        </div>\r\n        <div className=\"col\">\r\n          <p id=\"username\">User Name: {userProfile.userName}</p>\r\n        </div>\r\n        <div className=\"col\">\r\n          <p id=\"role\">User Type: {userProfile.userRoles}</p>\r\n        </div>\r\n        <div className=\"col\">\r\n          <a className=\"btn btn-primary\" href=\"/edit-profile\" role=\"button\">\r\n            Edit\r\n          </a>\r\n          <button\r\n            className=\"btn btn-primary ms-2\"\r\n            onClick={(e) => handleLogout()}\r\n            type=\"button\"\r\n          >\r\n            Logout\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/Images/Image.js",["256","257","258","259"],"/media/ogn/Multimedia/ReactPrjs/front-end/src/Profile/EditCustomerProfile.js",["260","261"],"import React, { useState, useContext, useEffect, useRef } from \"react\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport { LoginSuccessContext } from \"../Contexts/LoginSuccessContext\";\r\nimport { CustomerProfileContext } from \"../Contexts/CustomerProfileContext\";\r\nimport axios from \"axios\";\r\nimport EditSuccessModal from \"./EditSuccessModal\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const EditCustomerProfile = (props) => {\r\n  const server = useContext(ServerContext);\r\n  const [loggedIn, setLoggedIn] = useContext(LoginSuccessContext);\r\n  const [\r\n    customerProfile,\r\n    userProfile,\r\n    setCustomerProfile,\r\n    setUserProfile,\r\n  ] = useContext(CustomerProfileContext);\r\n\r\n  const [name, setName] = useState();\r\n  const [email, setEMail] = useState();\r\n  const [username, setUserName] = useState();\r\n\r\n  const [editProfileSuccess, setEditProfileSuccess] = useState(false);\r\n  const [editUserSuccess, setEditUserSuccess] = useState(false);\r\n\r\n  const userNameRef = useRef();\r\n\r\n  useEffect(() => {\r\n    setName(customerProfile.customerName);\r\n    setEMail(customerProfile.customerEMail);\r\n    setUserName(userProfile.userName);\r\n  }, [customerProfile, userProfile]);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    var currentUserName = userProfile.userName;\r\n    const uProfile = {\r\n      userId: userProfile.userId,\r\n      userName: username,\r\n      userEMail: email,\r\n      customerFK: userProfile.customerFK,\r\n    };\r\n\r\n    var cProfile = customerProfile;\r\n    cProfile.customerEMail = email;\r\n    cProfile.customerName = name;\r\n\r\n    //var cProfile = [...customerProfile];\r\n    console.log(uProfile);\r\n    console.log(cProfile);\r\n\r\n    if (uProfile.userName !== currentUserName) {\r\n      axios\r\n        .post(`${server}/auth/updateUserReact`, uProfile, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: localStorage.getItem(\"TokenJWT\"),\r\n          },\r\n        })\r\n        .then((res) => {\r\n          console.log(\"User updated: \" + res);\r\n          localStorage.removeItem(\"TokenJWT\");\r\n          setLoggedIn(false);\r\n\r\n          setEditUserSuccess(true);\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"User update failed : \" + err);\r\n          userNameRef.current.className =\r\n            \"col-6 alert alert-danger mx-auto fw-normal fs-3 my-2 text-dark text-center\";\r\n          setEditUserSuccess(false);\r\n        });\r\n    } else {\r\n      console.log(\"values equal\");\r\n      setEditUserSuccess(true);\r\n    }\r\n\r\n    axios\r\n      .post(`${server}/customer/save`, cProfile, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: localStorage.getItem(\"TokenJWT\"),\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(\"Customer updated: \" + res);\r\n        setEditProfileSuccess(true);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Customer update failed : \" + err);\r\n      });\r\n  }\r\n\r\n  if (editUserSuccess && editProfileSuccess && loggedIn) {\r\n    props.history.push(\"/profile\");\r\n  }\r\n\r\n  //Customer name changed and logged out, new login required\r\n  if (editUserSuccess && editProfileSuccess && !loggedIn) {\r\n    // setCustomerProfile();\r\n    return <EditSuccessModal isModalOpen={true} history={props.history} />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <form noValidate onSubmit={handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col col-lg-6 col-md-8 col-sm-10 mx-auto\">\r\n            <label className=\"form-label\">Name</label>\r\n            <input\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col col-lg-6 col-md-8 col-sm-10 mx-auto\">\r\n            <label className=\"form-label\">E-Mail</label>\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEMail(e.target.value)}\r\n              className=\"form-control\"\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col col-lg-6 col-md-8 col-sm-10 mx-auto\">\r\n            <label className=\"form-label\">User Name</label>\r\n            <input\r\n              type=\"text\"\r\n              value={username}\r\n              onChange={(e) => setUserName(e.target.value)}\r\n              className=\"form-control\"\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <div ref={userNameRef} className=\"visually-hidden\" role=\"alert\">\r\n          User Name already exists! Select another one!\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col col-lg-6 col-md-8 col-sm-10 mx-auto mt-3\">\r\n            <button className=\"btn btn-primary\" type=\"submit\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col col-lg-6 col-md-8 col-sm-10 mx-auto mt-3\">\r\n            <Link className=\"btn btn-primary\" to=\"/profile\">\r\n              Cancel\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/Manage/ManageProducts.js",["262"],"import { useState, useContext, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ProductCoverImage } from \"../Images/ProductCoverImage\";\r\nimport { ManagedProductContext } from \"../Contexts/ManagedProductContext\";\r\n\r\nexport const ManageProducts = () => {\r\n  const [myProducts, setMyProducts] = useContext(ManagedProductContext);\r\n\r\n  const [hoverArr, setHoverArr] = useState([]);\r\n\r\n  /**\r\n   * Create an array as same size as product array and set hovered to false\r\n   */\r\n  useEffect(() => {\r\n    var arry = [];\r\n    myProducts.forEach((product) => {\r\n      arry.push(false);\r\n    });\r\n    setHoverArr((prev) => [...arry]);\r\n  }, [myProducts]);\r\n\r\n  function mouseEntered(index) {\r\n    setHoverArr((prev) => [...prev, (prev[index] = true)]);\r\n  }\r\n\r\n  function mouseLeaved(index) {\r\n    setHoverArr((prev) => [...prev, (prev[index] = false)]);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Link\r\n        className=\"btn btn-primary text-dark\"\r\n        aria-current=\"page\"\r\n        to=\"/addProduct\"\r\n      >\r\n        Add Product\r\n      </Link>\r\n\r\n      <div className=\"row \">\r\n        {myProducts.map((item, index) => {\r\n          return (\r\n            <div\r\n              className={\r\n                hoverArr[index]\r\n                  ? \"col-md-5 col-lg-2 col-12 justify-content-center p-2 m-2 position-relative border border-primary rounded-3 overflow-hidden\"\r\n                  : \"col-md-5 col-lg-2 col-12 justify-content-center p-2 m-2 position-relative border border-light rounded-3 overflow-hidden\"\r\n              }\r\n              key={item.itemId}\r\n              onMouseEnter={(e) => mouseEntered(index)}\r\n              onMouseLeave={(e) => mouseLeaved(index)}\r\n            >\r\n              <ProductCoverImage itemId={item.itemId} />\r\n              <div className=\"text-secondary fs-4 mt-2\">${item.itemPrice}</div>\r\n              <p className=\"text-secondary fs-3 fw-normal\">{item.itemName}</p>\r\n              <Link\r\n                to={`/edit-product/${item.itemId}`}\r\n                className=\"stretched-link\"\r\n              />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/Orders/Orders.js",["263","264"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport { CustomerProfileContext } from \"../Contexts/CustomerProfileContext\";\r\nimport { LoginSuccessContext } from \"../Contexts/LoginSuccessContext\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Orders = () => {\r\n  const server = useContext(ServerContext);\r\n  const [customerProfile] = useContext(CustomerProfileContext);\r\n  const [orders, setOrders] = useState([]);\r\n  const [loggedIn, setLoggedIn] = useContext(LoginSuccessContext);\r\n\r\n  useEffect(() => {\r\n    if (loggedIn && customerProfile.customerId) {\r\n      FetchOrders();\r\n    } else {\r\n      setOrders([]);\r\n    }\r\n  }, [customerProfile]);\r\n\r\n  const FetchOrders = () => {\r\n    if (customerProfile) {\r\n      console.log(\"fetching\");\r\n      axios\r\n        .get(`${server}/order/${customerProfile.customerId}/getOrderList`, {\r\n          headers: {\r\n            Authorization: localStorage.getItem(\"TokenJWT\"),\r\n          },\r\n        })\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          setOrders(res.data);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n\r\n  if (!loggedIn) {\r\n    return (\r\n      <div className=\"container\">\r\n        <p>Loing to see your orders!</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (orders.length < 1) {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col mx-auto\">\r\n            <p>You don't have any orders!</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function dateObj(time) {\r\n    const secs = Date.parse(time);\r\n    const date = new Date(secs);\r\n    return date.toLocaleString();\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-3\">\r\n      {orders.map((order) => {\r\n        return (\r\n          <div className=\"row border border-danger my-3\" key={order.orderId}>\r\n            <div className=\"col-6\">\r\n              <p>Order Placed: {dateObj(order.orderTime)}</p>\r\n            </div>\r\n            <div className=\"col-6\">\r\n              <p>Total: $ {order.orderTotal}</p>\r\n            </div>\r\n            <hr />\r\n            <div className=\"col\">\r\n              <div className=\"row\">\r\n                <div className=\"col-2\">\r\n                  <p> Item Name</p>\r\n                </div>\r\n                <div className=\"col-2\">\r\n                  <p>Price</p>\r\n                </div>\r\n                <div className=\"col-2\">\r\n                  <p>Quantity</p>\r\n                </div>\r\n                <div className=\"col-2\">\r\n                  <p>Item id</p>\r\n                </div>\r\n              </div>\r\n\r\n              <hr />\r\n              {order.orderItems.map((orderItem) => {\r\n                return (\r\n                  <div className=\"row\" key={orderItem.orderItemId}>\r\n                    <div className=\"col-2\">\r\n                      <p> {orderItem.orderItemName}</p>\r\n                    </div>\r\n                    <div className=\"col-2\">\r\n                      <p>{orderItem.orderItemPrice}</p>\r\n                    </div>\r\n                    <div className=\"col-2\">\r\n                      <p> {orderItem.orderItemAmountOrdered} </p>\r\n                    </div>\r\n                    <div className=\"col-2\">\r\n                      <p> {orderItem.orderItemItemId}</p>\r\n                    </div>\r\n                    <Link to={`/review-item/${orderItem.orderItemItemId}`}>\r\n                      Write a review\r\n                    </Link>\r\n                    <Link to={`/chat/${orderItem.orderItemOwner}`}>\r\n                      Send Message to the Seller{orderItem.orderItemOwner}\r\n                    </Link>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/Cart/Cart.js",["265","266"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { CartContext } from \"../Contexts/CartContext\";\r\nimport { ProductCoverImage } from \"../Images/ProductCoverImage\";\r\nimport { CustomerProfileContext } from \"../Contexts/CustomerProfileContext\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport axios from \"axios\";\r\nimport { LoginSuccessContext } from \"../Contexts/LoginSuccessContext\";\r\n\r\nexport const Cart = (props) => {\r\n  const [cart, setCart, savedCart, cartOrderItems] = useContext(CartContext);\r\n  const [taxRate, setTaxRate] = useState(10);\r\n  const [customerProfile] = useContext(CustomerProfileContext);\r\n  const server = useContext(ServerContext);\r\n  const [loggedIn] = useContext(LoginSuccessContext);\r\n\r\n  function calculateSubtotal() {\r\n    if (cartOrderItems) {\r\n      const total = cartOrderItems.reduce((acc, orderitem) => {\r\n        return (\r\n          acc + orderitem.orderItemPrice * orderitem.orderItemAmountOrdered\r\n        );\r\n      }, 0);\r\n      return total;\r\n    }\r\n  }\r\n\r\n  function calculateTotal() {\r\n    var subtotal = calculateSubtotal();\r\n    return subtotal + subtotal * (taxRate / 100);\r\n  }\r\n\r\n  function handleRemove(itemId) {\r\n    savedCart.current = savedCart.current.filter(\r\n      (order) => order.itemId !== itemId\r\n    );\r\n    localStorage.setItem(\"cartcontent\", JSON.stringify(savedCart.current));\r\n    setCart(savedCart.current);\r\n  }\r\n\r\n  function handlePlaceOrder() {\r\n    if (!loggedIn) {\r\n      props.history.push(\"/login\");\r\n    } else {\r\n      if (customerProfile && cart) {\r\n        console.log(cart);\r\n        axios\r\n          .post(\r\n            `${server}/order/${customerProfile.customerId}/placeOrder`,\r\n            { orderContentList: cart },\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: localStorage.getItem(\"TokenJWT\"),\r\n              },\r\n            }\r\n          )\r\n          .then((res) => {\r\n            console.log(res);\r\n            savedCart.current = null;\r\n            localStorage.removeItem(\"cartcontent\");\r\n            setCart([]);\r\n            props.history.push(\"/orders\");\r\n          })\r\n          .catch((err) => console.log(err));\r\n      }\r\n    }\r\n  }\r\n\r\n  /*\r\n\"orderItemAmountOrdered\":4,\r\n\"orderItemItemId\":75,\r\n\"orderItemPrice\":12.34,\r\n\"orderItemName\":\"PR3\",\r\n\r\n\r\n*/\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row my-2\">\r\n        <div className=\"col-4\"></div>\r\n        <div className=\"col-3\"></div>\r\n        <div className=\"col-3\">\r\n          <span>Price</span>\r\n        </div>\r\n        <hr />\r\n      </div>\r\n      {cartOrderItems.map((orderitem) => {\r\n        return (\r\n          <div className=\"row\" key={orderitem.orderItemItemId}>\r\n            <div className=\"col-4\">\r\n              <ProductCoverImage itemId={orderitem.orderItemItemId} />\r\n            </div>\r\n            <div className=\"col-3 my-auto\">\r\n              Quantity: {orderitem.orderItemAmountOrdered}\r\n            </div>\r\n            <div className=\"col-3 my-auto\">\r\n              <span>{orderitem.orderItemPrice}</span>\r\n            </div>\r\n            <div className=\"col-1 my-auto\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={(e) => handleRemove(orderitem.orderItemItemId)}\r\n              >\r\n                Remove\r\n              </button>\r\n            </div>\r\n            <hr className=\"my-3\" />\r\n          </div>\r\n        );\r\n      })}\r\n      <div className=\"row\">\r\n        <div className=\"col-4\"></div>\r\n        <div className=\"col-3\"></div>\r\n        <div className=\"col-3\">\r\n          <h4>Subtotal: $ {calculateSubtotal().toFixed(2)}</h4>\r\n          <h4>Tax: $ {(calculateSubtotal() * (taxRate / 100)).toFixed(2)}</h4>\r\n          <h4>Total: $ {calculateTotal().toFixed(2)}</h4>\r\n        </div>\r\n        <div className=\"col-2  my-auto\">\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            type=\"button\"\r\n            onClick={handlePlaceOrder}\r\n            disabled={cartOrderItems.length < 1}\r\n          >\r\n            Place Order\r\n          </button>\r\n        </div>\r\n        <hr />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/Review/WriteReview.js",["267","268","269","270"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport axios from \"axios\";\r\nimport { CustomerProfileContext } from \"../Contexts/CustomerProfileContext\";\r\n\r\nexport const WriteReview = (props) => {\r\n  const [review, setReview] = useState([]);\r\n  const server = useContext(ServerContext);\r\n  const [rating, setRating] = useState();\r\n\r\n  const [\r\n    customerProfile,\r\n    userProfile,\r\n    setCustomerProfile,\r\n    setUserProfile,\r\n  ] = useContext(CustomerProfileContext);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    var itemReview = {\r\n      itemId: props.match.params.itemId,\r\n      reviewOwner: customerProfile.customerId,\r\n      review: review,\r\n      rating: rating,\r\n    };\r\n    console.log(itemReview);\r\n\r\n    axios\r\n      .post(`${server}/itemDetails/saveItemReview`, itemReview, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        window.alert(\"Your review is submitted!\");\r\n        props.history.push(\"/orders\");\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <form class=\"col-8 g-3 mx-auto\" onSubmit={(e) => handleSubmit(e)}>\r\n          <div class=\"mb-3\">\r\n            <label for=\"ratingSelect\" class=\"form-label\">\r\n              Your Rating\r\n            </label>\r\n            <select\r\n              id=\"ratingSelect\"\r\n              value={rating}\r\n              onChange={(e) => setRating(e.target.value)}\r\n              class=\"form-select\"\r\n              aria-label=\"Default select example\"\r\n            >\r\n              <option selected>Rate the product</option>\r\n              <option value=\"1\">One</option>\r\n              <option value=\"2\">Two</option>\r\n              <option value=\"3\">Three</option>\r\n              <option value=\"4\">Four</option>\r\n              <option value=\"5\">Five</option>\r\n            </select>\r\n            <label for=\"exampleFormControlTextarea1\" class=\"form-label\">\r\n              Your Review\r\n            </label>\r\n            <textarea\r\n              class=\"form-control\"\r\n              id=\"exampleFormControlTextarea1\"\r\n              rows=\"5\"\r\n              value={review}\r\n              onChange={(e) => setReview(e.target.value)}\r\n            ></textarea>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <button className=\"btn btn-primary\" type=\"submit\">\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/Manage/EditProduct.js",["271","272","273","274","275","276","277","278","279","280","281","282","283","284"],"import { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Images } from \"../Images/Image\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport { CartContext } from \"../Contexts/CartContext\";\r\nimport { ProductContext } from \"../Contexts/ProductContext\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const EditProduct = (props) => {\r\n  const [itemDetails, setItemDetails] = useState([]);\r\n  const server = useContext(ServerContext);\r\n  const [cart, setCart, savedCart] = useContext(CartContext);\r\n\r\n  const [\r\n    products,\r\n    setProducts,\r\n    currentPage,\r\n    setCurrentPage,\r\n    pageSize,\r\n    setPageSize,\r\n    sortBy,\r\n    setSortBy,\r\n    numberOfTotalPages,\r\n  ] = useContext(ProductContext);\r\n\r\n  const [itemAmount, setItemAmount] = useState(1);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${server}/itemDetails/getItemDetails/${props.match.params.itemId}`)\r\n      .then((res) => {\r\n        setItemDetails(res.data.itemDetailsList);\r\n      });\r\n  }, [props.match.params.itemId]);\r\n\r\n  const item = products.find(\r\n    (item) => item.itemId === parseInt(props.match.params.itemId)\r\n  );\r\n\r\n \r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-4 col-md-5 col-sm-8 m-4\">\r\n          <Images itemId={props.match.params.itemId} />\r\n        </div>\r\n        <div className=\"col-md-5 mt-2\">\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">Properties</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {itemDetails\r\n                ? itemDetails.map((item, index) => {\r\n                    return (\r\n                      <tr className=\"col\" key={index}>\r\n                        <td className=\"col-md-3 col-sm-5\">{item.nameOf}</td>\r\n                        <td className=\"col-md-3 col-sm-5\">\r\n                          {\" : \" + item.valueOf}\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })\r\n                : null}\r\n            </tbody>\r\n          </table>\r\n          <Link\r\n            className=\"btn btn-primary\"\r\n            to={`/edit-product-description/${props.match.params.itemId}`}\r\n          >\r\n            Edit Item Properties\r\n          </Link>\r\n          <Link\r\n            className=\"btn btn-primary ms-5\"\r\n            to={`/edit-pictures/${props.match.params.itemId}`}\r\n          >\r\n            Edit Pictures\r\n          </Link>\r\n        </div>\r\n        <div className=\"col-md-2 mt-2\">\r\n          <p className=\"fs-2\">$ {item ? item.itemPrice : null}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n/*\r\n{Object.keys(itemDetails).map((currentKey, index) => {\r\n    return (\r\n      <tr className=\"col\" key={index}>\r\n        <td className=\"col-md-3 col-sm-5\">{currentKey} :</td>\r\n        <td className=\"col-md-3 col-sm-5\">\r\n          {itemDetails[currentKey]}\r\n        </td>\r\n      </tr>\r\n    );\r\n  })}\r\n  */\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/Chat/Chat.js",["285","286","287","288","289","290"],"/media/ogn/Multimedia/ReactPrjs/front-end/src/Images/ProductCoverImage.js",["291"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport icon from \"../icon/product.svg\";\r\n\r\nexport const ProductCoverImage = (props) => {\r\n  const [path, setPath] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const server = useContext(ServerContext);\r\n\r\n  useEffect(() => {\r\n    FetchPath();\r\n  }, []);\r\n\r\n  const FetchPath = () => {\r\n    axios\r\n      .get(`${server}/items/getItemFileLocations/${props.itemId}`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        if (res.data != null) {\r\n          setPath(res.data.pathList);\r\n          setLoading(false);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  let firstPicPath;\r\n  if (!loading) {\r\n    if (path != null) {\r\n      firstPicPath = path[0];\r\n    }\r\n  }\r\n\r\n  if (!firstPicPath) {\r\n    return (\r\n      <img\r\n        src={icon}\r\n        style={{ height: \"15rem\", width: \"15rem\" }}\r\n        className=\"img-fluid\"\r\n        alt=\"Product\"\r\n      />\r\n    );\r\n  }\r\n\r\n  console.log(\"path:\" + firstPicPath);\r\n  console.log(\"itemid: \" +props.itemId)\r\n\r\n\r\n  return (\r\n    <img\r\n      style={{ height: \"15rem\", width: \"15rem\" }}\r\n      alt=\"Product\"\r\n      className=\"img-fluid\"\r\n      src={`${server}/storage/getItemFiles/${props.itemId}/${firstPicPath}`}\r\n    />\r\n  );\r\n};\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/Images/UploadProductImage.js",["292","293"],"import React, {\r\n  useState,\r\n  useCallback,\r\n  useEffect,\r\n  useRef,\r\n  useContext,\r\n} from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport axios from \"axios\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\n\r\nexport const UploadProductImage = ({ itemId, newItemSaved, rerender }) => {\r\n  //Keep files in memory to between re-renders, access and set files with .current property\r\n  const file = useRef([]);\r\n  //To trigger re-render\r\n  const [pics, setPics] = useState([]);\r\n  //Convert files to images and store\r\n  const savedPics = useRef([]);\r\n\r\n  const server = useContext(ServerContext);\r\n\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    file.current = acceptedFiles;\r\n    console.log(\"file saved\");\r\n\r\n    /**\r\n     * Each file needs a new FileReader for asynchronous converting.\r\n     * After conversion destructure savedPics Ref and add newly converted image\r\n     * change setPic to trigger re-render\r\n     */\r\n    file.current.forEach((eachfile) => {\r\n      let reader = new FileReader();\r\n      reader.readAsDataURL(eachfile);\r\n      reader.onload = () => {\r\n        savedPics.current = [...savedPics.current, reader.result];\r\n        console.log(savedPics.current);\r\n        setPics([reader.result]);\r\n      };\r\n    });\r\n\r\n    // Do something with the files\r\n  }, []);\r\n\r\n  // When item saved to database and id retrieved, run Postfiles function\r\n  useEffect(() => {\r\n    //   console.log(itemId);\r\n    if (file != null && itemId != null) {\r\n      console.log(itemId + \" not null\");\r\n      PostFiles(file.current, itemId);\r\n    }\r\n  }, [newItemSaved]);\r\n\r\n  const PostFiles = (fileArray, itemId) => {\r\n    console.log(itemId);\r\n    fileArray.forEach((eachFileInArray) => {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", eachFileInArray);\r\n      if (itemId != null) {\r\n        axios\r\n          .post(`${server}/storage/save/${itemId}`, formData, {\r\n            headers: {\r\n              \"Content-Type\": \"multipart/form-data\",\r\n            },\r\n          })\r\n          .then((res) => {\r\n            console.log(\"file sent\");\r\n\r\n            rerender((prev) => [...prev, 1]);\r\n          })\r\n          .catch((err) => console.log(err));\r\n        file.current = [];\r\n        savedPics.current = [];\r\n      }\r\n    });\r\n  };\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row row-cols-3 carousel slide\">\r\n        {savedPics.current.map((p, index) => {\r\n          return (\r\n            <div className=\"col\" key={index}>\r\n              <div className=\"card\">\r\n                <div className=\"img-container\">\r\n                  <img alt=\"Product\" className=\"card-img-top\" src={p} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"row row-cols-1 pb-2\">\r\n        <div className=\"position-relative p-5 bg-secondary\" {...getRootProps()}>\r\n          <input\r\n            className=\"bg-primary p-5 stretched-link\"\r\n            {...getInputProps()}\r\n          />\r\n          {isDragActive ? (\r\n            <p>Drop the files here ...</p>\r\n          ) : (\r\n            <p>Drag 'n' drop product pictures here, or click to select files</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/Components/ItemRating.js",["294","295"],"import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport axios from \"axios\";\r\nimport styles from \"./star.module.css\";\r\n\r\nexport const ItemRating = ({ itemId, showNumberOfRaters }) => {\r\n  const [rating, setRating] = useState(0);\r\n  const server = useContext(ServerContext);\r\n  const [numberOfRatings, setNumberOfRatings] = useState();\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${server}/itemDetails/getItemRating/${itemId}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.itemRating) {\r\n          setRating(res.data.itemRating);\r\n          setNumberOfRatings(res.data.numberOfRatings);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, [itemId]);\r\n\r\n  return (\r\n    <div className={styles.Stars} style={{ \"--rating\": rating }}>\r\n      {showNumberOfRaters && numberOfRatings ? <span> {numberOfRatings} ratings</span> : null}\r\n    </div>\r\n  );\r\n};\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/Components/FilterBar.js",["296","297","298","299","300","301","302","303","304"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { ProductContext } from \"../Contexts/ProductContext\";\r\n\r\nexport const FilterBar = () => {\r\n  const [\r\n    products,\r\n    setProducts,\r\n    currentPage,\r\n    setCurrentPage,\r\n    pageSize,\r\n    setPageSize,\r\n    sortBy,\r\n    setSortBy,\r\n    numberOfTotalPages,\r\n    direction,\r\n    setDirection,\r\n    minPriceFilter,\r\n    setMinPriceFilter,\r\n    maxPriceFilter,\r\n    setMaxPriceFilter,\r\n  ] = useContext(ProductContext);\r\n  const [min, setMin] = useState();\r\n  const [max, setMax] = useState();\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    setMinPriceFilter(min);\r\n    setMaxPriceFilter(max);\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"input-group mb-3\">\r\n        <label className=\"input-group-text\" for=\"inputGroupSelect1\">\r\n          Number of Items Each Page\r\n        </label>\r\n        <select\r\n          value={pageSize}\r\n          onChange={(e) => {\r\n            setCurrentPage(0);\r\n            setPageSize(e.target.value);\r\n          }}\r\n          className=\"form-select\"\r\n          id=\"inputGroupSelect1\"\r\n        >\r\n          <option value=\"1\" defaultValue>\r\n            1\r\n          </option>\r\n          <option value=\"2\">2</option>\r\n          <option value=\"5\">5</option>\r\n          <option value=\"10\">10</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"input-group mb-3\">\r\n        <label className=\"input-group-text\" for=\"inputGroupSelect2\">\r\n          Sort By\r\n        </label>\r\n        <select\r\n          value={direction}\r\n          onChange={(e) => {\r\n            setCurrentPage(0);\r\n            setDirection(e.target.value);\r\n          }}\r\n          className=\"form-select\"\r\n          id=\"inputGroupSelect2\"\r\n        >\r\n          <option value=\"1\" defaultValue>\r\n            Price: Low to High\r\n          </option>\r\n          <option value=\"2\">Price: High to Low</option>\r\n        </select>\r\n      </div>\r\n      <form noValidate onSubmit={handleSubmit}>\r\n        <div className=\"input-group \">\r\n          <label className=\"input-group-text\" for=\"setmin\">\r\n            Price$\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            aria-label=\"Min Price\"\r\n            className=\"form-control\"\r\n            placeholder=\"Min\"\r\n            id=\"setmin\"\r\n            value={min}\r\n            onChange={(e) => {\r\n              if (e.target.value) {\r\n                setMin(parseInt(e.target.value));\r\n              }\r\n            }}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            aria-label=\"Max Price\"\r\n            className=\"form-control\"\r\n            placeholder=\"Max\"\r\n            value={max}\r\n            onChange={(e) => {\r\n              if (e.target.value) {\r\n                setMax(parseFloat(e.target.value));\r\n              }\r\n            }}\r\n          />\r\n          <button className=\"btn btn-primary \" type=\"submit\">\r\n            Filter\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/Review/Reviews.js",["305","306","307","308","309"],"import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport { ItemRating } from \"../Components/ItemRating\";\r\n\r\nexport const Reviews = ({ itemId }) => {\r\n  const [reviews, setReviews] = useState([]);\r\n  const server = useContext(ServerContext);\r\n\r\n  const [fetchDone, setFetchDone] = useState(false);\r\n  const fetched = useRef(false);\r\n  /*\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${server}/itemDetails/getItemsReviews/${itemId}`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setReviews(res.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, [itemId]);\r\n*/\r\n\r\n  /**\r\n   * start streaming and if there is an element with existing id, it means stream started again\r\n   * and then close the stream.\r\n   * reviewArray is necessary to store streamed items\r\n   */\r\n  useEffect(() => {\r\n    const source = new EventSource(\r\n      `${server}/itemDetails/getItemsReviews/${itemId}`\r\n    );\r\n    console.log(reviews);\r\n    var reviewArray = [];\r\n    source.onmessage = function logEvents(event) {\r\n      console.log(reviewArray);\r\n      const e = JSON.parse(event.data);\r\n      if (reviewArray.findIndex((r) => r.id == e.id) > -1) {\r\n        source.close();\r\n      } else {\r\n        reviewArray = [...reviewArray, e];\r\n        setReviews(reviewArray);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  if (!reviews) {\r\n    return null;\r\n  }\r\n\r\n  /*\r\n{reviews.map((eachReview, index) => {\r\n        return (\r\n          <div key={index}>\r\n            <p>{eachReview.review}</p>\r\n          </div>\r\n        );\r\n      })}\r\n\r\n  */\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h3>Product Reviews</h3>\r\n      <p>\r\n        Rating: <ItemRating itemId={itemId} showNumberOfRaters={true} />{\" \"}\r\n      </p>\r\n      {reviews.map((eachReview, index) => {\r\n        return (\r\n          <div className=\"m-3 border border-primary rounded-3\" key={index}>\r\n            <p>{eachReview.review}</p>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/Auth/LoginModal.js",["310","311"],"import React, { useState, useEffect } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nfunction LoginModal({ history, isModalOpen }) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [timer, setTimer] = useState(3);\r\n  const [title, setTitle] = useState(\"Login successful...\");\r\n\r\n  useEffect(() => {\r\n    setIsOpen(isModalOpen);\r\n  }, [isModalOpen]);\r\n\r\n  const showModal = () => {\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const hideModal = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const modalLoaded = () => {\r\n    setInterval(() => {\r\n      setTimer((prev) => prev - 1);\r\n    }, 1000);\r\n\r\n    setTimeout(() => {\r\n      history.push(\"/\");\r\n    }, 3000);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal show={isOpen} onHide={hideModal} onEntered={modalLoaded}>\r\n        <Modal.Header>\r\n          <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Redirecting... {timer}</Modal.Body>\r\n        <Modal.Footer></Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoginModal;\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/Profile/EditSuccessModal.js",["312","313"],"import React, { useState, useEffect } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nfunction EditSuccessModal({ history, isModalOpen }) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [timer, setTimer] = useState(3);\r\n  const [title, setTitle] = useState(\"Edit successful, Login Required...\");\r\n\r\n  useEffect(() => {\r\n    setIsOpen(isModalOpen);\r\n  }, [isModalOpen]);\r\n\r\n  const showModal = () => {\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const hideModal = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const modalLoaded = () => {\r\n    setInterval(() => {\r\n      setTimer((prev) => prev - 1);\r\n    }, 1000);\r\n\r\n    setTimeout(() => {\r\n      history.push(\"/login\");\r\n    }, 3000);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal show={isOpen} onHide={hideModal} onEntered={modalLoaded}>\r\n        <Modal.Header>\r\n          <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Redirecting... {timer}</Modal.Body>\r\n        <Modal.Footer></Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EditSuccessModal;\r\n","/media/ogn/Multimedia/ReactPrjs/front-end/src/Chat/ChatArea.js",["314","315","316","317","318","319","320","321","322","323","324"],"import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport { CustomerProfileContext } from \"../Contexts/CustomerProfileContext\";\r\nimport { ChatContext } from \"../Contexts/ChatContext\";\r\nimport \"./chatarea.css\";\r\n\r\nexport const ChatArea = () => {\r\n  const [\r\n    connected,\r\n    subscribedTopics,\r\n    chat,\r\n    setChat,\r\n    client,\r\n    arr,\r\n    setConnected,\r\n    chatIndex,\r\n    setChatIndex,\r\n  ] = useContext(ChatContext);\r\n\r\n  const [\r\n    customerProfile,\r\n    userProfile,\r\n    setCustomerProfile,\r\n    setUserProfile,\r\n  ] = useContext(CustomerProfileContext);\r\n\r\n  const clickHandler = (subscriber, message) => {\r\n    client.current.publish({\r\n      destination: \"/app/chat\",\r\n      body: JSON.stringify({\r\n        content: message,\r\n        publisher: customerProfile.customerId,\r\n        subscriber: subscriber,\r\n      }),\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"chat changedd\");\r\n    console.log(chat);\r\n  }, [chat]);\r\n\r\n  /**\r\n   * Auto scroll to bottom when message content change\r\n   */\r\n  const messagesEndRef = useRef();\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [chat[chatIndex].message, chat[chatIndex].youSent]);\r\n\r\n  if (!chat || chat.length < 1) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div class=\"container-fluid body_cnt\">\r\n      <div className=\"card card_msg\">\r\n        <div className=\"card-body msg_card_body\">\r\n          {chat[chatIndex].message.map((msg, index) => {\r\n            return (\r\n              <div key={index}>\r\n                {msg && msg.length > 0 ? (\r\n                  <div className=\"d-flex justify-content-start mb-2\">\r\n                    <div className=\"msg_container\">{msg}</div>\r\n                  </div>\r\n                ) : null}\r\n                {chat[chatIndex].youSent[index] &&\r\n                chat[chatIndex].youSent[index].length > 0 ? (\r\n                  <div className=\"d-flex justify-content-end mb-2\">\r\n                    <div className=\"msg_container_send\">\r\n                      {chat[chatIndex].youSent[index]}\r\n                    </div>\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n            );\r\n          })}\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n        <div className=\"card-footer crd-footer\">\r\n          <div class=\"input-group\">\r\n            <input\r\n              className=\"form-control type_msg\"\r\n              type=\"text\"\r\n              value={chat[chatIndex].sendMessage}\r\n              onChange={(e) => {\r\n                arr.current[chatIndex].sendMessage = e.target.value;\r\n                setChat([...arr.current]);\r\n              }}\r\n              onKeyUp={(e) => {\r\n                if (e.key == \"Enter\") {\r\n                  clickHandler(\r\n                    chat[chatIndex].publisher,\r\n                    chat[chatIndex].sendMessage\r\n                  );\r\n                  arr.current[chatIndex].sendMessage = \"\";\r\n                  setChat([...arr.current]);\r\n                }\r\n              }}\r\n            ></input>\r\n\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                className=\"btn btn-primary btn_height\"\r\n                onClick={(e) => {\r\n                  clickHandler(\r\n                    chat[chatIndex].publisher,\r\n                    chat[chatIndex].sendMessage\r\n                  );\r\n                  arr.current[chatIndex].sendMessage = \"\";\r\n                  setChat([...arr.current]);\r\n                }}\r\n              >\r\n                Send\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n",{"ruleId":"325","replacedBy":"326"},{"ruleId":"327","replacedBy":"328"},{"ruleId":"329","severity":1,"message":"330","line":7,"column":18,"nodeType":"331","messageId":"332","endLine":7,"endColumn":27},{"ruleId":"329","severity":1,"message":"333","line":1,"column":50,"nodeType":"331","messageId":"332","endLine":1,"endColumn":56},{"ruleId":"334","severity":1,"message":"335","line":58,"column":6,"nodeType":"336","endLine":65,"endColumn":4,"suggestions":"337"},{"ruleId":"334","severity":1,"message":"338","line":17,"column":6,"nodeType":"336","endLine":17,"endColumn":16,"suggestions":"339"},{"ruleId":"329","severity":1,"message":"340","line":16,"column":5,"nodeType":"331","messageId":"332","endLine":16,"endColumn":13},{"ruleId":"329","severity":1,"message":"341","line":17,"column":5,"nodeType":"331","messageId":"332","endLine":17,"endColumn":16},{"ruleId":"329","severity":1,"message":"342","line":19,"column":5,"nodeType":"331","messageId":"332","endLine":19,"endColumn":18},{"ruleId":"334","severity":1,"message":"343","line":25,"column":6,"nodeType":"336","endLine":25,"endColumn":27,"suggestions":"344"},{"ruleId":"329","severity":1,"message":"345","line":14,"column":5,"nodeType":"331","messageId":"332","endLine":14,"endColumn":16},{"ruleId":"329","severity":1,"message":"346","line":15,"column":5,"nodeType":"331","messageId":"332","endLine":15,"endColumn":23},{"ruleId":"329","severity":1,"message":"347","line":16,"column":5,"nodeType":"331","messageId":"332","endLine":16,"endColumn":19},{"ruleId":"334","severity":1,"message":"335","line":31,"column":6,"nodeType":"336","endLine":31,"endColumn":23,"suggestions":"348"},{"ruleId":"329","severity":1,"message":"341","line":20,"column":5,"nodeType":"331","messageId":"332","endLine":20,"endColumn":16},{"ruleId":"329","severity":1,"message":"342","line":22,"column":5,"nodeType":"331","messageId":"332","endLine":22,"endColumn":18},{"ruleId":"329","severity":1,"message":"349","line":23,"column":5,"nodeType":"331","messageId":"332","endLine":23,"endColumn":24},{"ruleId":"334","severity":1,"message":"350","line":56,"column":6,"nodeType":"336","endLine":56,"endColumn":18,"suggestions":"351"},{"ruleId":"334","severity":1,"message":"350","line":96,"column":6,"nodeType":"336","endLine":96,"endColumn":29,"suggestions":"352"},{"ruleId":"329","severity":1,"message":"345","line":16,"column":5,"nodeType":"331","messageId":"332","endLine":16,"endColumn":16},{"ruleId":"329","severity":1,"message":"346","line":17,"column":5,"nodeType":"331","messageId":"332","endLine":17,"endColumn":23},{"ruleId":"329","severity":1,"message":"347","line":18,"column":5,"nodeType":"331","messageId":"332","endLine":18,"endColumn":19},{"ruleId":"329","severity":1,"message":"341","line":28,"column":5,"nodeType":"331","messageId":"332","endLine":28,"endColumn":16},{"ruleId":"329","severity":1,"message":"353","line":29,"column":5,"nodeType":"331","messageId":"332","endLine":29,"endColumn":15},{"ruleId":"329","severity":1,"message":"342","line":30,"column":5,"nodeType":"331","messageId":"332","endLine":30,"endColumn":18},{"ruleId":"329","severity":1,"message":"349","line":31,"column":5,"nodeType":"331","messageId":"332","endLine":31,"endColumn":24},{"ruleId":"334","severity":1,"message":"354","line":74,"column":6,"nodeType":"336","endLine":74,"endColumn":23,"suggestions":"355"},{"ruleId":"334","severity":1,"message":"356","line":136,"column":6,"nodeType":"336","endLine":136,"endColumn":24,"suggestions":"357"},{"ruleId":"334","severity":1,"message":"358","line":181,"column":6,"nodeType":"336","endLine":181,"endColumn":17,"suggestions":"359"},{"ruleId":"360","severity":1,"message":"361","line":185,"column":14,"nodeType":"336","messageId":"362","endLine":197,"endColumn":8},{"ruleId":"334","severity":1,"message":"335","line":19,"column":6,"nodeType":"336","endLine":19,"endColumn":33,"suggestions":"363"},{"ruleId":"329","severity":1,"message":"333","line":1,"column":50,"nodeType":"331","messageId":"332","endLine":1,"endColumn":56},{"ruleId":"329","severity":1,"message":"364","line":11,"column":5,"nodeType":"331","messageId":"332","endLine":11,"endColumn":16},{"ruleId":"329","severity":1,"message":"365","line":14,"column":5,"nodeType":"331","messageId":"332","endLine":14,"endColumn":13},{"ruleId":"329","severity":1,"message":"366","line":15,"column":5,"nodeType":"331","messageId":"332","endLine":15,"endColumn":16},{"ruleId":"329","severity":1,"message":"367","line":16,"column":5,"nodeType":"331","messageId":"332","endLine":16,"endColumn":11},{"ruleId":"329","severity":1,"message":"368","line":17,"column":5,"nodeType":"331","messageId":"332","endLine":17,"endColumn":14},{"ruleId":"329","severity":1,"message":"369","line":19,"column":5,"nodeType":"331","messageId":"332","endLine":19,"endColumn":14},{"ruleId":"329","severity":1,"message":"370","line":20,"column":5,"nodeType":"331","messageId":"332","endLine":20,"endColumn":17},{"ruleId":"329","severity":1,"message":"371","line":21,"column":5,"nodeType":"331","messageId":"332","endLine":21,"endColumn":19},{"ruleId":"329","severity":1,"message":"372","line":22,"column":5,"nodeType":"331","messageId":"332","endLine":22,"endColumn":22},{"ruleId":"329","severity":1,"message":"373","line":23,"column":5,"nodeType":"331","messageId":"332","endLine":23,"endColumn":19},{"ruleId":"329","severity":1,"message":"374","line":24,"column":5,"nodeType":"331","messageId":"332","endLine":24,"endColumn":22},{"ruleId":"375","severity":1,"message":"376","line":55,"column":51,"nodeType":"377","messageId":"378","endLine":55,"endColumn":53},{"ruleId":"334","severity":1,"message":"379","line":74,"column":6,"nodeType":"336","endLine":74,"endColumn":40,"suggestions":"380"},{"ruleId":"329","severity":1,"message":"381","line":1,"column":32,"nodeType":"331","messageId":"332","endLine":1,"endColumn":39},{"ruleId":"329","severity":1,"message":"345","line":21,"column":5,"nodeType":"331","messageId":"332","endLine":21,"endColumn":16},{"ruleId":"329","severity":1,"message":"346","line":22,"column":5,"nodeType":"331","messageId":"332","endLine":22,"endColumn":23},{"ruleId":"329","severity":1,"message":"347","line":23,"column":5,"nodeType":"331","messageId":"332","endLine":23,"endColumn":19},{"ruleId":"329","severity":1,"message":"382","line":7,"column":10,"nodeType":"331","messageId":"332","endLine":7,"endColumn":14},{"ruleId":"329","severity":1,"message":"364","line":18,"column":5,"nodeType":"331","messageId":"332","endLine":18,"endColumn":16},{"ruleId":"329","severity":1,"message":"383","line":19,"column":5,"nodeType":"331","messageId":"332","endLine":19,"endColumn":16},{"ruleId":"329","severity":1,"message":"384","line":20,"column":5,"nodeType":"331","messageId":"332","endLine":20,"endColumn":19},{"ruleId":"329","severity":1,"message":"365","line":21,"column":5,"nodeType":"331","messageId":"332","endLine":21,"endColumn":13},{"ruleId":"329","severity":1,"message":"366","line":22,"column":5,"nodeType":"331","messageId":"332","endLine":22,"endColumn":16},{"ruleId":"329","severity":1,"message":"367","line":23,"column":5,"nodeType":"331","messageId":"332","endLine":23,"endColumn":11},{"ruleId":"329","severity":1,"message":"368","line":24,"column":5,"nodeType":"331","messageId":"332","endLine":24,"endColumn":14},{"ruleId":"329","severity":1,"message":"385","line":25,"column":5,"nodeType":"331","messageId":"332","endLine":25,"endColumn":23},{"ruleId":"334","severity":1,"message":"335","line":36,"column":6,"nodeType":"336","endLine":36,"endColumn":33,"suggestions":"386"},{"ruleId":"334","severity":1,"message":"387","line":24,"column":6,"nodeType":"336","endLine":24,"endColumn":8,"suggestions":"388"},{"ruleId":"329","severity":1,"message":"389","line":17,"column":5,"nodeType":"331","messageId":"332","endLine":17,"endColumn":20},{"ruleId":"329","severity":1,"message":"346","line":19,"column":5,"nodeType":"331","messageId":"332","endLine":19,"endColumn":23},{"ruleId":"329","severity":1,"message":"347","line":20,"column":5,"nodeType":"331","messageId":"332","endLine":20,"endColumn":19},{"ruleId":"334","severity":1,"message":"390","line":32,"column":6,"nodeType":"336","endLine":32,"endColumn":18,"suggestions":"391"},{"ruleId":"334","severity":1,"message":"392","line":15,"column":6,"nodeType":"336","endLine":15,"endColumn":23,"suggestions":"393"},{"ruleId":"394","severity":1,"message":"395","line":39,"column":26,"nodeType":"396","messageId":"397","endLine":39,"endColumn":28},{"ruleId":"375","severity":1,"message":"398","line":44,"column":62,"nodeType":"377","messageId":"378","endLine":44,"endColumn":64},{"ruleId":"334","severity":1,"message":"399","line":59,"column":6,"nodeType":"336","endLine":59,"endColumn":15,"suggestions":"400"},{"ruleId":"329","severity":1,"message":"401","line":1,"column":17,"nodeType":"331","messageId":"332","endLine":1,"endColumn":25},{"ruleId":"329","severity":1,"message":"402","line":1,"column":39,"nodeType":"331","messageId":"332","endLine":1,"endColumn":48},{"ruleId":"329","severity":1,"message":"403","line":10,"column":9,"nodeType":"331","messageId":"332","endLine":10,"endColumn":15},{"ruleId":"329","severity":1,"message":"340","line":12,"column":5,"nodeType":"331","messageId":"332","endLine":12,"endColumn":13},{"ruleId":"329","severity":1,"message":"353","line":14,"column":5,"nodeType":"331","messageId":"332","endLine":14,"endColumn":15},{"ruleId":"329","severity":1,"message":"349","line":16,"column":5,"nodeType":"331","messageId":"332","endLine":16,"endColumn":24},{"ruleId":"329","severity":1,"message":"404","line":27,"column":5,"nodeType":"331","messageId":"332","endLine":27,"endColumn":9},{"ruleId":"329","severity":1,"message":"405","line":30,"column":5,"nodeType":"331","messageId":"332","endLine":30,"endColumn":19},{"ruleId":"329","severity":1,"message":"406","line":32,"column":5,"nodeType":"331","messageId":"332","endLine":32,"endColumn":19},{"ruleId":"329","severity":1,"message":"407","line":37,"column":5,"nodeType":"331","messageId":"332","endLine":37,"endColumn":14},{"ruleId":"329","severity":1,"message":"408","line":38,"column":5,"nodeType":"331","messageId":"332","endLine":38,"endColumn":21},{"ruleId":"329","severity":1,"message":"409","line":39,"column":5,"nodeType":"331","messageId":"332","endLine":39,"endColumn":9},{"ruleId":"329","severity":1,"message":"410","line":44,"column":5,"nodeType":"331","messageId":"332","endLine":44,"endColumn":14},{"ruleId":"334","severity":1,"message":"392","line":16,"column":6,"nodeType":"336","endLine":16,"endColumn":8,"suggestions":"411"},{"ruleId":"394","severity":1,"message":"395","line":31,"column":38,"nodeType":"396","messageId":"397","endLine":31,"endColumn":40},{"ruleId":"412","severity":1,"message":"413","line":123,"column":19,"nodeType":"414","endLine":129,"endColumn":21},{"ruleId":"415","severity":1,"message":"416","line":123,"column":19,"nodeType":"414","endLine":129,"endColumn":21},{"ruleId":"329","severity":1,"message":"346","line":15,"column":5,"nodeType":"331","messageId":"332","endLine":15,"endColumn":23},{"ruleId":"329","severity":1,"message":"347","line":16,"column":5,"nodeType":"331","messageId":"332","endLine":16,"endColumn":19},{"ruleId":"329","severity":1,"message":"417","line":7,"column":22,"nodeType":"331","messageId":"332","endLine":7,"endColumn":35},{"ruleId":"329","severity":1,"message":"341","line":12,"column":20,"nodeType":"331","messageId":"332","endLine":12,"endColumn":31},{"ruleId":"334","severity":1,"message":"418","line":20,"column":6,"nodeType":"336","endLine":20,"endColumn":23,"suggestions":"419"},{"ruleId":"329","severity":1,"message":"402","line":1,"column":39,"nodeType":"331","messageId":"332","endLine":1,"endColumn":48},{"ruleId":"329","severity":1,"message":"420","line":11,"column":19,"nodeType":"331","messageId":"332","endLine":11,"endColumn":29},{"ruleId":"329","severity":1,"message":"402","line":1,"column":27,"nodeType":"331","messageId":"332","endLine":1,"endColumn":36},{"ruleId":"329","severity":1,"message":"345","line":13,"column":5,"nodeType":"331","messageId":"332","endLine":13,"endColumn":16},{"ruleId":"329","severity":1,"message":"346","line":14,"column":5,"nodeType":"331","messageId":"332","endLine":14,"endColumn":23},{"ruleId":"329","severity":1,"message":"347","line":15,"column":5,"nodeType":"331","messageId":"332","endLine":15,"endColumn":19},{"ruleId":"329","severity":1,"message":"404","line":12,"column":10,"nodeType":"331","messageId":"332","endLine":12,"endColumn":14},{"ruleId":"329","severity":1,"message":"421","line":12,"column":16,"nodeType":"331","messageId":"332","endLine":12,"endColumn":23},{"ruleId":"329","severity":1,"message":"422","line":12,"column":25,"nodeType":"331","messageId":"332","endLine":12,"endColumn":34},{"ruleId":"329","severity":1,"message":"364","line":16,"column":5,"nodeType":"331","messageId":"332","endLine":16,"endColumn":16},{"ruleId":"329","severity":1,"message":"383","line":17,"column":5,"nodeType":"331","messageId":"332","endLine":17,"endColumn":16},{"ruleId":"329","severity":1,"message":"384","line":18,"column":5,"nodeType":"331","messageId":"332","endLine":18,"endColumn":19},{"ruleId":"329","severity":1,"message":"365","line":19,"column":5,"nodeType":"331","messageId":"332","endLine":19,"endColumn":13},{"ruleId":"329","severity":1,"message":"366","line":20,"column":5,"nodeType":"331","messageId":"332","endLine":20,"endColumn":16},{"ruleId":"329","severity":1,"message":"367","line":21,"column":5,"nodeType":"331","messageId":"332","endLine":21,"endColumn":11},{"ruleId":"329","severity":1,"message":"368","line":22,"column":5,"nodeType":"331","messageId":"332","endLine":22,"endColumn":14},{"ruleId":"329","severity":1,"message":"385","line":23,"column":5,"nodeType":"331","messageId":"332","endLine":23,"endColumn":23},{"ruleId":"329","severity":1,"message":"423","line":26,"column":10,"nodeType":"331","messageId":"332","endLine":26,"endColumn":20},{"ruleId":"329","severity":1,"message":"424","line":26,"column":22,"nodeType":"331","messageId":"332","endLine":26,"endColumn":35},{"ruleId":"334","severity":1,"message":"335","line":34,"column":6,"nodeType":"336","endLine":34,"endColumn":33,"suggestions":"425"},{"ruleId":"329","severity":1,"message":"333","line":1,"column":50,"nodeType":"331","messageId":"332","endLine":1,"endColumn":56},{"ruleId":"329","severity":1,"message":"408","line":9,"column":5,"nodeType":"331","messageId":"332","endLine":9,"endColumn":21},{"ruleId":"329","severity":1,"message":"345","line":21,"column":5,"nodeType":"331","messageId":"332","endLine":21,"endColumn":16},{"ruleId":"329","severity":1,"message":"346","line":22,"column":5,"nodeType":"331","messageId":"332","endLine":22,"endColumn":23},{"ruleId":"329","severity":1,"message":"347","line":23,"column":5,"nodeType":"331","messageId":"332","endLine":23,"endColumn":19},{"ruleId":"426","severity":1,"message":"427","line":119,"column":23,"nodeType":"428","endLine":119,"endColumn":41},{"ruleId":"334","severity":1,"message":"392","line":13,"column":6,"nodeType":"336","endLine":13,"endColumn":8,"suggestions":"429"},{"ruleId":"329","severity":1,"message":"430","line":16,"column":10,"nodeType":"331","messageId":"332","endLine":16,"endColumn":14},{"ruleId":"334","severity":1,"message":"431","line":51,"column":6,"nodeType":"336","endLine":51,"endColumn":20,"suggestions":"432"},{"ruleId":"329","severity":1,"message":"333","line":1,"column":50,"nodeType":"331","messageId":"332","endLine":1,"endColumn":56},{"ruleId":"334","severity":1,"message":"335","line":22,"column":6,"nodeType":"336","endLine":22,"endColumn":14,"suggestions":"433"},{"ruleId":"329","severity":1,"message":"402","line":1,"column":27,"nodeType":"331","messageId":"332","endLine":1,"endColumn":36},{"ruleId":"329","severity":1,"message":"434","line":6,"column":5,"nodeType":"331","messageId":"332","endLine":6,"endColumn":13},{"ruleId":"329","severity":1,"message":"364","line":7,"column":5,"nodeType":"331","messageId":"332","endLine":7,"endColumn":16},{"ruleId":"329","severity":1,"message":"383","line":8,"column":5,"nodeType":"331","messageId":"332","endLine":8,"endColumn":16},{"ruleId":"329","severity":1,"message":"367","line":12,"column":5,"nodeType":"331","messageId":"332","endLine":12,"endColumn":11},{"ruleId":"329","severity":1,"message":"368","line":13,"column":5,"nodeType":"331","messageId":"332","endLine":13,"endColumn":14},{"ruleId":"329","severity":1,"message":"385","line":14,"column":5,"nodeType":"331","messageId":"332","endLine":14,"endColumn":23},{"ruleId":"329","severity":1,"message":"371","line":17,"column":5,"nodeType":"331","messageId":"332","endLine":17,"endColumn":19},{"ruleId":"329","severity":1,"message":"373","line":19,"column":5,"nodeType":"331","messageId":"332","endLine":19,"endColumn":19},{"ruleId":"329","severity":1,"message":"435","line":9,"column":10,"nodeType":"331","messageId":"332","endLine":9,"endColumn":19},{"ruleId":"329","severity":1,"message":"436","line":9,"column":21,"nodeType":"331","messageId":"332","endLine":9,"endColumn":33},{"ruleId":"329","severity":1,"message":"437","line":10,"column":9,"nodeType":"331","messageId":"332","endLine":10,"endColumn":16},{"ruleId":"375","severity":1,"message":"398","line":37,"column":45,"nodeType":"377","messageId":"378","endLine":37,"endColumn":47},{"ruleId":"334","severity":1,"message":"438","line":44,"column":6,"nodeType":"336","endLine":44,"endColumn":8,"suggestions":"439"},{"ruleId":"329","severity":1,"message":"440","line":7,"column":17,"nodeType":"331","messageId":"332","endLine":7,"endColumn":25},{"ruleId":"329","severity":1,"message":"441","line":13,"column":9,"nodeType":"331","messageId":"332","endLine":13,"endColumn":18},{"ruleId":"329","severity":1,"message":"440","line":7,"column":17,"nodeType":"331","messageId":"332","endLine":7,"endColumn":25},{"ruleId":"329","severity":1,"message":"441","line":13,"column":9,"nodeType":"331","messageId":"332","endLine":13,"endColumn":18},{"ruleId":"329","severity":1,"message":"401","line":1,"column":17,"nodeType":"331","messageId":"332","endLine":1,"endColumn":25},{"ruleId":"329","severity":1,"message":"407","line":8,"column":5,"nodeType":"331","messageId":"332","endLine":8,"endColumn":14},{"ruleId":"329","severity":1,"message":"408","line":9,"column":5,"nodeType":"331","messageId":"332","endLine":9,"endColumn":21},{"ruleId":"329","severity":1,"message":"442","line":14,"column":5,"nodeType":"331","messageId":"332","endLine":14,"endColumn":17},{"ruleId":"329","severity":1,"message":"443","line":16,"column":5,"nodeType":"331","messageId":"332","endLine":16,"endColumn":17},{"ruleId":"329","severity":1,"message":"345","line":21,"column":5,"nodeType":"331","messageId":"332","endLine":21,"endColumn":16},{"ruleId":"329","severity":1,"message":"346","line":22,"column":5,"nodeType":"331","messageId":"332","endLine":22,"endColumn":23},{"ruleId":"329","severity":1,"message":"347","line":23,"column":5,"nodeType":"331","messageId":"332","endLine":23,"endColumn":19},{"ruleId":"334","severity":1,"message":"444","line":53,"column":7,"nodeType":"445","endLine":53,"endColumn":30},{"ruleId":"334","severity":1,"message":"444","line":53,"column":32,"nodeType":"445","endLine":53,"endColumn":55},{"ruleId":"375","severity":1,"message":"398","line":95,"column":27,"nodeType":"377","messageId":"378","endLine":95,"endColumn":29},"no-native-reassign",["446"],"no-negated-in-lhs",["447"],"no-unused-vars","'setServer' is assigned a value but never used.","Identifier","unusedVar","'useRef' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'server'. Either include it or remove the dependency array.","ArrayExpression",["448"],"React Hook useEffect has a missing dependency: 'checkAuthorization'. Either include it or remove the dependency array.",["449"],"'loggedIn' is assigned a value but never used.","'setLoggedIn' is assigned a value but never used.","'setCustomerFK' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchUserProfile'. Either include it or remove the dependency array.",["450"],"'userProfile' is assigned a value but never used.","'setCustomerProfile' is assigned a value but never used.","'setUserProfile' is assigned a value but never used.",["451"],"'loginWithJWTSuccess' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'firstFetchDone', 'loggedIn', and 'server'. Either include them or remove the dependency array.",["452"],["453"],"'customerFK' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loggedIn' and 'server'. Either include them or remove the dependency array.",["454"],"React Hook useEffect has missing dependencies: 'customerProfile' and 'loggedIn'. Either include them or remove the dependency array.",["455"],"React Hook useEffect has missing dependencies: 'connected', 'customerProfile', and 'loggedIn'. Either include them or remove the dependency array.",["456"],"no-sparse-arrays","Unexpected comma in middle of array.","unexpectedSparseArray",["457"],"'setProducts' is assigned a value but never used.","'pageSize' is assigned a value but never used.","'setPageSize' is assigned a value but never used.","'sortBy' is assigned a value but never used.","'setSortBy' is assigned a value but never used.","'direction' is assigned a value but never used.","'setDirection' is assigned a value but never used.","'minPriceFilter' is assigned a value but never used.","'setMinPriceFilter' is assigned a value but never used.","'maxPriceFilter' is assigned a value but never used.","'setMaxPriceFilter' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'currentPage' and 'pageNumberArray'. Either include them or remove the dependency array.",["458"],"'useMemo' is defined but never used.","'Link' is defined but never used.","'currentPage' is assigned a value but never used.","'setCurrentPage' is assigned a value but never used.","'numberOfTotalPages' is assigned a value but never used.",["459"],"React Hook useEffect has missing dependencies: 'props.match.params.uuid' and 'server'. Either include them or remove the dependency array.",["460"],"'customerProfile' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'SearchTyped'. Either include it or remove the dependency array.",["461"],"React Hook useEffect has a missing dependency: 'FetchPath'. Either include it or remove the dependency array.",["462"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Expected '===' and instead saw '=='.","React Hook useEffect has missing dependencies: 'props.match.params.itemId' and 'server'. Either include them or remove the dependency array.",["463"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'server' is assigned a value but never used.","'cart' is assigned a value but never used.","'cartOrderItems' is assigned a value but never used.","'firstFetchDone' is assigned a value but never used.","'connected' is assigned a value but never used.","'subscribedTopics' is assigned a value but never used.","'chat' is assigned a value but never used.","'chatIndex' is assigned a value but never used.",["464"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'setMyProducts' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'FetchOrders' and 'loggedIn'. Either include them or remove the dependency array.",["465"],"'setTaxRate' is assigned a value but never used.","'setCart' is assigned a value but never used.","'savedCart' is assigned a value but never used.","'itemAmount' is assigned a value but never used.","'setItemAmount' is assigned a value but never used.",["466"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["467"],"'pics' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'PostFiles' and 'itemId'. Either include them or remove the dependency array.",["468"],["469"],"'products' is assigned a value but never used.","'fetchDone' is assigned a value but never used.","'setFetchDone' is assigned a value but never used.","'fetched' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'itemId', 'reviews', and 'server'. Either include them or remove the dependency array.",["470"],"'setTitle' is assigned a value but never used.","'showModal' is assigned a value but never used.","'setConnected' is assigned a value but never used.","'setChatIndex' is assigned a value but never used.","React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","no-global-assign","no-unsafe-negation",{"desc":"471","fix":"472"},{"desc":"473","fix":"474"},{"desc":"475","fix":"476"},{"desc":"477","fix":"478"},{"desc":"479","fix":"480"},{"desc":"481","fix":"482"},{"desc":"483","fix":"484"},{"desc":"485","fix":"486"},{"desc":"487","fix":"488"},{"desc":"489","fix":"490"},{"desc":"491","fix":"492"},{"desc":"489","fix":"493"},{"desc":"494","fix":"495"},{"desc":"496","fix":"497"},{"desc":"498","fix":"499"},{"desc":"500","fix":"501"},{"desc":"502","fix":"503"},{"desc":"504","fix":"505"},{"desc":"489","fix":"506"},{"desc":"502","fix":"507"},{"desc":"508","fix":"509"},{"desc":"510","fix":"511"},{"desc":"512","fix":"513"},"Update the dependencies array to be: [currentPage, pageSize, sortBy, direction, minPriceFilter, maxPriceFilter, server]",{"range":"514","text":"515"},"Update the dependencies array to be: [checkAuthorization, loggedIn]",{"range":"516","text":"517"},"Update the dependencies array to be: [fetchUserProfile, loginWithJWTSuccess]",{"range":"518","text":"519"},"Update the dependencies array to be: [customerProfile, server]",{"range":"520","text":"521"},"Update the dependencies array to be: [customerFK, firstFetchDone, loggedIn, server]",{"range":"522","text":"523"},"Update the dependencies array to be: [cart, customerProfile, firstFetchDone, loggedIn, server]",{"range":"524","text":"525"},"Update the dependencies array to be: [customerProfile, loggedIn, server]",{"range":"526","text":"527"},"Update the dependencies array to be: [customerProfile, loggedIn, subscribedTopics]",{"range":"528","text":"529"},"Update the dependencies array to be: [chatIndex, connected, customerProfile, loggedIn]",{"range":"530","text":"531"},"Update the dependencies array to be: [props.match.params.itemId, server]",{"range":"532","text":"533"},"Update the dependencies array to be: [currentPage, endOfPageSet, numberOfTotalPages, pageNumberArray]",{"range":"534","text":"535"},{"range":"536","text":"533"},"Update the dependencies array to be: [props.match.params.uuid, server]",{"range":"537","text":"538"},"Update the dependencies array to be: [SearchTyped, searchWord]",{"range":"539","text":"540"},"Update the dependencies array to be: [FetchPath, triggerReRender]",{"range":"541","text":"542"},"Update the dependencies array to be: [picPath, props.match.params.itemId, server]",{"range":"543","text":"544"},"Update the dependencies array to be: [FetchPath]",{"range":"545","text":"546"},"Update the dependencies array to be: [FetchOrders, customerProfile, loggedIn]",{"range":"547","text":"548"},{"range":"549","text":"533"},{"range":"550","text":"546"},"Update the dependencies array to be: [PostFiles, itemId, newItemSaved]",{"range":"551","text":"552"},"Update the dependencies array to be: [itemId, server]",{"range":"553","text":"554"},"Update the dependencies array to be: [itemId, reviews, server]",{"range":"555","text":"556"},[1856,1966],"[currentPage, pageSize, sortBy, direction, minPriceFilter, maxPriceFilter, server]",[601,611],"[checkAuthorization, loggedIn]",[809,830],"[fetchUserProfile, loginWithJWTSuccess]",[937,954],"[customerProfile, server]",[2074,2086],"[customerFK, firstFetchDone, loggedIn, server]",[3297,3320],"[cart, customerProfile, firstFetchDone, loggedIn, server]",[2331,2348],"[customerProfile, loggedIn, server]",[4350,4368],"[customerProfile, loggedIn, subscribedTopics]",[5594,5605],"[chatIndex, connected, customerProfile, loggedIn]",[644,671],"[props.match.params.itemId, server]",[2167,2201],"[currentPage, endOfPageSet, numberOfTotalPages, pageNumberArray]",[1127,1154],[778,780],"[props.match.params.uuid, server]",[1042,1054],"[SearchTyped, searchWord]",[500,517],"[FetchPath, triggerReRender]",[1824,1833],"[picPath, props.match.params.itemId, server]",[487,489],"[FetchPath]",[745,762],"[FetchOrders, customerProfile, loggedIn]",[1022,1049],[424,426],[1586,1600],"[PostFiles, itemId, newItemSaved]",[769,777],"[itemId, server]",[1383,1385],"[itemId, reviews, server]"]