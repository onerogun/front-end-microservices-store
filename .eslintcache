[{"D:\\IntelliJ Projects\\app\\src\\main\\front-end\\src\\index.js":"1","D:\\IntelliJ Projects\\app\\src\\main\\front-end\\src\\App.js":"2","D:\\IntelliJ Projects\\app\\src\\main\\front-end\\src\\Contexts\\ServerContext.js":"3","D:\\IntelliJ Projects\\app\\src\\main\\front-end\\src\\ProductSource\\Product.js":"4","D:\\IntelliJ Projects\\app\\src\\main\\front-end\\src\\ProductSource\\AddProduct.js":"5","D:\\IntelliJ Projects\\app\\src\\main\\front-end\\src\\Contexts\\ProductContext.js":"6","D:\\IntelliJ Projects\\app\\src\\main\\front-end\\src\\Auth\\Login.js":"7","D:\\IntelliJ Projects\\app\\src\\main\\front-end\\src\\Components\\CustomerSignUp.js":"8","D:\\IntelliJ Projects\\app\\src\\main\\front-end\\src\\Components\\Navbar.js":"9","D:\\IntelliJ Projects\\app\\src\\main\\front-end\\src\\ProductSource\\Image.js":"10","D:\\ReactPrjs\\front-end\\src\\index.js":"11","D:\\ReactPrjs\\front-end\\src\\App.js":"12","D:\\ReactPrjs\\front-end\\src\\ProductSource\\Product.js":"13","D:\\ReactPrjs\\front-end\\src\\ProductSource\\AddProduct.js":"14","D:\\ReactPrjs\\front-end\\src\\Contexts\\ProductContext.js":"15","D:\\ReactPrjs\\front-end\\src\\Contexts\\ServerContext.js":"16","D:\\ReactPrjs\\front-end\\src\\ProductSource\\Image.js":"17","D:\\ReactPrjs\\front-end\\src\\Components\\CustomerSignUp.js":"18","D:\\ReactPrjs\\front-end\\src\\Auth\\Login.js":"19","D:\\ReactPrjs\\front-end\\src\\Components\\Navbar.js":"20","D:\\ReactPrjs\\front-end\\src\\Contexts\\PathContext.js":"21","D:\\ReactPrjs\\front-end\\src\\ProductSource\\ProductCoverImage.js":"22","D:\\ReactPrjs\\front-end\\src\\ProductSource\\UploadProductImage.js":"23","D:\\ReactPrjs\\front-end\\src\\ProductSource\\ProductDetails.js":"24","D:\\ReactPrjs\\front-end\\src\\ProductSource\\EditProductDescription.js":"25","D:\\ReactPrjs\\front-end\\src\\Components\\LoginModal.js":"26","D:\\ReactPrjs\\front-end\\src\\Contexts\\LoginSuccessContext.js":"27","D:\\ReactPrjs\\front-end\\src\\Contexts\\CustomerProfileContext.js":"28","D:\\ReactPrjs\\front-end\\src\\Components\\CustomerProfile.js":"29","D:\\ReactPrjs\\front-end\\src\\Components\\EditCustomerProfile.js":"30","D:\\ReactPrjs\\front-end\\src\\Components\\EditSuccessModal.js":"31","D:\\ReactPrjs\\front-end\\src\\Components\\FilterBar.js":"32","D:\\ReactPrjs\\front-end\\src\\Auth\\PasswordResetRequest.js":"33","D:\\ReactPrjs\\front-end\\src\\Auth\\PasswordReset.js":"34"},{"size":411,"mtime":1610311289203,"results":"35","hashOfConfig":"36"},{"size":1266,"mtime":1610413093762,"results":"37","hashOfConfig":"36"},{"size":354,"mtime":1610311327024,"results":"38","hashOfConfig":"36"},{"size":1463,"mtime":1610383981883,"results":"39","hashOfConfig":"36"},{"size":3563,"mtime":1610383688903,"results":"40","hashOfConfig":"36"},{"size":798,"mtime":1610387135972,"results":"41","hashOfConfig":"36"},{"size":2429,"mtime":1610370105880,"results":"42","hashOfConfig":"36"},{"size":5026,"mtime":1610374787794,"results":"43","hashOfConfig":"36"},{"size":1394,"mtime":1610380188645,"results":"44","hashOfConfig":"36"},{"size":530,"mtime":1610449389434,"results":"45","hashOfConfig":"36"},{"size":410,"mtime":1610846178377,"results":"46","hashOfConfig":"47"},{"size":2725,"mtime":1611099611110,"results":"48","hashOfConfig":"47"},{"size":6787,"mtime":1611085097245,"results":"49","hashOfConfig":"47"},{"size":4869,"mtime":1611000426539,"results":"50","hashOfConfig":"47"},{"size":1977,"mtime":1611080366097,"results":"51","hashOfConfig":"47"},{"size":354,"mtime":1610311327024,"results":"52","hashOfConfig":"47"},{"size":5168,"mtime":1610731458356,"results":"53","hashOfConfig":"47"},{"size":4976,"mtime":1610482978015,"results":"54","hashOfConfig":"47"},{"size":3778,"mtime":1610885747506,"results":"55","hashOfConfig":"47"},{"size":3887,"mtime":1611005997173,"results":"56","hashOfConfig":"47"},{"size":897,"mtime":1610673337498,"results":"57","hashOfConfig":"47"},{"size":1195,"mtime":1610728248257,"results":"58","hashOfConfig":"47"},{"size":3065,"mtime":1610715829485,"results":"59","hashOfConfig":"47"},{"size":2172,"mtime":1610817572257,"results":"60","hashOfConfig":"47"},{"size":3709,"mtime":1610817508498,"results":"61","hashOfConfig":"47"},{"size":1025,"mtime":1610846547561,"results":"62","hashOfConfig":"47"},{"size":1200,"mtime":1611006028833,"results":"63","hashOfConfig":"47"},{"size":1622,"mtime":1611006068074,"results":"64","hashOfConfig":"47"},{"size":1551,"mtime":1610986885351,"results":"65","hashOfConfig":"47"},{"size":4987,"mtime":1610986288815,"results":"66","hashOfConfig":"47"},{"size":1057,"mtime":1610983211224,"results":"67","hashOfConfig":"47"},{"size":3238,"mtime":1611084693671,"results":"68","hashOfConfig":"47"},{"size":1957,"mtime":1611098672959,"results":"69","hashOfConfig":"47"},{"size":693,"mtime":1611099268583,"results":"70","hashOfConfig":"47"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xh7e0c",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"78"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"78"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},"15lbfgl",{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"97"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"97"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"97"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"97"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"97"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"97"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"97"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"97"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"97"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"97"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"97"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"97"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"97"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"97"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"97"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"97"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"97"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\IntelliJ Projects\\app\\src\\main\\front-end\\src\\index.js",[],"D:\\IntelliJ Projects\\app\\src\\main\\front-end\\src\\App.js",[],"D:\\IntelliJ Projects\\app\\src\\main\\front-end\\src\\Contexts\\ServerContext.js",["160"],"import React, { useState } from \"react\";\r\n\r\nexport const ServerContext = React.createContext();\r\n\r\nexport const ServerProvider = (props) => {\r\n    const [server, setServer] = useState(\"http://localhost:9191\");\r\n\r\n    return(\r\n        <ServerContext.Provider value={server}>\r\n            {props.children}\r\n            </ServerContext.Provider>\r\n    );\r\n};",["161","162"],"D:\\IntelliJ Projects\\app\\src\\main\\front-end\\src\\ProductSource\\Product.js",[],"D:\\IntelliJ Projects\\app\\src\\main\\front-end\\src\\ProductSource\\AddProduct.js",[],"D:\\IntelliJ Projects\\app\\src\\main\\front-end\\src\\Contexts\\ProductContext.js",["163"],"import React, {useState, useEffect, useContext} from \"react\";\r\nimport {ServerContext} from \"../Contexts/ServerContext\";\r\nimport axios from \"axios\";\r\n\r\n//http://localhost:9191/items/getItemsPage?pageNo=0&pageSize=3&sortBy=itemId\r\n\r\nexport const ProductContext = React.createContext();\r\n\r\nexport const ProductProvider = (props) => {\r\n    const[products, setProducts] = useState([]);\r\n    const server = useContext(ServerContext);\r\n\r\n    const FetchProducts = () => {\r\n        axios.get(`${server}/items/getItems`).then((res) => {\r\n        setProducts(res.data.itemList);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        FetchProducts();\r\n    }, [])\r\n\r\n    return(\r\n        <ProductContext.Provider value={products} >\r\n            {props.children}\r\n        </ProductContext.Provider>\r\n    );\r\n};","D:\\IntelliJ Projects\\app\\src\\main\\front-end\\src\\Auth\\Login.js",[],"D:\\IntelliJ Projects\\app\\src\\main\\front-end\\src\\Components\\CustomerSignUp.js",[],"D:\\IntelliJ Projects\\app\\src\\main\\front-end\\src\\Components\\Navbar.js",["164","165"],"import { Navbar, Nav, NavDropdown, NavLink, Container } from \"react-bootstrap\";\r\nimport React from \"react\";\r\n\r\nexport const NavBar = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand href=\"/\">Home</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"/addProduct\">Add Product</Nav.Link>\r\n            <Nav.Link href=\"#\">Space</Nav.Link>\r\n            <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\r\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#action/3.2\">\r\n                Another action\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n              <NavDropdown.Divider />\r\n              <NavDropdown.Item href=\"#action/3.4\">\r\n                Separated link\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n          </Nav>\r\n          <Nav>\r\n            <Nav.Link href=\"#deets\">More deets</Nav.Link>\r\n            <Nav.Link eventKey={2} href=\"/login\">\r\n              Login\r\n            </Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","D:\\IntelliJ Projects\\app\\src\\main\\front-end\\src\\ProductSource\\Image.js",["166"],"D:\\ReactPrjs\\front-end\\src\\index.js",[],["167","168"],"D:\\ReactPrjs\\front-end\\src\\App.js",[],"D:\\ReactPrjs\\front-end\\src\\ProductSource\\Product.js",["169","170","171","172","173","174","175","176","177","178","179","180","181"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { ProductContext } from \"../Contexts/ProductContext\";\r\nimport { ProductCoverImage } from \"./ProductCoverImage\";\r\nimport { FilterBar } from \"../Components/FilterBar\";\r\n\r\nexport const Product = () => {\r\n  const [\r\n    products,\r\n    setProducts,\r\n    currentPage,\r\n    setCurrentPage,\r\n    pageSize,\r\n    setPageSize,\r\n    sortBy,\r\n    setSortBy,\r\n    numberOfTotalPages,\r\n  ] = useContext(ProductContext);\r\n\r\n  //Array to show page numbers on pagination and change current page\r\n  const [pageNumberArray, setPageNumberArray] = useState([]);\r\n\r\n  //last page on pagination dashboard to update pageNumberArray when necessary\r\n  const [endOfPageSet, setEndOfPageSet] = useState(4);\r\n  console.log(endOfPageSet + \"ondof\");\r\n  console.log(currentPage + \"currrr\");\r\n  console.log(\"curr arrr: \" + pageNumberArray);\r\n  if (currentPage > endOfPageSet) {\r\n    console.log(endOfPageSet + \"changingondof\");\r\n    setEndOfPageSet((prev) => prev + 5);\r\n  }\r\n\r\n  if (currentPage < endOfPageSet - 4) {\r\n    setEndOfPageSet((prev) => prev - 5);\r\n  }\r\n\r\n  useEffect(() => {\r\n    var arr = [];\r\n    //If pressing prev and first element of pageNumberArray is bigger than or equal to current page number,\r\n    //load previous pages\r\n    if (endOfPageSet === currentPage && pageNumberArray[0] >= currentPage) {\r\n      for (\r\n        let index = endOfPageSet;\r\n        index >= endOfPageSet - 5 && index >= 0;\r\n        index--\r\n      ) {\r\n        arr.unshift(index);\r\n      }\r\n    } else if (\r\n      //If last page button is pressed\r\n      currentPage === numberOfTotalPages - 1 &&\r\n      pageNumberArray[pageNumberArray.length - 1] != currentPage\r\n    ) {\r\n      for (\r\n        let index = numberOfTotalPages - 1;\r\n        index >= endOfPageSet - 5 && index >= 0;\r\n        index--\r\n      ) {\r\n        arr.unshift(index);\r\n      }\r\n    } else {\r\n      for (\r\n        let index = currentPage;\r\n        index <= endOfPageSet && index < numberOfTotalPages;\r\n        index++\r\n      ) {\r\n        arr.push(index);\r\n      }\r\n    }\r\n    setPageNumberArray(arr);\r\n  }, [endOfPageSet, numberOfTotalPages]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-2 d-none d-lg-block\">\r\n          <div className=\"position-absolute start-0\">\r\n            <FilterBar />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-8 mx-auto\">\r\n          <div className=\"row \">\r\n            {products.map((item) => {\r\n              return (\r\n                <div\r\n                  className=\" col-md-5 col-lg-3 col-sm-6 justify-content-center p-2 m-2 position-relative \"\r\n                  key={item.itemId}\r\n                >\r\n                  <ProductCoverImage itemId={item.itemId} />\r\n                  <div className=\"text-secondary fs-4 mt-2\">\r\n                    ${item.itemPrice}\r\n                  </div>\r\n                  <p className=\"text-secondary fs-3 fw-normal\">\r\n                    {item.itemName}\r\n                  </p>\r\n                  <a\r\n                    href={`/product-details/${item.itemId}`}\r\n                    className=\"stretched-link\"\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"row fixed-bottom\">\r\n            <div className=\"col \">\r\n              <nav aria-label=\"Page navigation example\">\r\n                <ul className=\"pagination justify-content-center\">\r\n                  <li\r\n                    className={\r\n                      currentPage === 0 ? \"page-item disabled\" : \"page-item\"\r\n                    }\r\n                  >\r\n                    <a\r\n                      className=\"page-link\"\r\n                      href=\"#\"\r\n                      tabindex=\"-1\"\r\n                      aria-disabled=\"true\"\r\n                      onClick={(e) => {\r\n                        if (currentPage > 0) {\r\n                          setCurrentPage((prev) => prev - 1);\r\n                        }\r\n                      }}\r\n                    >\r\n                      Previous\r\n                    </a>\r\n                  </li>\r\n\r\n                  <li\r\n                    hidden={currentPage < 5 ? true : false}\r\n                    className=\"page-item\"\r\n                  >\r\n                    <a\r\n                      className=\"page-link\"\r\n                      href=\"#\"\r\n                      onClick={(e) => setCurrentPage(0)}\r\n                    >\r\n                      1...\r\n                    </a>\r\n                  </li>\r\n\r\n                  {pageNumberArray.map((pageNum) => {\r\n                    return (\r\n                      <li\r\n                        key={pageNum}\r\n                        className={\r\n                          currentPage === pageNum\r\n                            ? \"page-item active\"\r\n                            : \"page-item\"\r\n                        }\r\n                      >\r\n                        <a\r\n                          className=\"page-link\"\r\n                          href=\"#\"\r\n                          onClick={(e) => setCurrentPage(pageNum)}\r\n                        >\r\n                          {pageNum + 1}\r\n                        </a>\r\n                      </li>\r\n                    );\r\n                  })}\r\n\r\n                  <li\r\n                    hidden={\r\n                      numberOfTotalPages < 5 ||\r\n                      currentPage === numberOfTotalPages - 1 ||\r\n                      endOfPageSet >= numberOfTotalPages - 1\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    className=\"page-item\"\r\n                  >\r\n                    <a\r\n                      className=\"page-link\"\r\n                      href=\"#\"\r\n                      onClick={(e) => setCurrentPage(numberOfTotalPages - 1)}\r\n                    >\r\n                      ...{numberOfTotalPages}\r\n                    </a>\r\n                  </li>\r\n                  <li\r\n                    className={\r\n                      currentPage === numberOfTotalPages - 1\r\n                        ? \"page-item disabled\"\r\n                        : \"page-item\"\r\n                    }\r\n                  >\r\n                    <a\r\n                      className=\"page-link\"\r\n                      href=\"#\"\r\n                      onClick={(e) => {\r\n                        if (currentPage < numberOfTotalPages - 1) {\r\n                          setCurrentPage((prev) => prev + 1);\r\n                        }\r\n                      }}\r\n                    >\r\n                      Next\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </nav>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ReactPrjs\\front-end\\src\\ProductSource\\AddProduct.js",["182"],"import { useState, useContext, useMemo } from \"react\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport axios from \"axios\";\r\nimport { UploadProductImage } from \"./UploadProductImage\";\r\n\r\nexport const AddProduct = (props) => {\r\n  const server = useContext(ServerContext);\r\n  const [itemName, setItemName] = useState(\"\");\r\n  const [itemPrice, setItemPrice] = useState(\"0.0\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [inStock, setInStock] = useState(0);\r\n  const [featured, setFeatured] = useState(false);\r\n\r\n  const [validated, setValidated] = useState(false);\r\n\r\n  const handleSubmit = (event) => {\r\n    const form = event.currentTarget;\r\n\r\n    event.preventDefault();\r\n    if (form.checkValidity() === false) {\r\n    } else {\r\n      sendToServer(newItem);\r\n    }\r\n    setValidated((prev) => true);\r\n  };\r\n\r\n  const newItem = {\r\n    itemPrice: itemPrice,\r\n    itemName: itemName,\r\n    itemCategory: category,\r\n    itemFeatured: featured,\r\n    itemLeftInStock: inStock,\r\n  };\r\n\r\n  const [itemSaving, setItemSaving] = useState([]);\r\n\r\n  const sendToServer = (product) => {\r\n    axios\r\n      .post(`${server}/items/addItem`, newItem, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: localStorage.getItem(\"TokenJWT\"),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(\"item sent to server\");\r\n        console.log(response.data);\r\n        setItemSaving(response.data);\r\n        window.alert(\"Item saved!\");\r\n        props.history.push(\"/\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        window.alert(\"An error occured!!\");\r\n      });\r\n  };\r\n\r\n  /*const savedItem = useMemo(() => {\r\n    console.log(itemSaving);\r\n    return itemSaving;\r\n  }, [itemSaving]);\r\n*/\r\n  const validateForm = () => {\r\n    return (\r\n      itemName.length > 0 && itemPrice > 0 && category.length > 0 && inStock > 0\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"container pt-5\">\r\n      <div className=\"row justify-content-center\">\r\n        <form\r\n          className=\"col-6 g-3 needs-validation\"\r\n          noValidate\r\n          validated={validated}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          <div className=\"col-7\">\r\n            <label for=\"itemname\" className=\"form-label\">\r\n              Product Name\r\n            </label>\r\n            <input\r\n              autoFocus\r\n              className=\"form-control\"\r\n              id=\"itemname\"\r\n              type=\"text\"\r\n              value={itemName}\r\n              onChange={(e) => setItemName(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"col-7\">\r\n            <label for=\"itemprice\" className=\"form-label\">\r\n              Product Price\r\n            </label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"itemprice\"\r\n              type=\"text\"\r\n              onChange={(e) => setItemPrice(parseFloat(e.target.value))}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"col-7\">\r\n            <label for=\"itemcategory\" className=\"form-label\">\r\n              Product Category\r\n            </label>\r\n            <input\r\n              id=\"itemcategory\"\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              value={category}\r\n              onChange={(e) => setCategory(e.target.value)}\r\n              required\r\n            />\r\n\r\n            <div className=\"col-7\">\r\n              <label for=\"itemnuminstock\" className=\"form-label\">\r\n                Number of Product in Stock\r\n              </label>\r\n              <input\r\n                id=\"itemnuminstock\"\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                value={inStock}\r\n                onChange={(e) => {\r\n                  setInStock(e.target.value);\r\n                }}\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <div className=\"form-check\">\r\n              <label for=\"itemfeatured\" className=\"from-check-label\">\r\n                Product Featured\r\n              </label>\r\n              <input\r\n                className=\"form-check-input\"\r\n                id=\"itemfeatured\"\r\n                type=\"checkbox\"\r\n                value={featured}\r\n                onChange={(e) => setFeatured((prev) => !prev)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <button\r\n              className=\"btn btn-primary p-2\"\r\n              type=\"submit\"\r\n              disabled={!validateForm()}\r\n            >\r\n              Add Product\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <div className=\"col-4 my-auto\">\r\n          <UploadProductImage {...itemSaving} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ReactPrjs\\front-end\\src\\Contexts\\ProductContext.js",["183"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport axios from \"axios\";\r\n\r\n//http://localhost:9191/items/getItemsPage?pageNo=0&pageSize=3&sortBy=itemId\r\n\r\nexport const ProductContext = React.createContext();\r\n\r\nexport const ProductProvider = (props) => {\r\n  const [products, setProducts] = useState([]);\r\n  const server = useContext(ServerContext);\r\n\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const [pageSize, setPageSize] = useState(1);\r\n  const [sortBy, setSortBy] = useState(\"itemPrice\");\r\n  const [direction, setDirection] = useState(1);\r\n\r\n  const [minPriceFilter, setMinPriceFilter] = useState(0);\r\n  const [maxPriceFilter, setMaxPriceFilter] = useState(9999999);\r\n\r\n  const [numberOfTotalPages, setNumberOfTotalPages] = useState();\r\n\r\n  const FetchProducts = () => {\r\n    axios\r\n      .get(`${server}/items/getItemsPage`, {\r\n        params: {\r\n          pageNo: currentPage,\r\n          pageSize: pageSize,\r\n          sortBy: sortBy,\r\n          direction: direction,\r\n          min: minPriceFilter,\r\n          max: maxPriceFilter,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setProducts(res.data.data);\r\n        setNumberOfTotalPages(res.data.NumberOfTotalPages);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    FetchProducts();\r\n  }, [\r\n    currentPage,\r\n    pageSize,\r\n    sortBy,\r\n    direction,\r\n    minPriceFilter,\r\n    maxPriceFilter,\r\n  ]);\r\n\r\n  return (\r\n    <ProductContext.Provider\r\n      value={[\r\n        products,\r\n        setProducts,\r\n        currentPage,\r\n        setCurrentPage,\r\n        pageSize,\r\n        setPageSize,\r\n        sortBy,\r\n        setSortBy,\r\n        numberOfTotalPages,\r\n        direction,\r\n        setDirection,\r\n        minPriceFilter,\r\n        setMinPriceFilter,\r\n        maxPriceFilter,\r\n        setMaxPriceFilter,\r\n      ]}\r\n    >\r\n      {props.children}\r\n    </ProductContext.Provider>\r\n  );\r\n};\r\n","D:\\ReactPrjs\\front-end\\src\\Contexts\\ServerContext.js",["184"],"D:\\ReactPrjs\\front-end\\src\\ProductSource\\Image.js",["185","186","187","188"],"import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\n\r\nexport const Images = (props) => {\r\n  //  const [path, setPath] = useState([]);\r\n  //  const [loading, setLoading] = useState(true);\r\n  const server = useContext(ServerContext);\r\n\r\n  //Memorize previous images\r\n  const pics = useRef([]);\r\n  const [imgs, setImgs] = useState();\r\n\r\n  useEffect(() => {\r\n    FetchPath();\r\n  }, []);\r\n\r\n  const FetchPath = () => {\r\n    //Method returns a list of path locations for a particular item.\r\n    axios\r\n      .get(`${server}/items/getItemFileLocations/${props.itemId}`)\r\n      .then((res) => {\r\n        //  console.log(res.data.pathObjList);\r\n        //setPath(res.data.pathObjList);\r\n        //paths.current = res.data.pathObjList;\r\n        // setLoading(false);\r\n\r\n        /**\r\n         * For returned path list, load each image from server and add to (pics) Ref, destructure the Ref first and add loaded image\r\n         */\r\n        res.data.pathObjList.map((pathObj) => {\r\n          const src = `${server}/storage/getItemFiles/${pathObj.itemId}/${pathObj.path}`;\r\n          var imageToLoad = new Image();\r\n          imageToLoad.src = src;\r\n          imageToLoad.onload = () => {\r\n            //Keep memorizing images\r\n            pics.current = [...pics.current, imageToLoad];\r\n            // Add to state for re-render\r\n            setImgs(pics.current);\r\n          };\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  //Reference to the main img to change src with mainImage.current.src\r\n  const mainImage = useRef();\r\n\r\n  //Used to connect to next and previous buttons\r\n  const prev = useRef();\r\n  const next = useRef();\r\n\r\n  //first Index always 0\r\n  const [firstIndex, setFirstIndex] = useState(0);\r\n  const first = useRef(0);\r\n\r\n  //increase first index with modulus\r\n  function goNext() {\r\n    first.current = (first.current + 1) % imgs.length;\r\n    setFirstIndex(first.current);\r\n  }\r\n\r\n  //decrease first index with modulus\r\n  function goPrev() {\r\n    first.current = (first.current - 1 + imgs.length) % imgs.length;\r\n    setFirstIndex(first.current);\r\n  }\r\n\r\n  //if null return\r\n  if (!imgs) {\r\n    return null;\r\n  }\r\n  //get 3 consequent pics and put in a list\r\n  let listOf3DashImages;\r\n  if (imgs[firstIndex] != null) {\r\n    listOf3DashImages = [imgs[firstIndex]];\r\n  }\r\n  if (imgs[(firstIndex + 1) % imgs.length] != null) {\r\n    listOf3DashImages = [\r\n      imgs[firstIndex],\r\n      imgs[(firstIndex + 1) % imgs.length],\r\n    ];\r\n  }\r\n  if (imgs[(firstIndex + 2) % imgs.length] != null) {\r\n    listOf3DashImages = [\r\n      imgs[firstIndex],\r\n      imgs[(firstIndex + 1) % imgs.length],\r\n      imgs[(firstIndex + 2) % imgs.length],\r\n    ];\r\n  }\r\n  //function to change main picture using useRef hook\r\n  //make main image point to clicked image's src\r\n  //button id is same as image's place in array\r\n  const selectMain = (e) => {\r\n    const imgId = e.target.id;\r\n    mainImage.current.src = listOf3DashImages[imgId].src;\r\n  };\r\n\r\n  /**\r\n   * Two rows inside a container to seperate different functionalities from each other\r\n   */\r\n  return (\r\n    <div className=\"container \">\r\n      <div className=\"row row-cols-1 pb-2\">\r\n        <div className=\"col-10\">\r\n          <div className=\"card\">\r\n            <div className=\"img-container\">\r\n              <img\r\n                ref={mainImage}\r\n                alt=\"Product\"\r\n                className=\"card-img-top\"\r\n                src={imgs[0].src}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row row-cols-3 carousel slide\">\r\n        {listOf3DashImages.map((imgg, index) => {\r\n          return (\r\n            <div className=\"col-3 position-relative\" key={index}>\r\n              <div className=\"card\">\r\n                <div className=\"img-container\">\r\n                  <img alt=\"Product\" className=\"card-img-top\" src={imgg.src} />\r\n                  <a\r\n                    href=\"#\"\r\n                    role=\"button\"\r\n                    className=\"stretched-link\"\r\n                    id={index}\r\n                    onClick={selectMain}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n        <a\r\n          ref={prev}\r\n          onClick={goPrev}\r\n          class=\"carousel-control-prev\"\r\n          href=\"#carouselExampleIndicators\"\r\n          role=\"button\"\r\n          data-bs-slide=\"prev\"\r\n        >\r\n          <span\r\n            class=\"carousel-control-prev-icon bg-dark\"\r\n            aria-hidden=\"true\"\r\n          ></span>\r\n          <span class=\"visually-hidden\">Previous</span>\r\n        </a>\r\n        <a\r\n          ref={next}\r\n          onClick={goNext}\r\n          class=\"carousel-control-next\"\r\n          href=\"#carouselExampleIndicators\"\r\n          role=\"button\"\r\n          data-bs-slide=\"next\"\r\n        >\r\n          <span\r\n            class=\"carousel-control-next-icon bg-dark\"\r\n            aria-hidden=\"true\"\r\n          ></span>\r\n          <span class=\"visually-hidden\">Next</span>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ReactPrjs\\front-end\\src\\Components\\CustomerSignUp.js",[],"D:\\ReactPrjs\\front-end\\src\\Auth\\Login.js",[],"D:\\ReactPrjs\\front-end\\src\\Components\\Navbar.js",["189","190"],"import axios from \"axios\";\r\nimport React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport { LoginSuccessContext } from \"../Contexts/LoginSuccessContext\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport \"./navbar.css\";\r\n\r\nexport const NavBar = () => {\r\n  const [loggedIn] = useContext(LoginSuccessContext);\r\n  const [searchWord, setSearchWord] = useState();\r\n  const server = useContext(ServerContext);\r\n  const [searchResult, setSearchResult] = useState([]);\r\n\r\n  const dropdownList = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!searchWord) {\r\n      setSearchResult([]);\r\n    }\r\n\r\n    if (searchWord) {\r\n      SearchTyped(searchWord);\r\n    }\r\n  }, [searchWord]);\r\n\r\n  const SearchTyped = (word) => {\r\n    axios\r\n      .get(`${server}/items/searchItems/${word}`)\r\n      .then((res) => {\r\n        setSearchResult(res.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <div className=\"container-fluid\">\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarTogglerDemo03\"\r\n          aria-controls=\"navbarTogglerDemo03\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          Home\r\n        </a>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo03\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a\r\n                className=\"nav-link text-dark\"\r\n                aria-current=\"page\"\r\n                href=\"/addProduct\"\r\n              >\r\n                Add Product\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link text-dark\" href=\"#\">\r\n                Link\r\n              </a>\r\n            </li>\r\n          </ul>\r\n\r\n          <div className=\"dropdown\">\r\n            <form class=\"d-flex\">\r\n              <input\r\n                className=\"form-control me-2\"\r\n                value={searchWord}\r\n                onChange={(e) => {\r\n                  setSearchWord(e.target.value);\r\n                }}\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n                data-bs-toggle=\"dropdown\"\r\n              />\r\n\r\n              <button\r\n                class=\"btn btn-outline-success\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"dropdown\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                Search\r\n              </button>\r\n\r\n              <ul\r\n                ref={dropdownList}\r\n                style={searchResult.length < 1 ? { display: \"none\" } : null}\r\n                className=\"dropdown-menu\"\r\n              >\r\n                {searchResult\r\n                  ? searchResult.map((item) => {\r\n                      return (\r\n                        <li key={item.itemId}>\r\n                          <a\r\n                            className=\"dropdown-item\"\r\n                            href={`/product-details/${item.itemId}`}\r\n                          >\r\n                            {item.itemName}\r\n                          </a>\r\n                        </li>\r\n                      );\r\n                    })\r\n                  : null}\r\n              </ul>\r\n            </form>\r\n          </div>\r\n\r\n          {loggedIn ? (\r\n            <a className=\"nav-link text-dark\" href=\"/profile\">\r\n              Your Profile\r\n            </a>\r\n          ) : (\r\n            <a className=\"nav-link text-dark me-3\" href=\"/login\">\r\n              Login\r\n            </a>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n","D:\\ReactPrjs\\front-end\\src\\Contexts\\PathContext.js",["191","192"],"D:\\ReactPrjs\\front-end\\src\\ProductSource\\ProductCoverImage.js",["193"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport icon from \"../icon/product.svg\";\r\n\r\nexport const ProductCoverImage = (props) => {\r\n  const [path, setPath] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const server = useContext(ServerContext);\r\n\r\n  useEffect(() => {\r\n    FetchPath();\r\n  }, []);\r\n\r\n  const FetchPath = () => {\r\n    axios\r\n      .get(`${server}/items/getItemFileLocations/${props.itemId}`)\r\n      .then((res) => {\r\n        //  console.log(res.data.pathObjList);\r\n        if (res.data != null) {\r\n          setPath(res.data.pathObjList);\r\n          setLoading(false);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  let obj;\r\n  if (!loading) {\r\n    if (path != null) {\r\n      obj = path[0];\r\n    }\r\n  }\r\n\r\n  if (!obj) {\r\n    return <img src={icon} className=\"card-img-top\" alt=\"Product\" />;\r\n  }\r\n\r\n  return (\r\n    <img\r\n    style={{ height: \"20rem\", width:\"20rem\" }}\r\n      alt=\"Product\"\r\n      className=\"img-fluid\"\r\n      src={`http://localhost:9696/storage/getItemFiles/${obj.itemId}/${obj.path}`}\r\n    />\r\n  );\r\n};\r\n","D:\\ReactPrjs\\front-end\\src\\ProductSource\\UploadProductImage.js",["194","195"],"import React, { useState, useCallback, useEffect, useRef } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport axios from \"axios\";\r\n\r\nexport const UploadProductImage = ({ itemId }) => {\r\n  //Keep files in memory to between re-renders, access and set files with .current property\r\n  const file = useRef([]);\r\n  //To trigger re-render\r\n  const [pics, setPics] = useState([]);\r\n  //Convert files to images and store\r\n  const savedPics = useRef([]);\r\n\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    file.current = acceptedFiles;\r\n    console.log(\"file saved\");\r\n\r\n    /**\r\n     * Each file needs a new FileReader for asynchronous converting.\r\n     * After conversion destructure savedPics Ref and add newly converted image\r\n     * change setPic to trigger re-render\r\n     */\r\n    file.current.map((eachfile) => {\r\n      let reader = new FileReader();\r\n      reader.readAsDataURL(eachfile);\r\n      reader.onload = () => {\r\n        savedPics.current = [...savedPics.current, reader.result];\r\n        console.log(savedPics.current);\r\n        setPics([reader.result]);\r\n      };\r\n    });\r\n\r\n    // Do something with the files\r\n  }, []);\r\n\r\n  // When item saved to database and id retrieved, run Postfiles function\r\n  useEffect(() => {\r\n    //   console.log(itemId);\r\n    if (file != null && itemId != null) {\r\n      console.log(itemId + \" not null\");\r\n      PostFiles(file.current, itemId);\r\n    }\r\n  }, [itemId]);\r\n\r\n  const PostFiles = (fileArray, itemId) => {\r\n    console.log(itemId);\r\n    fileArray.map((eachFileInArray) => {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", eachFileInArray);\r\n      if (itemId != null) {\r\n        axios\r\n          .post(`http://localhost:9191/storage/save/${itemId}`, formData, {\r\n            headers: {\r\n              \"Content-Type\": \"multipart/form-data\",\r\n            },\r\n          })\r\n          .then((res) => console.log(\"file sent\"))\r\n          .catch((err) => console.log(err));\r\n      }\r\n    });\r\n  };\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n  console.log(pics);\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row row-cols-3 carousel slide\">\r\n        {savedPics.current.map((p, index) => {\r\n          return (\r\n            <div className=\"col\" key={index}>\r\n              <div className=\"card\">\r\n                <div className=\"img-container\">\r\n                  <img alt=\"Product\" className=\"card-img-top\" src={p} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"row row-cols-1 pb-2\">\r\n        <div className=\"position-relative p-5 bg-secondary\" {...getRootProps()}>\r\n          <input\r\n            className=\"bg-primary p-5 stretched-link\"\r\n            {...getInputProps()}\r\n          />\r\n          {isDragActive ? (\r\n            <p>Drop the files here ...</p>\r\n          ) : (\r\n            <p>Drag 'n' drop product pictures here, or click to select files</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ReactPrjs\\front-end\\src\\ProductSource\\ProductDetails.js",["196"],"import { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Images } from \"./Image\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\n\r\nexport const ProductDetails = (props) => {\r\n  const [itemDetails, setItemDetails] = useState([]);\r\n  const server = useContext(ServerContext);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${server}/itemDetails/getItemDetails/${props.match.params.itemId}`)\r\n      .then((res) => {\r\n        console.log(res.data.itemDetailsList);\r\n        setItemDetails(res.data.itemDetailsList);\r\n      });\r\n  }, [props.match.params.itemId]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-4 col-md-5 col-sm-8 m-4\">\r\n          <Images itemId={props.match.params.itemId} />\r\n        </div>\r\n        <div className=\"col-ld-6 col-md-5 mt-2\">\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">Properties</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {itemDetails\r\n                ? itemDetails.map((item, index) => {\r\n                    return (\r\n                      <tr className=\"col\" key={index}>\r\n                        <td className=\"col-md-3 col-sm-5\">{item.nameOf}</td>\r\n                        <td className=\"col-md-3 col-sm-5\">\r\n                          {\" : \" + item.valueOf}\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })\r\n                : null}\r\n            </tbody>\r\n          </table>\r\n          <a\r\n            className=\"btn btn-primary\"\r\n            role=\"button\"\r\n            href={`/edit-product-description/${props.match.params.itemId}`}\r\n          >\r\n            Edit Item Properties\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n/*\r\n{Object.keys(itemDetails).map((currentKey, index) => {\r\n    return (\r\n      <tr className=\"col\" key={index}>\r\n        <td className=\"col-md-3 col-sm-5\">{currentKey} :</td>\r\n        <td className=\"col-md-3 col-sm-5\">\r\n          {itemDetails[currentKey]}\r\n        </td>\r\n      </tr>\r\n    );\r\n  })}\r\n  */\r\n","D:\\ReactPrjs\\front-end\\src\\ProductSource\\EditProductDescription.js",["197"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport axios from \"axios\";\r\n\r\nexport const EditProductDescription = (props) => {\r\n  const [inputFields, setInputFields] = useState([{ nameOf: \"\", valueOf: \"\" }]);\r\n\r\n  const server = useContext(ServerContext);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${server}/itemDetails/getItemDetails/${props.match.params.itemId}`)\r\n      .then((res) => {\r\n        console.log(res.data.itemDetailsList);\r\n        if (res.data.itemDetailsList) {\r\n          setInputFields(res.data.itemDetailsList);\r\n        }\r\n      });\r\n  }, [props.match.params.itemId]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(inputFields);\r\n\r\n    const itemDetailsToSend = {\r\n      itemId: props.match.params.itemId,\r\n      itemDetailsList: inputFields,\r\n    };\r\n\r\n    console.log(itemDetailsToSend);\r\n\r\n    axios\r\n      .post(`${server}/itemDetails/saveItemDetails`, itemDetailsToSend, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        window.alert(\"Item details saved!\");\r\n        props.history.push(`/product-details/${props.match.params.itemId}`);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const addField = () => {\r\n    setInputFields([...inputFields, { nameOf: \"\", valueOf: \"\" }]);\r\n  };\r\n\r\n  const removeField = (index) => {\r\n    const values = [...inputFields];\r\n    values.splice(index, 1);\r\n    setInputFields(values);\r\n  };\r\n\r\n  function handleInputChange(event, index) {\r\n    const values = [...inputFields];\r\n    values[index][event.target.name] = event.target.value;\r\n    setInputFields(values);\r\n  }\r\n\r\n  if (!inputFields) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container \">\r\n      <h2 className=\"text-center\">Enter/Edit Product Properties</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        {inputFields.map((field, index) => {\r\n          return (\r\n            <div className=\"row my-4\" key={index}>\r\n              <div className=\"col-3 form-floating\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"nameOf\"\r\n                  id=\"floatingNameOf\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Property\"\r\n                  value={field.nameOf}\r\n                  onChange={(e) => handleInputChange(e, index)}\r\n                />\r\n                <label for=\"floatingNameOf\">Property Name</label>\r\n              </div>\r\n              <div className=\"col-7 form-floating\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"valueOf\"\r\n                  id=\"floatingValueOf\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Property Value\"\r\n                  value={field.valueOf}\r\n                  onChange={(e) => handleInputChange(e, index)}\r\n                />\r\n                <label for=\"floatingValueOf\">Property Value</label>\r\n              </div>\r\n              <div className=\"col-2\">\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  type=\"button\"\r\n                  onClick={() => removeField(index)}\r\n                >\r\n                  Remove Field\r\n                </button>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Submit\r\n        </button>\r\n        <button\r\n          className=\"btn btn-secondary mx-5\"\r\n          type=\"button\"\r\n          onClick={addField}\r\n        >\r\n          Add New Field\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ReactPrjs\\front-end\\src\\Components\\LoginModal.js",["198","199"],"import React, { useState, useEffect } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nfunction LoginModal({ history, isModalOpen }) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [timer, setTimer] = useState(3);\r\n  const [title, setTitle] = useState(\"Login successful...\");\r\n\r\n  useEffect(() => {\r\n    setIsOpen(isModalOpen);\r\n  }, [isModalOpen]);\r\n\r\n  const showModal = () => {\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const hideModal = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const modalLoaded = () => {\r\n    setInterval(() => {\r\n      setTimer((prev) => prev - 1);\r\n    }, 1000);\r\n\r\n    setTimeout(() => {\r\n      history.push(\"/\");\r\n    }, 3000);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal show={isOpen} onHide={hideModal} onEntered={modalLoaded}>\r\n        <Modal.Header>\r\n          <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Redirecting... {timer}</Modal.Body>\r\n        <Modal.Footer></Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoginModal;\r\n","D:\\ReactPrjs\\front-end\\src\\Contexts\\LoginSuccessContext.js",["200","201"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport axios from \"axios\";\r\n\r\nexport const LoginSuccessContext = React.createContext();\r\n\r\nexport const LoginSuccessProvider = (props) => {\r\n  const server = useContext(ServerContext);\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [customerFK, setCustomerFK] = useState(-1);\r\n\r\n  useEffect(() => {\r\n    checkAuthorization();\r\n  }, []);\r\n\r\n  const checkAuthorization = () => {\r\n    axios\r\n      .get(`${server}/auth/checkJWT`, {\r\n        headers: {\r\n          Authorization: localStorage.getItem(\"TokenJWT\"),\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          console.log(\"logged in\");\r\n\r\n          var FK = res.headers.cookie.replace(\"custFK=\", \"\");\r\n          console.log(\"FK: \" + FK);\r\n          sessionStorage.setItem(\"custFK\", FK);\r\n          setCustomerFK(FK);\r\n          setLoggedIn(true);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <LoginSuccessContext.Provider value={[loggedIn, setLoggedIn]}>\r\n      {props.children}\r\n    </LoginSuccessContext.Provider>\r\n  );\r\n};\r\n","D:\\ReactPrjs\\front-end\\src\\Contexts\\CustomerProfileContext.js",["202","203"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport axios from \"axios\";\r\nimport { LoginSuccessContext } from \"../Contexts/LoginSuccessContext\";\r\n\r\nexport const CustomerProfileContext = React.createContext();\r\n\r\nexport const CustomerProfileProvider = (props) => {\r\n  const server = useContext(ServerContext);\r\n  const [customerProfile, setCustomerProfile] = useState([]);\r\n  const [userProfile, setUserProfile] = useState([]);\r\n  const [loggedIn, setLoggedIn] = useContext(LoginSuccessContext);\r\n\r\n  useEffect(() => {\r\n    fetchUserProfile();\r\n  }, [loggedIn]);\r\n\r\n  /**\r\n   * First get customer profile from customer-service , then get user profile using foreign key in\r\n   *  returned customer object\r\n   */\r\n  const fetchUserProfile = (props) => {\r\n    if (sessionStorage.getItem(\"custFK\")) {\r\n      axios\r\n        .get(`${server}/customer/${sessionStorage.getItem(\"custFK\")}`)\r\n        .then((res) => {\r\n\r\n          axios\r\n            .get(`${server}/auth/getUser/${res.data.userFK}`, {\r\n              headers: {\r\n                Authorization: localStorage.getItem(\"TokenJWT\"),\r\n              },\r\n            })\r\n            .then((response) => {\r\n              setUserProfile(response.data);\r\n            });\r\n\r\n          setCustomerProfile(res.data);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CustomerProfileContext.Provider\r\n      value={[customerProfile, userProfile, setCustomerProfile, setUserProfile]}\r\n    >\r\n      {props.children}\r\n    </CustomerProfileContext.Provider>\r\n  );\r\n};\r\n","D:\\ReactPrjs\\front-end\\src\\Components\\CustomerProfile.js",["204","205","206","207","208"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport { LoginSuccessContext } from \"../Contexts/LoginSuccessContext\";\r\nimport { CustomerProfileContext } from \"../Contexts/CustomerProfileContext\";\r\nimport axios from \"axios\";\r\n\r\nexport const CustomerProfile = (props) => {\r\n  const server = useContext(ServerContext);\r\n  const [loggedIn, setLoggedIn] = useContext(LoginSuccessContext);\r\n  const [customerProfile, userProfile] = useContext(CustomerProfileContext);\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"row row-cols-1 \">\r\n        <div className=\"col \">\r\n          <p id=\"customerName\">Name: {customerProfile.customerName}</p>\r\n        </div>\r\n        <div className=\"col\">\r\n          <p id=\"eMail\">E-Mail: {customerProfile.customerEMail}</p>\r\n        </div>\r\n        <div className=\"col\">\r\n          <p id=\"username\">User Name: {userProfile.userName}</p>\r\n        </div>\r\n        <div className=\"col\">\r\n          <a className=\"btn btn-primary\" href=\"/edit-profile\" role=\"button\">\r\n            Edit\r\n          </a>\r\n          <button\r\n            className=\"btn btn-primary ms-2\"\r\n            onClick={(e) => {\r\n              localStorage.removeItem(\"TokenJWT\");\r\n              sessionStorage.removeItem(\"custFK\");\r\n              setLoggedIn(false);\r\n              props.history.push(\"/\");\r\n            }}\r\n            type=\"button\"\r\n          >\r\n            Logout\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ReactPrjs\\front-end\\src\\Components\\EditCustomerProfile.js",["209","210"],"import React, { useState, useContext, useEffect, useRef } from \"react\";\r\nimport { ServerContext } from \"../Contexts/ServerContext\";\r\nimport { LoginSuccessContext } from \"../Contexts/LoginSuccessContext\";\r\nimport { CustomerProfileContext } from \"../Contexts/CustomerProfileContext\";\r\nimport axios from \"axios\";\r\nimport EditSuccessModal from \"./EditSuccessModal\";\r\n\r\nexport const EditCustomerProfile = (props) => {\r\n  const server = useContext(ServerContext);\r\n  const [loggedIn, setLoggedIn] = useContext(LoginSuccessContext);\r\n  const [\r\n    customerProfile,\r\n    userProfile,\r\n    setCustomerProfile,\r\n    setUserProfile,\r\n  ] = useContext(CustomerProfileContext);\r\n\r\n  const [name, setName] = useState();\r\n  const [email, setEMail] = useState();\r\n  const [username, setUserName] = useState();\r\n\r\n  const [editProfileSuccess, setEditProfileSuccess] = useState(false);\r\n  const [editUserSuccess, setEditUserSuccess] = useState(false);\r\n\r\n  const userNameRef = useRef();\r\n\r\n  useEffect(() => {\r\n    setName(customerProfile.customerName);\r\n    setEMail(customerProfile.customerEMail);\r\n    setUserName(userProfile.userName);\r\n  }, [customerProfile, userProfile]);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    var currentUserName = userProfile.userName;\r\n    const uProfile = {\r\n      userId: userProfile.userId,\r\n      password: userProfile.password,\r\n      userName: username,\r\n      customerFK: userProfile.customerFK,\r\n    };\r\n\r\n    var cProfile = customerProfile;\r\n    cProfile.customerEMail = email;\r\n    cProfile.customerName = name;\r\n\r\n    //var cProfile = [...customerProfile];\r\n    console.log(uProfile);\r\n    console.log(cProfile);\r\n\r\n    if (uProfile.userName !== currentUserName) {\r\n      axios\r\n        .post(`${server}/auth/updateUserReact`, uProfile, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: localStorage.getItem(\"TokenJWT\"),\r\n          },\r\n        })\r\n        .then((res) => {\r\n          console.log(\"User updated: \" + res);\r\n          localStorage.removeItem(\"TokenJWT\");\r\n          setLoggedIn(false);\r\n\r\n          setEditUserSuccess(true);\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"User update failed : \" + err);\r\n          userNameRef.current.className =\r\n            \"col-6 alert alert-danger mx-auto fw-normal fs-3 my-2 text-dark text-center\";\r\n          setEditUserSuccess(false);\r\n        });\r\n    } else {\r\n      console.log(\"values equal\");\r\n      setEditUserSuccess(true);\r\n    }\r\n\r\n    axios\r\n      .post(`${server}/customer/save`, cProfile, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: localStorage.getItem(\"TokenJWT\"),\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(\"Customer updated: \" + res);\r\n        setEditProfileSuccess(true);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Customer update failed : \" + err);\r\n      });\r\n  }\r\n\r\n  if (editUserSuccess && editProfileSuccess && loggedIn) {\r\n    props.history.push(\"/profile\");\r\n  }\r\n\r\n  //Customer name changed and logged out, new login required\r\n  if (editUserSuccess && editProfileSuccess && !loggedIn) {\r\n    // setCustomerProfile();\r\n    return <EditSuccessModal isModalOpen={true} history={props.history} />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <form noValidate onSubmit={handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col col-lg-6 col-md-8 col-sm-10 mx-auto\">\r\n            <label className=\"form-label\">Name</label>\r\n            <input\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col col-lg-6 col-md-8 col-sm-10 mx-auto\">\r\n            <label className=\"form-label\">E-Mail</label>\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEMail(e.target.value)}\r\n              className=\"form-control\"\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col col-lg-6 col-md-8 col-sm-10 mx-auto\">\r\n            <label className=\"form-label\">User Name</label>\r\n            <input\r\n              type=\"text\"\r\n              value={username}\r\n              onChange={(e) => setUserName(e.target.value)}\r\n              className=\"form-control\"\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <div ref={userNameRef} className=\"visually-hidden\" role=\"alert\">\r\n          User Name already exists! Select another one!\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col col-lg-6 col-md-8 col-sm-10 mx-auto mt-3\">\r\n            <button className=\"btn btn-primary\" type=\"submit\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ReactPrjs\\front-end\\src\\Components\\EditSuccessModal.js",["211","212"],"import React, { useState, useEffect } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nfunction EditSuccessModal({ history, isModalOpen }) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [timer, setTimer] = useState(3);\r\n  const [title, setTitle] = useState(\"Edit successful, Login Required...\");\r\n\r\n  useEffect(() => {\r\n    setIsOpen(isModalOpen);\r\n  }, [isModalOpen]);\r\n\r\n  const showModal = () => {\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const hideModal = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const modalLoaded = () => {\r\n    setInterval(() => {\r\n      setTimer((prev) => prev - 1);\r\n    }, 1000);\r\n\r\n    setTimeout(() => {\r\n      history.push(\"/login\");\r\n    }, 3000);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal show={isOpen} onHide={hideModal} onEntered={modalLoaded}>\r\n        <Modal.Header>\r\n          <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Redirecting... {timer}</Modal.Body>\r\n        <Modal.Footer></Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EditSuccessModal;\r\n","D:\\ReactPrjs\\front-end\\src\\Components\\FilterBar.js",["213","214","215","216","217","218","219","220","221","222"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { ProductContext } from \"../Contexts/ProductContext\";\r\n\r\nexport const FilterBar = () => {\r\n  const [\r\n    products,\r\n    setProducts,\r\n    currentPage,\r\n    setCurrentPage,\r\n    pageSize,\r\n    setPageSize,\r\n    sortBy,\r\n    setSortBy,\r\n    numberOfTotalPages,\r\n    direction,\r\n    setDirection,\r\n    minPriceFilter,\r\n    setMinPriceFilter,\r\n    maxPriceFilter,\r\n    setMaxPriceFilter,\r\n  ] = useContext(ProductContext);\r\n  const [min, setMin] = useState();\r\n  const [max, setMax] = useState();\r\n  /*\r\n  useEffect(() => {\r\n    setPageSize(itemPerPage);\r\n  }, [itemPerPage]);\r\n*/\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    setMinPriceFilter(min);\r\n    setMaxPriceFilter(max);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-7\">\r\n          <div class=\"input-group mb-3\">\r\n            <label class=\"input-group-text\" for=\"inputGroupSelect02\">\r\n              Number of Items Each Page\r\n            </label>\r\n            <select\r\n              value={pageSize}\r\n              onChange={(e) => setPageSize(e.target.value)}\r\n              class=\"form-select\"\r\n              id=\"inputGroupSelect02\"\r\n            >\r\n              <option value=\"1\" selected>\r\n                1\r\n              </option>\r\n              <option value=\"2\">2</option>\r\n              <option value=\"5\">5</option>\r\n              <option value=\"10\">10</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div class=\"input-group mb-3\">\r\n            <label class=\"input-group-text\" for=\"inputGroupSelect02\">\r\n              Sort By\r\n            </label>\r\n            <select\r\n              value={direction}\r\n              onChange={(e) => setDirection(e.target.value)}\r\n              class=\"form-select\"\r\n              id=\"inputGroupSelect02\"\r\n            >\r\n              <option value=\"1\" selected>\r\n                Price: Low to High\r\n              </option>\r\n              <option value=\"2\">Price: High to Low</option>\r\n            </select>\r\n          </div>\r\n          <form noValidate onSubmit={handleSubmit}>\r\n            <div className=\"input-group \">\r\n              <span className=\"input-group-text\">Price$</span>\r\n              <input\r\n                type=\"text\"\r\n                aria-label=\"Min Price\"\r\n                className=\"form-control\"\r\n                placeholder=\"Min\"\r\n                value={min}\r\n                onChange={(e) => {\r\n                  if (e.target.value) {\r\n                    setMin(parseInt(e.target.value));\r\n                  }\r\n                }}\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                aria-label=\"Max Price\"\r\n                className=\"form-control\"\r\n                placeholder=\"Max\"\r\n                value={max}\r\n                onChange={(e) => {\r\n                  if (e.target.value) {\r\n                    setMax(parseFloat(e.target.value));\r\n                  }\r\n                }}\r\n              />\r\n              <button className=\"btn btn-primary \" type=\"submit\">\r\n                Filter\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ReactPrjs\\front-end\\src\\Auth\\PasswordResetRequest.js",[],"D:\\ReactPrjs\\front-end\\src\\Auth\\PasswordReset.js",["223","224","225"],{"ruleId":"226","severity":1,"message":"227","line":6,"column":20,"nodeType":"228","messageId":"229","endLine":6,"endColumn":29},{"ruleId":"230","replacedBy":"231"},{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","severity":1,"message":"235","line":21,"column":8,"nodeType":"236","endLine":21,"endColumn":10,"suggestions":"237"},{"ruleId":"226","severity":1,"message":"238","line":1,"column":36,"nodeType":"228","messageId":"229","endLine":1,"endColumn":43},{"ruleId":"226","severity":1,"message":"239","line":1,"column":45,"nodeType":"228","messageId":"229","endLine":1,"endColumn":54},{"ruleId":"226","severity":1,"message":"240","line":5,"column":12,"nodeType":"228","messageId":"229","endLine":5,"endColumn":29},{"ruleId":"230","replacedBy":"241"},{"ruleId":"232","replacedBy":"242"},{"ruleId":"226","severity":1,"message":"243","line":9,"column":5,"nodeType":"228","messageId":"229","endLine":9,"endColumn":16},{"ruleId":"226","severity":1,"message":"244","line":12,"column":5,"nodeType":"228","messageId":"229","endLine":12,"endColumn":13},{"ruleId":"226","severity":1,"message":"245","line":13,"column":5,"nodeType":"228","messageId":"229","endLine":13,"endColumn":16},{"ruleId":"226","severity":1,"message":"246","line":14,"column":5,"nodeType":"228","messageId":"229","endLine":14,"endColumn":11},{"ruleId":"226","severity":1,"message":"247","line":15,"column":5,"nodeType":"228","messageId":"229","endLine":15,"endColumn":14},{"ruleId":"248","severity":1,"message":"249","line":51,"column":51,"nodeType":"250","messageId":"251","endLine":51,"endColumn":53},{"ruleId":"234","severity":1,"message":"252","line":70,"column":6,"nodeType":"236","endLine":70,"endColumn":40,"suggestions":"253"},{"ruleId":"254","severity":1,"message":"255","line":95,"column":19,"nodeType":"256","endLine":98,"endColumn":21},{"ruleId":"257","severity":1,"message":"258","line":112,"column":21,"nodeType":"256","endLine":122,"endColumn":22},{"ruleId":"257","severity":1,"message":"258","line":131,"column":21,"nodeType":"256","endLine":135,"endColumn":22},{"ruleId":"257","severity":1,"message":"258","line":150,"column":25,"nodeType":"256","endLine":154,"endColumn":26},{"ruleId":"257","severity":1,"message":"258","line":171,"column":21,"nodeType":"256","endLine":175,"endColumn":22},{"ruleId":"257","severity":1,"message":"258","line":186,"column":21,"nodeType":"256","endLine":194,"endColumn":22},{"ruleId":"226","severity":1,"message":"259","line":1,"column":32,"nodeType":"228","messageId":"229","endLine":1,"endColumn":39},{"ruleId":"234","severity":1,"message":"235","line":44,"column":6,"nodeType":"236","endLine":51,"endColumn":4,"suggestions":"260"},{"ruleId":"226","severity":1,"message":"227","line":6,"column":20,"nodeType":"228","messageId":"229","endLine":6,"endColumn":29},{"ruleId":"234","severity":1,"message":"261","line":16,"column":6,"nodeType":"236","endLine":16,"endColumn":8,"suggestions":"262"},{"ruleId":"263","severity":1,"message":"264","line":31,"column":44,"nodeType":"265","messageId":"266","endLine":31,"endColumn":46},{"ruleId":"254","severity":1,"message":"255","line":125,"column":19,"nodeType":"256","endLine":131,"endColumn":21},{"ruleId":"257","severity":1,"message":"258","line":125,"column":19,"nodeType":"256","endLine":131,"endColumn":21},{"ruleId":"234","severity":1,"message":"267","line":23,"column":6,"nodeType":"236","endLine":23,"endColumn":18,"suggestions":"268"},{"ruleId":"257","severity":1,"message":"258","line":63,"column":15,"nodeType":"256","endLine":63,"endColumn":58},{"ruleId":"226","severity":1,"message":"269","line":11,"column":18,"nodeType":"228","messageId":"229","endLine":11,"endColumn":27},{"ruleId":"234","severity":1,"message":"261","line":15,"column":6,"nodeType":"236","endLine":15,"endColumn":8,"suggestions":"270"},{"ruleId":"234","severity":1,"message":"261","line":13,"column":6,"nodeType":"236","endLine":13,"endColumn":8,"suggestions":"271"},{"ruleId":"263","severity":1,"message":"264","line":22,"column":33,"nodeType":"265","messageId":"266","endLine":22,"endColumn":35},{"ruleId":"263","severity":1,"message":"264","line":46,"column":37,"nodeType":"265","messageId":"266","endLine":46,"endColumn":39},{"ruleId":"234","severity":1,"message":"272","line":17,"column":6,"nodeType":"236","endLine":17,"endColumn":33,"suggestions":"273"},{"ruleId":"234","severity":1,"message":"272","line":19,"column":6,"nodeType":"236","endLine":19,"endColumn":33,"suggestions":"274"},{"ruleId":"226","severity":1,"message":"275","line":7,"column":17,"nodeType":"228","messageId":"229","endLine":7,"endColumn":25},{"ruleId":"226","severity":1,"message":"276","line":13,"column":9,"nodeType":"228","messageId":"229","endLine":13,"endColumn":18},{"ruleId":"226","severity":1,"message":"277","line":10,"column":10,"nodeType":"228","messageId":"229","endLine":10,"endColumn":20},{"ruleId":"234","severity":1,"message":"278","line":14,"column":6,"nodeType":"236","endLine":14,"endColumn":8,"suggestions":"279"},{"ruleId":"226","severity":1,"message":"280","line":12,"column":20,"nodeType":"228","messageId":"229","endLine":12,"endColumn":31},{"ruleId":"234","severity":1,"message":"281","line":16,"column":6,"nodeType":"236","endLine":16,"endColumn":16,"suggestions":"282"},{"ruleId":"226","severity":1,"message":"283","line":1,"column":17,"nodeType":"228","messageId":"229","endLine":1,"endColumn":25},{"ruleId":"226","severity":1,"message":"284","line":1,"column":39,"nodeType":"228","messageId":"229","endLine":1,"endColumn":48},{"ruleId":"226","severity":1,"message":"285","line":5,"column":8,"nodeType":"228","messageId":"229","endLine":5,"endColumn":13},{"ruleId":"226","severity":1,"message":"286","line":8,"column":9,"nodeType":"228","messageId":"229","endLine":8,"endColumn":15},{"ruleId":"226","severity":1,"message":"287","line":9,"column":10,"nodeType":"228","messageId":"229","endLine":9,"endColumn":18},{"ruleId":"226","severity":1,"message":"288","line":14,"column":5,"nodeType":"228","messageId":"229","endLine":14,"endColumn":23},{"ruleId":"226","severity":1,"message":"289","line":15,"column":5,"nodeType":"228","messageId":"229","endLine":15,"endColumn":19},{"ruleId":"226","severity":1,"message":"275","line":7,"column":17,"nodeType":"228","messageId":"229","endLine":7,"endColumn":25},{"ruleId":"226","severity":1,"message":"276","line":13,"column":9,"nodeType":"228","messageId":"229","endLine":13,"endColumn":18},{"ruleId":"226","severity":1,"message":"284","line":1,"column":27,"nodeType":"228","messageId":"229","endLine":1,"endColumn":36},{"ruleId":"226","severity":1,"message":"290","line":6,"column":5,"nodeType":"228","messageId":"229","endLine":6,"endColumn":13},{"ruleId":"226","severity":1,"message":"243","line":7,"column":5,"nodeType":"228","messageId":"229","endLine":7,"endColumn":16},{"ruleId":"226","severity":1,"message":"291","line":8,"column":5,"nodeType":"228","messageId":"229","endLine":8,"endColumn":16},{"ruleId":"226","severity":1,"message":"292","line":9,"column":5,"nodeType":"228","messageId":"229","endLine":9,"endColumn":19},{"ruleId":"226","severity":1,"message":"246","line":12,"column":5,"nodeType":"228","messageId":"229","endLine":12,"endColumn":11},{"ruleId":"226","severity":1,"message":"247","line":13,"column":5,"nodeType":"228","messageId":"229","endLine":13,"endColumn":14},{"ruleId":"226","severity":1,"message":"293","line":14,"column":5,"nodeType":"228","messageId":"229","endLine":14,"endColumn":23},{"ruleId":"226","severity":1,"message":"294","line":17,"column":5,"nodeType":"228","messageId":"229","endLine":17,"endColumn":19},{"ruleId":"226","severity":1,"message":"295","line":19,"column":5,"nodeType":"228","messageId":"229","endLine":19,"endColumn":19},{"ruleId":"226","severity":1,"message":"296","line":1,"column":20,"nodeType":"228","messageId":"229","endLine":1,"endColumn":26},{"ruleId":"226","severity":1,"message":"297","line":7,"column":20,"nodeType":"228","messageId":"229","endLine":7,"endColumn":31},{"ruleId":"234","severity":1,"message":"298","line":22,"column":6,"nodeType":"236","endLine":22,"endColumn":16,"suggestions":"299"},"no-unused-vars","'setServer' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["300"],"no-negated-in-lhs",["301"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'FetchProducts'. Either include it or remove the dependency array.","ArrayExpression",["302"],"'NavLink' is defined but never used.","'Container' is defined but never used.","'itemFileLocations' is assigned a value but never used.",["300"],["301"],"'setProducts' is assigned a value but never used.","'pageSize' is assigned a value but never used.","'setPageSize' is assigned a value but never used.","'sortBy' is assigned a value but never used.","'setSortBy' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'currentPage' and 'pageNumberArray'. Either include them or remove the dependency array.",["303"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useMemo' is defined but never used.",["304"],"React Hook useEffect has a missing dependency: 'FetchPath'. Either include it or remove the dependency array.",["305"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'SearchTyped'. Either include it or remove the dependency array.",["306"],"'setItemId' is assigned a value but never used.",["307"],["308"],"React Hook useEffect has a missing dependency: 'server'. Either include it or remove the dependency array.",["309"],["310"],"'setTitle' is assigned a value but never used.","'showModal' is assigned a value but never used.","'customerFK' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'checkAuthorization'. Either include it or remove the dependency array.",["311"],"'setLoggedIn' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchUserProfile'. Either include it or remove the dependency array.",["312"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'server' is assigned a value but never used.","'loggedIn' is assigned a value but never used.","'setCustomerProfile' is assigned a value but never used.","'setUserProfile' is assigned a value but never used.","'products' is assigned a value but never used.","'currentPage' is assigned a value but never used.","'setCurrentPage' is assigned a value but never used.","'numberOfTotalPages' is assigned a value but never used.","'minPriceFilter' is assigned a value but never used.","'maxPriceFilter' is assigned a value but never used.","'useRef' is defined but never used.","'setPassword' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.match.params.uuid' and 'server'. Either include them or remove the dependency array.",["313"],"no-global-assign","no-unsafe-negation",{"desc":"314","fix":"315"},{"desc":"316","fix":"317"},{"desc":"318","fix":"319"},{"desc":"320","fix":"321"},{"desc":"322","fix":"323"},{"desc":"320","fix":"324"},{"desc":"320","fix":"325"},{"desc":"326","fix":"327"},{"desc":"326","fix":"328"},{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},{"desc":"333","fix":"334"},"Update the dependencies array to be: [FetchProducts]",{"range":"335","text":"336"},"Update the dependencies array to be: [currentPage, endOfPageSet, numberOfTotalPages, pageNumberArray]",{"range":"337","text":"338"},"Update the dependencies array to be: [currentPage, pageSize, sortBy, direction, minPriceFilter, maxPriceFilter, FetchProducts]",{"range":"339","text":"340"},"Update the dependencies array to be: [FetchPath]",{"range":"341","text":"342"},"Update the dependencies array to be: [SearchTyped, searchWord]",{"range":"343","text":"344"},{"range":"345","text":"342"},{"range":"346","text":"342"},"Update the dependencies array to be: [props.match.params.itemId, server]",{"range":"347","text":"348"},{"range":"349","text":"348"},"Update the dependencies array to be: [checkAuthorization]",{"range":"350","text":"351"},"Update the dependencies array to be: [fetchUserProfile, loggedIn]",{"range":"352","text":"353"},"Update the dependencies array to be: [password, props.match.params.uuid, server]",{"range":"354","text":"355"},[649,651],"[FetchProducts]",[2107,2141],"[currentPage, endOfPageSet, numberOfTotalPages, pageNumberArray]",[1376,1486],"[currentPage, pageSize, sortBy, direction, minPriceFilter, maxPriceFilter, FetchProducts]",[487,489],"[FetchPath]",[685,697],"[SearchTyped, searchWord]",[464,466],[424,426],[581,608],"[props.match.params.itemId, server]",[644,671],[471,473],"[checkAuthorization]",[628,638],"[fetchUserProfile, loggedIn]",[645,655],"[password, props.match.params.uuid, server]"]